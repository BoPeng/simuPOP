/** \page ref_operator class Operator users guide


  Operator  is a template class accepting Population type as parameter. It
  defines the following interfaces

  \section app_gen Applicable generations.
     start, end, every (interval), at with appropriate default parameters. For example
     - initializer: at=[1] (or start=end=1)
     - every generations: default (start=1, end=-1 (last generation), every=1)
     - every 10 generations: start=1, end=-1, every=10
     - only at the last generation: at = [-1]
     - only at the last two generations: at = [-1, -2]
     .
  function:
     - isActive(cur, end)
     .

  \section app_when check if gen is within the life time of current Operation object

  - application m_stages (pre-, during-, and post-mating)
  - (internal data member) m_m_stages[0,1,2]
  - check by
  - canApplyPreMating()
  - canApplyDuringMating()
  - canApplyPostMating()
  - canApplyPreOrPostMating()
  - application methods
  .

  whenever a Operator.Apply returns fail, the generation will
  stop evolving. This provides some advanced "terminator". Say,
  if the exam-ed allele is fixed, return false and the
  evolving will stop.
    - apply to one population, without checking anything.
      apply(Pop&)
    - requires population and another scratch population,
      need to check application generations.
      applyWithScratch(Pop&, Pop&, gen, lastgen, replicate)
    - apply during mating
      applyDuringMating(Pop&, individual collection?, gen, ....)
    .

\section app_out output stream specification
  each object will have char * output parameter:
  [','|' '|etc]{>|>>}{filename}
  - ">file.txt"     output to this file, once done, close.
  - ">>file.txt"    output to this file, append, close when evolve stop.
  - ",>>file.txt"   output to this file with ',' separation afterwards.
  - "\t>>file.txt"  output to this file with "\t" separation.
  - ">file%rep.txt"   different filename for each replicates.
  - ">file%grp.txt"   different filename for different generation.
  .
  Usage senarios:
  - ">result.txt"      file output, once.   BAD: will only save the last generation.
  - ">result%rrp.txt"    file output once for each replicate.
  - ">result%grp_%rep.txt" file output at active generations, differnt for different replicates.
  - "\t>>stat%rep.txt"   tabbed output for many stators with the same output string.
  .
  differnt replicate has different name. But result from different
  generations will be put together.
  - "\t>>stat.txt"     replicates results will be written to the same file!
  - "\t"               "\t" to cout
  - ""                 to cout
  .
  \todo xompress stage and various flags into one byte



*/


