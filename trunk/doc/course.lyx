#LyX 1.5.0svn created this file. For more info see http://www.lyx.org/
\lyxformat 273
\begin_document
\begin_header
\textclass beamer
\begin_preamble
% meta information
\usepackage{hyperref}
\hypersetup{
  pdfauthor={Bo Peng},
  pdftitle = {Forward-time simulations using simuPOP, an in-depth course},
  pdfkeywords = {simuPOP, tutorial, forward-time, coalescent},
  pdfcreator = {pdflatex + latex/beamer class},
  pdfproducer = {pdflatex},
  pdfpagemode=FullScreen
}

% current scheme does not support logi
\logo{\includegraphics[height=0.8cm]{MDA_logo.jpg}}
\usepackage{tikz}

\newcommand{\inda}[3]{
  #2 node[circle,shade,ball color=#3, scale=0.5](#1){}
}

\newcommand{\teninds}[3]{
\foreach \name/\x in {0/1, 1/1.5, 2/2, 3/2.5, 4/3, 5/3.5, 6/4, 7/4.5, 8/5, 9/5.5} 
    \path \inda{#1\name}{(\x, #2)}{#3}; 
}


\beamertemplateshadingbackground{red!5}{structure!5}

\usepackage{times}
%\usetheme{JuanLesPins}
%\usepackage{beamerthemeshadow}
%\usetheme{Hannover}
\usetheme[hideothersubsections]{PaloAlto}
%\useoutertheme{tree}
%\usecolortheme{beaver}
\usecolortheme{sidebartab}
\usefonttheme{structurebold}
\end_preamble
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily\scriptsize},commentstyle={\color{blue}},frame=tblr,frameround=tttt,language=Python,showspaces=false,showstringspaces=false,stringstyle={\color{magenta}}"
\tracking_changes false
\output_changes false
\author "Bo Peng" 
\end_header

\begin_body

\begin_layout Title
Forward-time simulations using simuPOP, an in-depth course
\begin_inset OptArg
status open

\begin_layout Standard
In-depth course
\end_layout

\end_inset


\end_layout

\begin_layout Author
Bo Peng, Ph.D.
\end_layout

\begin_layout Institute
Department of Epidemiology
\newline
UT MD Anderson Cancer Center
\newline
Houston, TX
\end_layout

\begin_layout Date
June 15th, 2007
\newline
simuPOP workshop
\newline
School of Public Health, Department of Biostatist
ics
\newline
University of Alabama Birmingham
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
This presentation uses examples generated by 'runSampleCode.py course.py'.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard

% Show the table of contents at the beginning
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

% of every section.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

  
\backslash
frame<handout:0>{ 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

    
\backslash
frametitle{Outline}   
\backslash
tableofcontents[sections={
\backslash
thesection},currentsection] }
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
outline
\end_layout

\begin_layout Standard
\begin_inset LatexCommand tableofcontents

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

[subsectionstyle=hide]
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Section
Loading simuPOP
\end_layout

\begin_layout Subsection
simuPOP modules
\end_layout

\begin_layout BeginFrame
simuPOP modules
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
simuPOP provides six types of modules
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Possible allele states:
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset ERT
status open

\begin_layout Standard

short
\end_layout

\end_inset

 
\begin_inset Formula $0\sim2^{8}-1$
\end_inset


\end_layout

\begin_layout Description
\begin_inset ERT
status open

\begin_layout Standard

long
\end_layout

\end_inset

 
\begin_inset Formula $0\sim2^{16}-1$
\end_inset


\end_layout

\begin_layout Description
\begin_inset ERT
status open

\begin_layout Standard

binary
\end_layout

\end_inset

 
\begin_inset Formula $0$
\end_inset

 and 
\begin_inset Formula $1$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Debug information and runtime validation
\end_layout

\begin_deeper
\begin_layout Description
standard with debug information and runtime validation
\end_layout

\begin_layout Description
optimized without debug information and runtime validation
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard
Note
\end_layout

\end_inset

: A Message Passing Interface (parallel) version of simuPOP is under development.
\end_layout

\begin_layout BeginFrame
Loading appropriate module
\end_layout

\begin_layout Enumerate
Use 
\family typewriter
simuOpt.setOptions
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_load.log}[basicstyle={\tiny\ttfamily}]
preview false

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Set environment variables (system dependent)
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
SIMUALLELETYPE = short/long/binary
\end_layout

\begin_layout Itemize

\family typewriter
SIMUOPTIMIZED
\family default
 for optimized version
\end_layout

\end_deeper
\begin_layout Enumerate
Command line argument of scripts using the 
\family typewriter
simuOpt
\family default
 module (
\family typewriter
--optimized)
\end_layout

\begin_layout BeginFrame
\begin_inset ERT
status open

\begin_layout Standard

[t]
\end_layout

\end_inset

Standard modules
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
Perform strict runtime check.
 Produce proper debug information if anything goes wrong.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_standard.log}[basicstyle={\tiny\ttfamily}]
preview false

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{frame}[t,fragile]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
frametitle{Optimized modules}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
No runtime check.
 Improper usages may crash simuPOP.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\tiny\ttfamily}"
inline false
status collapsed

\begin_layout Standard

% setenv SIMUOPTIMIZED
\end_layout

\begin_layout Standard

% python
\end_layout

\begin_layout Standard

Python 2.3.4 (#1, Jan  9 2007, 16:40:09)
\end_layout

\begin_layout Standard

[GCC 3.4.6 20060404 (Red Hat 3.4.6-3)] on linux2
\end_layout

\begin_layout Standard

Type "help", "copyright", "credits" or "license" for more information.
\end_layout

\begin_layout Standard

>>> from simuPOP import *
\end_layout

\begin_layout Standard

simuPOP : Copyright (c) 2004-2006 Bo Peng
\end_layout

\begin_layout Standard

Developmental Version (May 21 2007) for Python 2.3.4
\end_layout

\begin_layout Standard

[GCC 3.4.6 20060404 (Red Hat 3.4.6-3)]
\end_layout

\begin_layout Standard

Random Number Generator is set to mt19937 with random seed 0x2f04b9dc5ca0fc00
\end_layout

\begin_layout Standard

This is the optimied short allele version with 256 maximum allelic states.
\end_layout

\begin_layout Standard

For more information, please visit http://simupop.sourceforge.net,
\end_layout

\begin_layout Standard

or email simupop-list@lists.sourceforge.net (subscription required).
\end_layout

\begin_layout Standard

>>> pop = population(10, loci=[2])
\end_layout

\begin_layout Standard

>>> pop.locusPos(10)
\end_layout

\begin_layout Standard

1.2731974748756028e-313
\end_layout

\begin_layout Standard

>>> pop.individual(20).setAllele(1, 0)
\end_layout

\begin_layout Standard

Segmentation fault
\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
end{frame}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Random Number Generator
\end_layout

\begin_layout BeginFrame
Random Number Generator
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
simuPOP uses RNG from the GNU Scientific Library
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_rng.log}
preview false

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard
Note
\end_layout

\end_inset

: simuPOP uses system clock to set random seeds under windows.
\end_layout

\begin_layout Subsection
Debug information
\end_layout

\begin_layout BeginFrame
Debug information
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
Several ways to turn on/off debug information
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Set environment variable 
\family typewriter
SIMUDEBUG
\end_layout

\begin_layout Itemize
Use function 
\family typewriter
TurnOnDebug, TurnOffDebug
\end_layout

\begin_layout Itemize
Use operator 
\family typewriter
turnOnDebug, turnOffDebug
\family default
 to turn on/off debug at specific generations
\end_layout

\begin_layout BeginFrame
Debug information (cont.)
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_debug.log}[lastline=21]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Getting help
\end_layout

\begin_layout BeginFrame
Getting help
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_help.log}[basicstyle={\ttfamily\tiny}]
preview false

\end_inset


\end_layout

\begin_layout Section
Population
\end_layout

\begin_layout Subsection
Structure of population
\end_layout

\begin_layout BeginFrame
Structure of a population
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{tikzpicture}[scale=0.8]
\end_layout

\begin_layout Standard


\backslash
begin{small}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-4, -7.5) rectangle +(7, 7);
\end_layout

\begin_layout Standard


\backslash
uncover<2-5>{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (-3.5, -6) rectangle +(6, 1.5);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<3>{
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-3.25, -5.75)rectangle +(1.5, 1);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<4>{
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-1.75, -5.75)rectangle +(2, 1);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<5>{
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (0.25, -5.75)rectangle +(2, 1);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<6>{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (-3.5, -4.5)rectangle +(6, 1.5);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<7>{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (-3.5, -3)rectangle +(5, 1.5);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-3.5, -7)rectangle +(6, 1);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,1} 
\backslash
path 
\backslash
inda{a
\backslash
x}{(
\backslash
x, -2)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,1} 
\backslash
path 
\backslash
inda{b
\backslash
x}{(
\backslash
x, -2.5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{c
\backslash
x}{(
\backslash
x, -3.5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -4)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{e
\backslash
x}{(
\backslash
x, -5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{f
\backslash
x}{(
\backslash
x, -5.5)}{green};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-1, 0.5} 
\backslash
path 
\backslash
inda{a
\backslash
x}{(
\backslash
x, -4)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {1.5} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -3.5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-1.5, 0} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-2, 0, 2} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -5.5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {0} 
\backslash
path 
\backslash
inda{a
\backslash
x}{(
\backslash
x, -2)}{red};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3.25, -1.75, 0.25, 2.25} 
\end_layout

\begin_layout Standard

    
\backslash
draw [thick, yellow!80!gray] (
\backslash
x, -5.75) -- (
\backslash
x, -4.75);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3.25, -2.25, 0.25, 2.25} 
\end_layout

\begin_layout Standard

    
\backslash
draw [thick, yellow!80!gray] (
\backslash
x, -4.25) -- (
\backslash
x, -3.25);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3.25, -0.25, 1.25} 
\backslash
draw [thick, yellow!80!gray] (
\backslash
x, -2.75) -- (
\backslash
x, -1.75);
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
only<2->{
\backslash
draw (3, -5.25) node (t1) [right]{Current generation};}
\end_layout

\begin_layout Standard

 
\backslash
only<6->{
\backslash
draw (3, -3.75) node (t1) [right]{Ancestral generation 1};}
\end_layout

\begin_layout Standard

 
\backslash
only<7->{
\backslash
draw (3, -2.25) node (t1) [right]{Ancestral generation 2};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
path 
\backslash
inda{s1}{(-3, 0.5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
path 
\backslash
inda{s1}{(-3, 0)}{red};
\end_layout

\begin_layout Standard

 
\backslash
draw (-2.5, 0.5) node(s1) [right]{Unaffected}
\end_layout

\begin_layout Standard

  (-2.5, 0) node(s2) [right]{Affected};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
draw (-3.5, -6.5) node [right]{gen = 2, numAffected = 5, ...};
\end_layout

\begin_layout Standard

 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
only<8->{
\backslash
draw (3, -6.5) node (t1) [right]{Population variables};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{small}
\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Genotypic structure
\end_layout

\begin_layout BeginFrame
Genotypic Structure
\end_layout

\begin_layout Standard
All individuals have the same genotypic structure, which refers to
\end_layout

\begin_layout Itemize
Ploidy (diploid, haploid, triploid, ...)
\end_layout

\begin_layout Itemize
Number of chromosomes
\end_layout

\begin_layout Itemize
Number of loci on each chromosome
\end_layout

\begin_layout Itemize
Names and positions of loci
\end_layout

\begin_layout Itemize
Names of information fields
\end_layout

\begin_layout Itemize
Allele names
\end_layout

\begin_layout Itemize
Existence of sex chromosome
\end_layout

\begin_layout BeginFrame
Create a population
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_population.log}[lastline=22]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Genotypic structure
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_genostru.log}
preview false

\end_inset


\end_layout

\begin_layout Subsection
Population structure
\end_layout

\begin_layout BeginFrame
Create a population with subpopulations
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_pop_stru.log}
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Mating happens within subpopulation
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_subpop_mating.log}[lastline=12]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Mating happens within subpopulation (cont.)
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_subpop_mating.log}[firstline=13,lastline=38]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Population variables
\end_layout

\begin_layout BeginFrame
Population variables
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_pop_variable.log}[basicstyle={\tiny\ttfamily},lastline=35]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Population variables (cont.)
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_pop_variable.log}[basicstyle={\tiny\ttfamily},firstline=36,lastline=61]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Manipulate population
\end_layout

\begin_layout BeginFrame
Population manipulation
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_pop_manipulate.log}[lastline=18]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Population manipulation (cont.)
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_pop_manipulate.log}[firstline=19,lastline=39]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Population manipulation (cont.)
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_pop_manipulate.log}[firstline=40]
preview false

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Individual
\end_layout

\begin_layout Subsection
Structure of individual
\end_layout

\begin_layout BeginFrame
Structure of individual
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{tikzpicture}[scale=0.8]
\end_layout

\begin_layout Standard


\backslash
begin{small}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-0.5, -6.5) rectangle +(8, 6.5);
\end_layout

\begin_layout Standard

 
\backslash
draw (-0.5, 0.5) node [right]{Assume ploidy = 2, maxAllele = 1};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
shade[color=red] (0, -1.5) rectangle +(7.25, 1);
\end_layout

\begin_layout Standard

 
\backslash
draw [thick, yellow!80!gray] (0, -1) -- (7.25, -1);
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
draw (0.0, -0.25) node [right]{
\backslash
tiny 0};
\end_layout

\begin_layout Standard


\backslash
draw (0.75, -0.25) node [right]{
\backslash
tiny 1};
\end_layout

\begin_layout Standard


\backslash
draw (1.5, -0.25) node [right]{
\backslash
tiny 2};
\end_layout

\begin_layout Standard


\backslash
draw (3.0, -0.25) node [right]{
\backslash
tiny 3};
\end_layout

\begin_layout Standard


\backslash
draw (3.75, -0.25) node [right]{
\backslash
tiny 4};
\end_layout

\begin_layout Standard


\backslash
draw (6.0, -0.25) node [right]{
\backslash
tiny 5};
\end_layout

\begin_layout Standard


\backslash
draw (6.75, -0.25) node [right]{
\backslash
tiny 6};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0,  3.75, 6}  
\backslash
draw (
\backslash
cell, -0.75) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.75, 1.5, 3,  6.75}  
\backslash
draw (
\backslash
cell, -0.75) node [right]{1};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0, 0.75,  6}  
\backslash
draw (
\backslash
cell, -1.25) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {1.5, 3, 3.75,  6.75}  
\backslash
draw (
\backslash
cell, -1.25) node [right]{1};
\end_layout

\begin_layout Standard

 
\backslash
uncover<2->{
\backslash
draw (7.75, -1) node [right]{Chromosome 0};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
draw (0.0, -1.75) node [right]{
\backslash
tiny 0};
\end_layout

\begin_layout Standard


\backslash
draw (2.25, -1.75) node [right]{
\backslash
tiny 1};
\end_layout

\begin_layout Standard


\backslash
draw (3, -1.75) node [right]{
\backslash
tiny 2};
\end_layout

\begin_layout Standard


\backslash
draw (3.75, -1.75) node [right]{
\backslash
tiny 3};
\end_layout

\begin_layout Standard


\backslash
draw (4.5, -1.75) node [right]{
\backslash
tiny 4};
\end_layout

\begin_layout Standard


\backslash
draw (5.25, -1.75) node [right]{
\backslash
tiny 5};
\end_layout

\begin_layout Standard

 
\backslash
shade[color=red] (0, -3) rectangle +(5.75, 1);
\end_layout

\begin_layout Standard

 
\backslash
draw [thick, yellow!80!gray] (0, -2.5) -- (5.75, -2.5);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0,  3, 3.75, 4.5}  
\backslash
draw (
\backslash
cell, -2.25) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in { 2.25, 5.25}  
\backslash
draw (
\backslash
cell, -2.25) node [right]{1};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in { 2.25, 5.25, 4.5}  
\backslash
draw (
\backslash
cell, -2.75) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0,  3, 3.75}  
\backslash
draw (
\backslash
cell, -2.75) node [right]{1};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
uncover<3->{
\backslash
draw (7.75, -2.5) node [right]{Chromosome 1};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
draw (0, -3.6) node [right]{Male};
\end_layout

\begin_layout Standard


\backslash
uncover<4->{
\backslash
draw (7.75, -3.6) node [right]{Sex};} 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
path 
\backslash
inda{s1}{(0.25, -4.5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
draw (0.75, -4.5) node [right]{Affected};
\end_layout

\begin_layout Standard

 
\backslash
uncover<5->{
\backslash
draw (7.75, -4.5) node [right]{Affection status};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
shade[color=red] (0, -6) rectangle +(6.8, 0.75);
\end_layout

\begin_layout Standard

 
\backslash
draw (0, -5.65) node [right]{fitness};
\end_layout

\begin_layout Standard

 
\backslash
draw (2, -5.65) node [right]{father
\backslash
_idx};
\end_layout

\begin_layout Standard

 
\backslash
draw (4.5, -5.65) node [right]{...};
\end_layout

\begin_layout Standard

 
\backslash
uncover<6->{
\end_layout

\begin_layout Standard

 
\backslash
draw (7.75, -5.45) node [right]{Information};
\end_layout

\begin_layout Standard

 
\backslash
draw (7.75, -5.85) node [right]{fields}; }
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {1.75, 4.5} 
\backslash
draw [thick, yellow!80!gray] (
\backslash
cell, -6) -- (
\backslash
cell, -5.25);
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{small}
\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Individual object
\end_layout

\begin_layout BeginFrame
Individual
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_individual.log}
preview false

\end_inset


\end_layout

\begin_layout Subsection
Information fields
\end_layout

\begin_layout BeginFrame
Information fields
\end_layout

\begin_layout Standard
Pieces of information that can be attached to each individual, e.g.
\end_layout

\begin_layout Itemize

\family typewriter
fitness:
\family default
 fitness of each individual, calculated by selectors
\end_layout

\begin_layout Itemize

\family typewriter
father_idx, mother_idx
\family default
: index of parents in the parental generation
\end_layout

\begin_layout Itemize

\family typewriter
old_index: 
\family default
index of an individual in the population where it is sampled
\end_layout

\begin_layout Standard
Or, self-defined
\end_layout

\begin_layout Itemize
birthday
\end_layout

\begin_layout Itemize
geographic location
\end_layout

\begin_layout Itemize
...
\end_layout

\begin_layout BeginFrame
Information fields
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_info.log}[emph={[1]{infoFields,parentsTagger}},emphstyle={[1]\color{red}}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Iterate through a population
\end_layout

\begin_layout BeginFrame
Iterate through a population
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_individuals.log}
preview false

\end_inset


\end_layout

\begin_layout Section
Operator
\end_layout

\begin_layout Subsection
Stage of an operator
\end_layout

\begin_layout BeginFrame
Stage of an operator
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (0, 2.6) rectangle (10, 7);
\end_layout

\begin_layout Standard


\backslash
uncover<1->{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (2.5, 4) rectangle +(1.5, 1);
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
x in {2.75, 3.25, 3.75} 
\backslash
foreach 
\backslash
y in {4.25, 4.75} 
\backslash
path 
\backslash
inda{pre}{(
\backslash
x, 
\backslash
y)}{green};
\end_layout

\begin_layout Standard


\backslash
draw[below right] (2.5, 4) node [text width=2cm, scale=0.8]{Parental generation};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<2->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (1.75, 4.5) -- (2.5, 4.5) node[at start, left, text width=1.9cm, scale=0.8,
 color=red] {Pre-mating operators};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<3->{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (4, 5.5) rectangle +(0.5, 1);
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
y in {5.75, 6.25} 
\backslash
path 
\backslash
inda{during}{(4.25, 
\backslash
y)}{green};
\end_layout

\begin_layout Standard


\backslash
draw [->] (3.25, 5) ..
 controls (3.4, 5.6) and (3.75, 5.8) ..
 (4, 6) node[midway, sloped, above, scale=0.8] {Parents};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<4->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (4.5, 6) -- (5.5, 6);
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (5.5, 5.5) rectangle +(0.5, 1);
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{during}{(5.75, 6)}{green};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<5->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (5, 5) -- (5, 6) node[at start, below, text width=1.9cm, scale=0.8,color
=red] {During-mating operators};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<6->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (6, 6) ..
 controls (6.25, 5.8) and (6.6, 5.6) ..
 (6.75, 5) node[midway, sloped, above, scale=0.8] {Offspring};
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (6, 4) rectangle +(1.5, 1);
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
x in {6.25, 6.75, 7.25} 
\backslash
foreach 
\backslash
y in {4.25, 4.75} 
\backslash
path 
\backslash
inda{post}{(
\backslash
x, 
\backslash
y)}{green};
\end_layout

\begin_layout Standard


\backslash
draw[below right] (6, 4) node [text width=2cm, scale=0.8]{Offspring generation};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<7->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (8.25 , 4.5) -- (7.5, 4.5) node[at start, right, text width=2.1cm,
 scale=0.8, color=red] {Post-mating operators};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Pre-, During-, and PostMating operators
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_op_stage.log}[basicstyle={\ttfamily\tiny}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Applicable generations
\end_layout

\begin_layout BeginFrame
Applicable generations
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_op_gen.log}[basicstyle={\tiny\ttfamily}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Replicates and replicate groups
\end_layout

\begin_layout BeginFrame
Applicable replicates
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_op_rep.log}
preview false

\end_inset


\end_layout

\begin_layout Subsection
Output and output expression
\end_layout

\begin_layout BeginFrame
Output
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_op_output.log}[basicstyle={\tiny\ttfamily},emph={[1]{output,outputExpr}},emphstyle={[1]\color{red}}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Python Operators
\end_layout

\begin_layout BeginFrame
Python operator
\end_layout

\begin_layout Standard
A 
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard
Python operator
\end_layout

\end_inset

 is an operator that calls a user-provided Python function when it is applied
 to a population.
 A 
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard
hybrid operator
\end_layout

\end_inset

 performs its main function at the C++ level, and a 
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard
pure Python operator
\end_layout

\end_inset

 depends on this user-provided function for its functionality.
\end_layout

\begin_layout BeginFrame
A hybrid operator
\end_layout

\begin_layout Standard
A (weird) selector with fitness 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
BB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bb
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
AA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1.01
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1.02
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Aa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.99
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.98
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
aa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1.01
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1.02
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_hybrid.log}[lastline=8]
preview false

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard
Note
\end_layout

\end_inset

: This operator can be more efficiently implemented using other non-Python
 operators.
\end_layout

\begin_layout BeginFrame
A hybrid operator (cont.).
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_hybrid.log}[firstline=9]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
A pure Python operator
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_python_op.log}[basicstyle={\ttfamily\tiny},emph={[1]{pyIndOperator,func,pyOperator}},emphstyle={[1]\color{red}}]
preview false

\end_inset


\end_layout

\begin_layout Section
Mating scheme
\end_layout

\begin_layout BeginFrame
Mating schemes
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
Mating schemes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Populate offspring subpopulation from corresponding parental subpopulation
\end_layout

\begin_layout Itemize
Can not change number of subpopulations
\end_layout

\begin_layout Itemize
Can change subpopulation size
\end_layout

\begin_layout Itemize
Select parents according to their 
\family typewriter
fitness
\family default
 value (information field)
\end_layout

\begin_layout Itemize
Can produce more than one offspring
\end_layout

\begin_layout Subsection
Demographic model
\end_layout

\begin_layout BeginFrame
Demographic model
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_mating_demo.log}[emph={[1]{newSubPopSizeFunc}},emphstyle={[1]\color{red}}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Number of offspring
\end_layout

\begin_layout BeginFrame
Number of offspring
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_mating_offspring.log}[emph={[1]{newSubPopSizeFunc}},emphstyle={[1]\color{red}}]
preview false

\end_inset


\end_layout

\begin_layout Section
Simulator
\end_layout

\begin_layout Subsection
What a simulator does
\end_layout

\begin_layout BeginFrame
Simulator
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label false
status inlined

\begin_layout Standard
A simulator manages
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Replicates of a population
\end_layout

\begin_layout Itemize
A mating scheme
\end_layout

\begin_layout Itemize
Many operators
\end_layout

\begin_layout Standard
and evolve the populations.
\end_layout

\begin_layout Subsection
Simulator operations
\end_layout

\begin_layout BeginFrame
simulator operations
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_simulator_op.log}
preview false

\end_inset


\end_layout

\begin_layout Subsection
Populations
\end_layout

\begin_layout BeginFrame
simulator populations
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/course_simulator_pop.log}
preview false

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
