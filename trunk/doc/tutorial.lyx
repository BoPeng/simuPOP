#LyX 1.5.0svn created this file. For more info see http://www.lyx.org/
\lyxformat 271
\begin_document
\begin_header
\textclass beamer
\begin_preamble
% meta information
\usepackage{hyperref}
\hypersetup{
  pdfauthor={Bo Peng},
  pdftitle = {Forward-time simulations using simuPOP, a tutorial},
  pdfkeywords = {simuPOP, tutorial, forward-time, coalescent},
  pdfcreator = {pdflatex + latex/beamer class},
  pdfproducer = {pdflatex},
  pdfpagemode=FullScreen
}

% current scheme does not support logi
\logo{\includegraphics[height=0.8cm]{MDA_logo.jpg}}
\usepackage{tikz}

\newcommand{\inda}[3]{
  #2 node[circle,shade,ball color=#3, scale=0.5](#1){}
}

\newcommand{\teninds}[3]{
\foreach \name/\x in {0/1, 1/1.5, 2/2, 3/2.5, 4/3, 5/3.5, 6/4, 7/4.5, 8/5, 9/5.5} 
    \path \inda{#1\name}{(\x, #2)}{#3}; 
}


\beamertemplateshadingbackground{red!5}{structure!5}

\usepackage{times}
%\usetheme{JuanLesPins}
%\usepackage{beamerthemeshadow}
%\usetheme{Hannover}
\usetheme[hideothersubsections]{PaloAlto}
%\useoutertheme{tree}
%\usecolortheme{beaver}
\usecolortheme{sidebartab}
\usefonttheme{structurebold}
\end_preamble
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily\scriptsize},commentstyle={\color{blue}},frame=tblr,frameround=tttt,language=Python,showspaces=false,showstringspaces=false,stringstyle={\color{magenta}}"
\tracking_changes false
\output_changes false
\author "Bo Peng" 
\end_header

\begin_body

\begin_layout Title
Forward-time simulations using simuPOP, a tutorial
\begin_inset OptArg
status collapsed

\begin_layout Standard
simuPOP tutorial
\end_layout

\end_inset


\end_layout

\begin_layout Author
Bo Peng, Ph.D.
\end_layout

\begin_layout Institute
Department of Epidemiology
\newline
U.T.
 M.D.
 Anderson Cancer Center
\newline
Houston, TX
\end_layout

\begin_layout Date
June 15th, 2007
\newline
simuPOP workshop
\newline
School of Public Health, Department of Biostatist
ics
\newline
University of Alabama Birmingham
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
This presentation uses examples generated by 'runSampleCode.py tutorial.py'.
 You will need to install R and Rpy, perl and epstopdf to obtain figures
 in the example animation.
 It also uses features in latex listings package version 1.4.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard

% Show the table of contents at the beginning
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

% of every section.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
AtBeginSection[]{
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

  
\backslash
frame<handout:0>{ 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

    
\backslash
frametitle{Outline}   
\backslash
tableofcontents[sections={
\backslash
thesection},currentsection] }
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
outline
\end_layout

\begin_layout Standard
\begin_inset LatexCommand tableofcontents

\end_inset


\begin_inset ERT
status open

\begin_layout Standard

[subsectionstyle=hide]
\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Section
What is simuPOP
\end_layout

\begin_layout Subsection

\color none
Forward- and backward-time simulation
\end_layout

\begin_layout BeginFrame
simuPOP is ...
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard

{
\backslash
bf A 
\backslash
alert<3>{forward-time} population genetics 
\backslash
alert<2>{simulation}  
\backslash
alert<4>{environment}}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<2->
\end_layout

\end_inset

A population genetics simulation program
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<3->
\end_layout

\end_inset

Not coalescent-based
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<4->
\end_layout

\end_inset

Based on an
\color none
 object-oriented scripting language (Python)
\end_layout

\begin_layout BeginFrame
Forward-time simulation
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.0cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (0.5, 1) rectangle (6, 6.5);
\end_layout

\begin_layout Standard


\backslash
only<1->{
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
y/
\backslash
nn in {6/a, 5.5/b, 5/c, 4.5/d, 4/e, 3.5/f, 3/g, 2.5/h, 2/i, 1.5/j}
\end_layout

\begin_layout Standard


\backslash
teninds{
\backslash
nn}{
\backslash
y}{yellow};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (a0) -- (b0) (a4) -- (b1) (a4) -- (b2) (a4)
 -- (b3) (a5) -- (b4) (a5) -- (b5) (a6) -- (b6) (a8) -- (b7) (a8) -- (b8)
 (a9) -- (b9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (b1) -- (c0) (b1) -- (c1) (b1) -- (c2) (b3)
 -- (c3) (b4) -- (c4) (b7) -- (c5) (b7) -- (c6) (b8) -- (c7) (b9) -- (c8)
 (b9) -- (c9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (c1) -- (d0) (c1) -- (d1) (c1) -- (d2) (c5)
 -- (d3) (c5) -- (d4) (c5) -- (d5) (c7) -- (d6) (c7) -- (d7) (c7) -- (d8)
 (c7) -- (d9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (d1) -- (e0) (d1) -- (e1) (d3) -- (e2) (d4)
 -- (e3) (d4) -- (e4) (d5) -- (e5) (d6) -- (e6) (d6) -- (e7) (d7) -- (e8)
 (d7) -- (e9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (e0) -- (f0) (e1) -- (f1) (e4) -- (f2) (e4)
 -- (f3) (e5) -- (f4) (e5) -- (f5) (e6) -- (f6) (e6) -- (f7) (e7) -- (f8)
 (e7) -- (f9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (f0) -- (g0) (f1) -- (g1) (f2) -- (g2) (f3)
 -- (g3) (f4) -- (g4) (f7) -- (g5) (f6) -- (g6) (f7) -- (g7) (f9) -- (g8)
 (f9) -- (g9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (g0) -- (h0) (g1) -- (h1) (g3) -- (h2) (g4)
 -- (h3) (g4) -- (h4) (g6) -- (h5) (g6) -- (h6) (g8) -- (h7) (g8) -- (h8)
 (g9) -- (h9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (h2) -- (i0) (h2) -- (i1) (h2) -- (i2) (h3)
 -- (i3) (h5) -- (i4) (h5) -- (i5) (h6) -- (i6) (h8) -- (i7) (h8) -- (i8)
 (h9) -- (i9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.4pt, yellow] (i1) -- (j0) (i1) -- (j1) (i2) -- (j2) (i2)
 -- (j3) (i2) -- (j4) (i3) -- (j5) (i3) -- (j6) (i3) -- (j7) (i5) -- (j8)
 (i8) -- (j9);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<2->{
\end_layout

\begin_layout Standard


\backslash
teninds{a}{6}{green}
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<3->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (a0) -- (b0) (a4) -- (b1) (a4) -- (b2) (a4)
 -- (b3) (a5) -- (b4) (a5) -- (b5) (a6) -- (b6) (a8) -- (b7) (a8) -- (b8)
 (a9) -- (b9);
\end_layout

\begin_layout Standard


\backslash
teninds{b}{5.5}{green}
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<4->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (b1) -- (c0) (b1) -- (c1) (b1) -- (c2) (b3)
 -- (c3) (b4) -- (c4) (b7) -- (c5) (b7) -- (c6) (b8) -- (c7) (b9) -- (c8)
 (b9) -- (c9);
\end_layout

\begin_layout Standard


\backslash
teninds{c}{5}{green}
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{c5}{(3.5, 5)}{red};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<5->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (c1) -- (d0) (c1) -- (d1) (c1) -- (d2) (c5)
 -- (d3) (c5) -- (d4) (c5) -- (d5) (c7) -- (d6) (c7) -- (d7) (c7) -- (d8)
 (c7) -- (d9);
\end_layout

\begin_layout Standard


\backslash
teninds{d}{4.5}{green}
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{d4}{(3, 4.5)}{red};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<6->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (d1) -- (e0) (d1) -- (e1) (d3) -- (e2) (d4)
 -- (e3) (d4) -- (e4) (d5) -- (e5) (d6) -- (e6) (d6) -- (e7) (d7) -- (e8)
 (d7) -- (e9);
\end_layout

\begin_layout Standard


\backslash
teninds{e}{4}{green}
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{e3}{(2.5, 4)}{red};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<7->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (e0) -- (f0) (e1) -- (f1) (e4) -- (f2) (e4)
 -- (f3) (e5) -- (f4) (e5) -- (f5) (e6) -- (f6) (e6) -- (f7) (e7) -- (f8)
 (e7) -- (f9);
\end_layout

\begin_layout Standard


\backslash
teninds{f}{3.5}{green}
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<8->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (f0) -- (g0) (f1) -- (g1) (f2) -- (g2) (f3)
 -- (g3) (f4) -- (g4) (f7) -- (g5) (f6) -- (g6) (f7) -- (g7) (f9) -- (g8)
 (f9) -- (g9);
\end_layout

\begin_layout Standard


\backslash
teninds{g}{3}{green}
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{g3}{(2.5, 3)}{red};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<9->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (g0) -- (h0) (g1) -- (h1) (g3) -- (h2) (g4)
 -- (h3) (g4) -- (h4) (g6) -- (h5) (g6) -- (h6) (g8) -- (h7) (g8) -- (h8)
 (g9) -- (h9);
\end_layout

\begin_layout Standard


\backslash
teninds{h}{2.5}{green}
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{h2}{(2, 2.5)}{red};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<12>
\end_layout

\begin_layout Standard

{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (0.8, 1.3) rectangle (5.7, 2.2);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<10->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (h2) -- (i0) (h2) -- (i1) (h2) -- (i2) (h3)
 -- (i3) (h5) -- (i4) (h5) -- (i5) (h6) -- (i6) (h8) -- (i7) (h8) -- (i8)
 (h9) -- (i9);
\end_layout

\begin_layout Standard


\backslash
teninds{i}{2}{green}
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{i1}{(1.5, 2)}{red};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<11->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (i1) -- (j0) (i1) -- (j1) (i2) -- (j2) (i2)
 -- (j3) (i2) -- (j4) (i3) -- (j5) (i3) -- (j6) (i3) -- (j7) (i5) -- (j8)
 (i8) -- (j9);
\end_layout

\begin_layout Standard


\backslash
teninds{j}{1.5}{green}
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{j0}{(1, 1.5)}{red};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{j3}{(2.5, 1.5)}{red};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Column
4.0cm
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<2->
\end_layout

\end_inset

Start from an initial population
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<3->
\end_layout

\end_inset

Evolve forward in time, generation by generation, subject to certain number
 of genetic and/or demographic effects
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<12>
\end_layout

\end_inset

Samples are collected from the last several generations
\end_layout

\end_deeper
\begin_layout BeginFrame
Backward-time simulation
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5.0cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (0.5, 1) rectangle (6, 6.5);
\end_layout

\begin_layout Standard


\backslash
only<1->{
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
y/
\backslash
nn in {6/a, 5.5/b, 5/c, 4.5/d, 4/e, 3.5/f, 3/g, 2.5/h, 2/i, 1.5/j} 
\end_layout

\begin_layout Standard


\backslash
teninds{
\backslash
nn}{
\backslash
y}{yellow};
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (a0) -- (b0)  (a4) -- (b1) (a4) -- (b2) (a4)
 -- (b3) (a5) -- (b4) (a5) -- (b5) (a6) -- (b6) (a8) -- (b7) (a8) -- (b8)
 (a9) -- (b9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (b1) -- (c0)  (b1) -- (c1) (b1) -- (c2) (b3)
 -- (c3) (b4) -- (c4) (b7) -- (c5) (b7) -- (c6) (b8) -- (c7) (b9) -- (c8)
 (b9) -- (c9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (c1) -- (d0)  (c1) -- (d1) (c1) -- (d2) (c5)
 -- (d3) (c5) -- (d4) (c5) -- (d5) (c7) -- (d6) (c7) -- (d7) (c7) -- (d8)
 (c7) -- (d9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (d1) -- (e0)  (d1) -- (e1) (d3) -- (e2) (d4)
 -- (e3) (d4) -- (e4) (d5) -- (e5) (d6) -- (e6) (d6) -- (e7) (d7) -- (e8)
 (d7) -- (e9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (e0) -- (f0)  (e1) -- (f1) (e4) -- (f2) (e4)
 -- (f3) (e5) -- (f4) (e5) -- (f5) (e6) -- (f6) (e6) -- (f7) (e7) -- (f8)
 (e7) -- (f9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (f0) -- (g0)  (f1) -- (g1) (f2) -- (g2) (f3)
 -- (g3) (f4) -- (g4) (f7) -- (g5) (f6) -- (g6) (f7) -- (g7) (f9) -- (g8)
 (f9) -- (g9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (g0) -- (h0)  (g1) -- (h1) (g3) -- (h2) (g4)
 -- (h3) (g4) -- (h4) (g6) -- (h5) (g6) -- (h6) (g8) -- (h7) (g8) -- (h8)
 (g9) -- (h9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (h2) -- (i0)  (h2) -- (i1) (h2) -- (i2) (h3)
 -- (i3) (h5) -- (i4) (h5) -- (i5) (h6) -- (i6) (h8) -- (i7) (h8) -- (i8)
 (h9) -- (i9);
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.5pt, yellow] (i1) -- (j0)  (i1) -- (j1) (i2) -- (j2) (i2)
 -- (j3) (i2) -- (j4) (i3) -- (j5) (i3) -- (j6) (i3) -- (j7) (i5) -- (j8)
 (i8) -- (j9);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<2->{
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{j0}{(1, 1.5)}{red};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{j2}{(2, 1.5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{j8}{(5, 1.5)}{green};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<3->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (i1) -- (j0) (i2) -- (j2) (h2) -- (i1) (h2)
 -- (i2);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<4->{
\end_layout

\begin_layout Standard


\backslash
draw [line width=0.6pt, red] (j8) -- (i5) -- (h5) -- (g6) -- (f7) -- (e6)
 -- (d6) -- (c7) -- (b8) -- (a8) -- (b7) -- (c5) -- (d4) -- (e4) -- (f3)
 -- (g3) -- (h2);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
only<5>{
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{a8}{(5, 6)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{b7}{(4.5, 5.5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{b8}{(5, 5.5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{c5}{(3.5, 5)}{red};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{c7}{(4.5, 5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{d4}{(3, 4.5)}{red};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{d6}{(4, 4.5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{e4}{(3, 4)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{e6}{(4, 4)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{f3}{(2.5, 3.5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{f7}{(4.5, 3.5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{g3}{(2.5, 3)}{red};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{g6}{(4, 3)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{h2}{(2, 2.5)}{red};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{h5}{(3.5, 2.5)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{i1}{(1.5, 2)}{red};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{i2}{(2, 2)}{green};
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{i5}{(3.5, 2)}{green};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Column
4.0cm
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<2->
\end_layout

\end_inset

Start from a sample with unknown genotype
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<3->
\end_layout

\end_inset

Coalesce individuals until the most recent common ancestor of all individuals
 is found
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<5>
\end_layout

\end_inset

Starting from the MRCA, proceed forward in time and fill the genotype of
 each individual
\end_layout

\end_deeper
\begin_layout Standard

\end_layout

\begin_layout BeginFrame
Forward vs.
 backward-time simulations
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
vspace{-0.8cm}
\end_layout

\end_inset


\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Block
\begin_inset ERT
status open

\begin_layout Standard

{Backward-time}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<1->
\end_layout

\end_inset

Sample based, 
\newline
efficient
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<2->
\end_layout

\end_inset

Limited selection, recombination models and mating schemes
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<3->
\end_layout

\end_inset

Can not study population properties, or properties of ancestral generations
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<4->
\end_layout

\end_inset

Used mostly for sample generation
\end_layout

\end_deeper
\begin_layout Column
5cm
\end_layout

\begin_layout Block
\begin_inset ERT
status open

\begin_layout Standard

{Forward-time}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<1->
\end_layout

\end_inset

Population based, inefficient
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<2->
\end_layout

\end_inset

Can simulate almost arbitrary evolutionary scenarios
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<3->
\end_layout

\end_inset

Can study population properties and ancestral generations
\end_layout

\begin_layout Itemize
\begin_inset ERT
status inlined

\begin_layout Standard

<4->
\end_layout

\end_inset

Not limited to sample generation
\end_layout

\end_deeper
\end_deeper
\begin_layout BeginFrame
\begin_inset ERT
status open

\begin_layout Standard

[<+->]
\end_layout

\end_inset

Applications of forward-time simulations
\end_layout

\begin_layout Standard
simuPOP can simulate the change of the genetic composition of a population
 in a complicated evolutionary process.
 It can be used to
\end_layout

\begin_layout Itemize
Demonstrate population genetics phenomena
\end_layout

\begin_layout Itemize
Study the impact of genetic and demographic forces on the evolution of a
 population
\end_layout

\begin_layout Itemize
Study the evolution of (complex) genetic diseases
\end_layout

\begin_layout Itemize
Simulate samples to validate gene-mapping methods
\end_layout

\begin_layout Itemize
Study ascertainment methods in simulated populations
\end_layout

\begin_layout Itemize
...
\end_layout

\begin_layout BeginFrame
Simulations of complex human diseases
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
4.7cm
\end_layout

\begin_layout Block
\begin_inset ERT
status open

\begin_layout Standard

{Backward-time}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<1->
\end_layout

\end_inset

Haploid only
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<2->
\end_layout

\end_inset

Additive selection and penetrance models
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<3->
\end_layout

\end_inset

One disease susceptibility locus
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<4->
\end_layout

\end_inset

Generate independent samples of fixed format
\end_layout

\end_deeper
\begin_layout Column
4.7cm
\end_layout

\begin_layout Block
\begin_inset ERT
status open

\begin_layout Standard

{Forward-time}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<1->
\end_layout

\end_inset

No limit on ploidy
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<2->
\end_layout

\end_inset

Arbitrary selection and penetrance models
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<3->
\end_layout

\end_inset

Multiple DSL with interaction
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Standard

<4->
\end_layout

\end_inset

Generate multi-generation populations
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Features of simuPOP
\end_layout

\begin_layout BeginFrame
Forward-time simulation programs
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
uncover<1->{
\end_layout

\end_inset


\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
For specific applications
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Easy to write simple simulations
\end_layout

\begin_layout Itemize
Difficult to write complicated simulations
\end_layout

\begin_layout Itemize
A few programs are available (e.g.
 
\color blue
EasyPOP
\color inherit
, 
\color blue
FPG
\color inherit
, 
\color blue
Nemo
\color inherit
), easy to use if they happen to fit your need
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard

}
\backslash
uncover<2->{
\end_layout

\end_inset


\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
For general purposes
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Difficult to write
\end_layout

\begin_layout Itemize
Easy to set up complicated simulations
\end_layout

\begin_layout Itemize

\color blue
simuPOP
\color inherit
 fits in this category 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
\begin_inset ERT
status open

\begin_layout Standard

[<+->]
\end_layout

\end_inset

What simuPOP does
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label false
status inlined

\begin_layout Standard
simuPOP provides 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
a large number of functions to manipulate populations 
\end_layout

\begin_deeper
\begin_layout Standard

\color blue
copy, split, merge, manipulate individual genotypes, determine affection
 status, save to and load from various formats, generate sample, ...
\end_layout

\end_deeper
\begin_layout Itemize
and a mechanism to evolve populations forward in time
\end_layout

\begin_deeper
\begin_layout Standard

\color blue
subject to arbitrary demographic and genetic forces such as population size
 changes, mutation, migration, recombination, selection, ...
\end_layout

\end_deeper
\begin_layout BeginFrame
Structure of individuals
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{tikzpicture}[scale=0.8]
\end_layout

\begin_layout Standard


\backslash
begin{small}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-0.5, -6.5) rectangle +(8, 6.5);
\end_layout

\begin_layout Standard

 
\backslash
draw (-0.5, 0.5) node [right]{Assume ploidy = 2, maxAllele = 1};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
shade[color=red] (0, -1.5) rectangle +(7.25, 1);
\end_layout

\begin_layout Standard

 
\backslash
draw [thick, yellow!80!gray] (0, -1) -- (7.25, -1);
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
draw (0.0, -0.25) node [right]{
\backslash
tiny 0};
\end_layout

\begin_layout Standard


\backslash
draw (0.75, -0.25) node [right]{
\backslash
tiny 1};
\end_layout

\begin_layout Standard


\backslash
draw (1.5, -0.25) node [right]{
\backslash
tiny 2};
\end_layout

\begin_layout Standard


\backslash
draw (3.0, -0.25) node [right]{
\backslash
tiny 3};
\end_layout

\begin_layout Standard


\backslash
draw (3.75, -0.25) node [right]{
\backslash
tiny 4};
\end_layout

\begin_layout Standard


\backslash
draw (6.0, -0.25) node [right]{
\backslash
tiny 5};
\end_layout

\begin_layout Standard


\backslash
draw (6.75, -0.25) node [right]{
\backslash
tiny 6};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0,  3.75, 6}  
\backslash
draw (
\backslash
cell, -0.75) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.75, 1.5, 3,  6.75}  
\backslash
draw (
\backslash
cell, -0.75) node [right]{1};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0, 0.75,  6}  
\backslash
draw (
\backslash
cell, -1.25) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {1.5, 3, 3.75,  6.75}  
\backslash
draw (
\backslash
cell, -1.25) node [right]{1};
\end_layout

\begin_layout Standard

 
\backslash
uncover<2->{
\backslash
draw (7.75, -1) node [right]{Chromosome 0};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
draw (0.0, -1.75) node [right]{
\backslash
tiny 0};
\end_layout

\begin_layout Standard


\backslash
draw (2.25, -1.75) node [right]{
\backslash
tiny 1};
\end_layout

\begin_layout Standard


\backslash
draw (3, -1.75) node [right]{
\backslash
tiny 2};
\end_layout

\begin_layout Standard


\backslash
draw (3.75, -1.75) node [right]{
\backslash
tiny 3};
\end_layout

\begin_layout Standard


\backslash
draw (4.5, -1.75) node [right]{
\backslash
tiny 4};
\end_layout

\begin_layout Standard


\backslash
draw (5.25, -1.75) node [right]{
\backslash
tiny 5};
\end_layout

\begin_layout Standard

 
\backslash
shade[color=red] (0, -3) rectangle +(5.75, 1);
\end_layout

\begin_layout Standard

 
\backslash
draw [thick, yellow!80!gray] (0, -2.5) -- (5.75, -2.5);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0,  3, 3.75, 4.5}  
\backslash
draw (
\backslash
cell, -2.25) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in { 2.25, 5.25}  
\backslash
draw (
\backslash
cell, -2.25) node [right]{1};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in { 2.25, 5.25, 4.5}  
\backslash
draw (
\backslash
cell, -2.75) node [right]{0};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {0.0,  3, 3.75}  
\backslash
draw (
\backslash
cell, -2.75) node [right]{1};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
uncover<3->{
\backslash
draw (7.75, -2.5) node [right]{Chromosome 1};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
draw (0, -3.6) node [right]{Male};
\end_layout

\begin_layout Standard


\backslash
uncover<4->{
\backslash
draw (7.75, -3.6) node [right]{Sex};} 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
path 
\backslash
inda{s1}{(0.25, -4.5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
draw (0.75, -4.5) node [right]{Affected};
\end_layout

\begin_layout Standard

 
\backslash
uncover<5->{
\backslash
draw (7.75, -4.5) node [right]{Affection status};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
shade[color=red] (0, -6) rectangle +(6.8, 0.75);
\end_layout

\begin_layout Standard

 
\backslash
draw (0, -5.65) node [right]{fitness};
\end_layout

\begin_layout Standard

 
\backslash
draw (2, -5.65) node [right]{father
\backslash
_id};
\end_layout

\begin_layout Standard

 
\backslash
draw (4, -5.65) node [right]{...};
\end_layout

\begin_layout Standard

 
\backslash
uncover<6->{
\end_layout

\begin_layout Standard

 
\backslash
draw (7.75, -5.45) node [right]{Information};
\end_layout

\begin_layout Standard

 
\backslash
draw (7.75, -5.85) node [right]{fields}; }
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
cell in {1.75, 4} 
\backslash
draw [thick, yellow!80!gray] (
\backslash
cell, -6) -- (
\backslash
cell, -5.25);
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{small}
\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Structure of populations
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{tikzpicture}[scale=0.8]
\end_layout

\begin_layout Standard


\backslash
begin{small}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-4, -7.5) rectangle +(7, 7);
\end_layout

\begin_layout Standard


\backslash
uncover<2-5>{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (-3.5, -6) rectangle +(6, 1.5);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<3>{
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-3.25, -5.75)rectangle +(1.5, 1);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<4>{
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-1.75, -5.75)rectangle +(2, 1);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<5>{
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (0.25, -5.75)rectangle +(2, 1);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<6>{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (-3.5, -4.5)rectangle +(6, 1.5);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<7>{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (-3.5, -3)rectangle +(5, 1.5);
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (-3.5, -7)rectangle +(6, 1);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,1} 
\backslash
path 
\backslash
inda{a
\backslash
x}{(
\backslash
x, -2)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,1} 
\backslash
path 
\backslash
inda{b
\backslash
x}{(
\backslash
x, -2.5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{c
\backslash
x}{(
\backslash
x, -3.5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -4)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{e
\backslash
x}{(
\backslash
x, -5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3,-2.5,...,2} 
\backslash
path 
\backslash
inda{f
\backslash
x}{(
\backslash
x, -5.5)}{green};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-1, 0.5} 
\backslash
path 
\backslash
inda{a
\backslash
x}{(
\backslash
x, -4)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {1.5} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -3.5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-1.5, 0} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-2, 0, 2} 
\backslash
path 
\backslash
inda{d
\backslash
x}{(
\backslash
x, -5.5)}{red};
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {0} 
\backslash
path 
\backslash
inda{a
\backslash
x}{(
\backslash
x, -2)}{red};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3.25, -1.75, 0.25, 2.25} 
\end_layout

\begin_layout Standard

    
\backslash
draw [thick, yellow!80!gray] (
\backslash
x, -5.75) -- (
\backslash
x, -4.75);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3.25, -2.25, 0.25, 2.25} 
\end_layout

\begin_layout Standard

    
\backslash
draw [thick, yellow!80!gray] (
\backslash
x, -4.25) -- (
\backslash
x, -3.25);
\end_layout

\begin_layout Standard

 
\backslash
foreach 
\backslash
x in {-3.25, -0.25, 1.25} 
\backslash
draw [thick, yellow!80!gray] (
\backslash
x, -2.75) -- (
\backslash
x, -1.75);
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
only<2->{
\backslash
draw (3, -5.25) node (t1) [right]{Current generation};}
\end_layout

\begin_layout Standard

 
\backslash
only<6->{
\backslash
draw (3, -3.75) node (t1) [right]{Ancestral generation 1};}
\end_layout

\begin_layout Standard

 
\backslash
only<7->{
\backslash
draw (3, -2.25) node (t1) [right]{Ancestral generation 2};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
path 
\backslash
inda{s1}{(-3, 0.5)}{green};
\end_layout

\begin_layout Standard

 
\backslash
path 
\backslash
inda{s1}{(-3, 0)}{red};
\end_layout

\begin_layout Standard

 
\backslash
draw (-2.5, 0.5) node(s1) [right]{Unaffected}
\end_layout

\begin_layout Standard

  (-2.5, 0) node(s2) [right]{Affected};
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
draw (-3.5, -6.5) node [right]{gen = 2, numAffected = 5, ...};
\end_layout

\begin_layout Standard

 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

 
\backslash
only<8->{
\backslash
draw (3, -6.5) node (t1) [right]{Population variables};}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{small}
\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
The evolutionary process
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Standard


\backslash
shade[color=blue] (0, 2.6) rectangle (10, 7);
\end_layout

\begin_layout Standard


\backslash
uncover<1->{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (2.5, 4) rectangle +(1.5, 1);
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
x in {2.75, 3.25, 3.75} 
\backslash
foreach 
\backslash
y in {4.25, 4.75} 
\backslash
path 
\backslash
inda{pre}{(
\backslash
x, 
\backslash
y)}{green};
\end_layout

\begin_layout Standard


\backslash
draw[below right] (2.5, 4) node [text width=2cm, scale=0.8]{Parental generation};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<2->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (1.75, 4.5) -- (2.5, 4.5) node[at start, left, text width=1.9cm, scale=0.8]
 {Pre-mating operators};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<3->{
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (4, 5.5) rectangle +(0.5, 1);
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
y in {5.75, 6.25} 
\backslash
path 
\backslash
inda{during}{(4.25, 
\backslash
y)}{green};
\end_layout

\begin_layout Standard


\backslash
draw [->] (3.25, 5) ..
 controls (3.4, 5.6) and (3.75, 5.8) ..
 (4, 6) node[midway, sloped, above, scale=0.8] {Parents};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<4->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (4.5, 6) -- (5.5, 6);
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (5.5, 5.5) rectangle +(0.5, 1);
\end_layout

\begin_layout Standard


\backslash
path 
\backslash
inda{during}{(5.75, 6)}{green};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<5->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (5, 5) -- (5, 6) node[at start, below, text width=1.9cm, scale=0.8]
 {During-mating operators};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<6->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (6, 6) ..
 controls (6.25, 5.8) and (6.6, 5.6) ..
 (6.75, 5) node[midway, sloped, above, scale=0.8] {Offspring};
\end_layout

\begin_layout Standard


\backslash
shade[color=red] (6, 4) rectangle +(1.5, 1);
\end_layout

\begin_layout Standard


\backslash
foreach 
\backslash
x in {6.25, 6.75, 7.25} 
\backslash
foreach 
\backslash
y in {4.25, 4.75} 
\backslash
path 
\backslash
inda{post}{(
\backslash
x, 
\backslash
y)}{green};
\end_layout

\begin_layout Standard


\backslash
draw[below right] (6, 4) node [text width=2cm, scale=0.8]{Offspring generation};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
uncover<7->{
\end_layout

\begin_layout Standard


\backslash
draw [->] (8.25 , 4.5) -- (7.5, 4.5) node[at start, right, text width=2.1cm,
 scale=0.8] {Post-mating operators};
\end_layout

\begin_layout Standard

}
\end_layout

\begin_layout Standard


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
Involved simuPOP objects: 
\end_layout

\end_inset


\begin_inset ERT
status inlined

\begin_layout Standard


\backslash
alert<1>{
\end_layout

\end_inset

population and individual, 
\begin_inset ERT
status inlined

\begin_layout Standard

}
\backslash
alert<2,5,7>{
\end_layout

\end_inset

operator, 
\begin_inset ERT
status inlined

\begin_layout Standard

}
\backslash
alert<3,4,6>{
\end_layout

\end_inset

mating scheme, 
\begin_inset ERT
status open

\begin_layout Standard

}
\backslash
alert<8>{
\end_layout

\end_inset

 simulator
\begin_inset ERT
status open

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
What distinguishes simuPOP from others
\end_layout

\begin_layout Description
scripting simuPOP is provided as a set of Python modules, and is therefore
 backed by a full-blown object-oriented programming language.
\end_layout

\begin_layout Description
flexibility simuPOP does not impose any limit on the size of genome, population,
 demographic model, etc.
 Using a large number of standard and hybrid (Python-assisted) operators,
 users can simulate almost arbitrarily complex evolutionary processes.
\end_layout

\begin_layout Description
integration Owing to the ‘glue language’ nature of Python, it is easy to
 integrate simuPOP with other languages and programs.
\end_layout

\begin_layout BeginFrame
I like it, but, oohm, why Python??
\end_layout

\begin_layout Itemize
The core of simuPOP is written in C++ for efficiency
\end_layout

\begin_layout Itemize
Python is the glue language, a wrapper of the core
\end_layout

\begin_layout Itemize
Python is used to write simuPOP extensions (user interface etc)
\end_layout

\begin_layout Itemize
The core sometimes calls Python (Python operators) for maximum flexibility
\end_layout

\begin_layout BeginFrame
Do I have to write a script?
\end_layout

\begin_layout Standard
\begin_inset CharStyle Structure
show_label true
status inlined

\begin_layout Standard
simuPOP can be used in two ways:
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You should learn how to write simuPOP scripts if you
\end_layout

\begin_deeper
\begin_layout Itemize
need a particular type of simulation for you own research, and 
\end_layout

\begin_layout Itemize
know exactly what you want to do
\end_layout

\end_deeper
\begin_layout Itemize
You can use existing simuPOP scripts without knowing simuPOP if 
\end_layout

\begin_deeper
\begin_layout Itemize
you need to use an existing simulation scenario to simulate samples or populatio
ns
\end_layout

\begin_layout Itemize
this scenario is implemented in simuPOP
\end_layout

\end_deeper
\begin_layout Subsection
Availability
\end_layout

\begin_layout BeginFrame
Availability
\end_layout

\begin_layout Itemize
\begin_inset LatexCommand url
name "simuPOP website:"
target "http://simupop.sourceforge.net"

\end_inset


\end_layout

\begin_layout Itemize
Mailing list: 
\family typewriter
simupop-list@lists.sourceforge.net
\end_layout

\begin_layout Itemize
License: GPL 2.0
\end_layout

\begin_layout Itemize
Platforms: all OS on which Python is available
\end_layout

\begin_layout Itemize
Monthly release, currently at 0.7.10
\end_layout

\begin_layout Itemize
Documentation: 
\emph on
simuPOP User's Guide 
\emph default
and 
\emph on
simuPOP Reference Manual
\end_layout

\begin_layout Section
Dive into simuPOP
\end_layout

\begin_layout Subsection
Your first simuPOP script
\end_layout

\begin_layout BeginFrame
\begin_inset ERT
status open

\begin_layout Standard

[label=example]
\end_layout

\end_inset

A simple example
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_example1.log}[lastline=16]
preview false

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout BeginFrame
Loading simuPOP module
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_example1.log}[emph={[1]{import,from}},emphstyle={[1]\color{red}},lastline=5]
preview false

\end_inset


\end_layout

\begin_layout Standard
Import the default simuPOP module
\end_layout

\begin_layout BeginFrame
population
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_example1.log}[deleteemph={[1]{import,from}},emph={[2]{population,size,ploidy,loci}},emphstyle={[1]\color{black}},emphstyle={[2]\color{red}},lastline=5]
preview false

\end_inset


\end_layout

\begin_layout Standard
Create a 
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
population
\end_layout

\end_inset

 of 1000 
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
diploid
\end_layout

\end_inset

 individuals, each having two 
\family typewriter

\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
loci
\end_layout

\end_inset

 
\family default
on the first chromosome
\end_layout

\begin_layout BeginFrame
simulator and mating scheme
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_example1.log}[emph={[3]{simulator, population,randomMating, rep}},emphstyle={[1]\color{black}},emphstyle={[2]\color{black}},emphstyle={[3]\color{red}},lastline=5]
preview false

\end_inset


\end_layout

\begin_layout Standard
Create a 
\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
simulator
\end_layout

\end_inset

 that has one replicate of this population, and a random mating scheme
\end_layout

\begin_layout BeginFrame
Operators!
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_example1.log}[emph={[4]{initByValue, recombinator, stat, pyEval}},emphstyle={[1]\color{black}},emphstyle={[2]\color{black}},emphstyle={[3]\color{black}},emphstyle={[4]\color{red}},lastline=16]
preview false

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
only<1>{
\end_layout

\end_inset


\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
initByValue
\end_layout

\end_inset

 is applied before evolution 
\begin_inset ERT
status open

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
only<2>{
\end_layout

\end_inset


\family typewriter

\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
recombinator
\end_layout

\end_inset

 
\family default
is applied at every generation when an offspring is produced 
\begin_inset ERT
status open

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
only<3>{
\end_layout

\end_inset


\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
stat
\end_layout

\end_inset

 is applied to the offspring generation at every generation 
\begin_inset ERT
status open

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
only<4>{
\end_layout

\end_inset


\begin_inset CharStyle Alert
show_label true
status inlined

\begin_layout Standard

\family typewriter
pyEval
\end_layout

\end_inset

 is applied every 10 generations 
\begin_inset ERT
status open

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout AgainFrame
example
\end_layout

\begin_layout BeginFrame
Output of the example
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_example1.log}[firstline=17,lastline=27]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Visualization with R
\end_layout

\begin_layout BeginFrame
Use R to plot
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_example2.log}[emph={[5]{simuRPy,varPlotter}},emphstyle={[1]\color{black}},emphstyle={[2]\color{black}},emphstyle={[3]\color{black}},emphstyle={[4]\color{black}},emphstyle={[5]\color{red}}]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Evolve!
\end_layout

\begin_layout Columns

\end_layout

\begin_deeper
\begin_layout Column
8cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
animate<2-9>
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
begin{center}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
vspace{-1cm}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<1>{
\backslash
includegraphics[width=8cm,height=8cm]{ld10.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<2>{
\backslash
includegraphics[width=8cm,height=8cm]{ld20.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<3>{
\backslash
includegraphics[width=8cm,height=8cm]{ld30.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<4>{
\backslash
includegraphics[width=8cm,height=8cm]{ld40.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<5>{
\backslash
includegraphics[width=8cm,height=8cm]{ld50.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<6>{
\backslash
includegraphics[width=8cm,height=8cm]{ld60.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<7>{
\backslash
includegraphics[width=8cm,height=8cm]{ld70.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<8>{
\backslash
includegraphics[width=8cm,height=8cm]{ld80.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<9>{
\backslash
includegraphics[width=8cm,height=8cm]{ld90.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
only<10>{
\backslash
includegraphics[width=8cm,height=8cm]{ld100.pdf}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Column
3cm
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
vspace{1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Update at every 10 generations
\end_layout

\begin_layout Itemize
LD=0.25 before generation 0
\end_layout

\begin_layout Itemize
LD is calculated at the end of each generation
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
vspace{1cm}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
begin{flushright}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyperlink{ReplayLD}{
\backslash
beamerbutton{Replay}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hypertarget<1>{ReplayLD}{}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{flushright}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
More examples
\end_layout

\begin_layout Subsection
Dynamic population size
\end_layout

\begin_layout BeginFrame
Dynamic population size
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_popsize.log}[emph={[1]{lin_inc,newSubPopSizeFunc}},emphstyle={[1]\color{red}}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Statistics and Population Variables
\end_layout

\begin_layout BeginFrame
Calculate statistics
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_stat.log}[emph={[1]{LD,stat,Fst,pyEval}},emphstyle={[1]\color{red}},lastline=18]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Calculate statistics (cont.)
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_stat.log}[firstline=19]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Hybrid Operator
\end_layout

\begin_layout BeginFrame
A penetrance model
\end_layout

\begin_layout Standard
A penetrance model with two interating loci
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
BB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Bb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
bb
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
AA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.5
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Aa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.5
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
aa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
0.1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_pyPenetrance.log}[lastline=9]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Apply this model
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_pyPenetrance.log}[firstline=11,lastline=31]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Generated sample
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_pyPenetrance.log}[firstline=32]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Python Operator
\end_layout

\begin_layout BeginFrame
Calculate effective number of alleles
\end_layout

\begin_layout Standard
The effective number of alleles can be estimated from a population by
\begin_inset Formula \[
\hat{n}_{e}=\left(\sum_{i>0}\left(\frac{f_{i}}{f_{0}}\right)^{2}\right)^{-1}=\frac{f_{0}^{2}}{\sum_{i>0}f_{i}^{2}}\]

\end_inset

where 
\begin_inset Formula $f_{i}$
\end_inset

 is the frequency of allele 
\begin_inset Formula $i$
\end_inset

, and 
\begin_inset Formula $f_{0}=\sum_{i>0}f_{i}$
\end_inset

 is the total disease allele frequency (assuming 
\begin_inset Formula $0$
\end_inset

 is the only wildtype alelle).
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_eff_alleles.log}[lastline=10]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Use a Python operator
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_eff_alleles.log}[emph={[1]{pyOperator,func,param}},emphstyle={[1]\color{red}},firstline=12]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Read HapMap data
\end_layout

\begin_layout Standard

\end_layout

\begin_layout BeginFrame

\family typewriter
scripts/loadHapMap.py
\end_layout

\begin_layout Standard
Load genotype from hapmap data file
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{../scripts/loadHapMap.py}[emph={[1]{individual,setAllele}},emphstyle={[1]\color{red}},linerange={117-118, 144-154}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
Pick markers from HapMap data
\end_layout

\begin_layout BeginFrame
Pick markers from HapMap data
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{log/tutorial_hapmap.log}[linerange={1-20,30-30}]
preview false

\end_inset


\end_layout

\begin_layout Subsection
User interface
\end_layout

\begin_layout BeginFrame
Use of 
\family typewriter
simuOpt.py
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{../scripts/simuLDDecay.py}[basicstyle={\ttfamily\tiny},linerange={17-31,40-47,80-80}]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Process parameters
\end_layout

\begin_layout Standard
\begin_inset Include \lstinputlisting{../scripts/simuLDDecay.py}[linerange={94-108}]
preview false

\end_inset


\end_layout

\begin_layout BeginFrame
Parameter dialog
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename simuLDDecay.png
	lyxscale 50
	width 8cm

\end_inset


\end_layout

\begin_layout Section
Bundled Scripts
\end_layout

\begin_layout Subsection
simuLDDecay.py
\end_layout

\begin_layout BeginFrame
simuLDDecay.py
\end_layout

\begin_layout Itemize
simulate the decay of linkage disequilibrium with recombination
\end_layout

\begin_layout Itemize
can control population size, recombination rate, number of replicates and
 generations
\end_layout

\begin_layout Itemize
use 
\family typewriter
simuRPy.py 
\family default
to visualize the decay of LD
\end_layout

\begin_layout Subsection
simuNeutralSNPs.py
\end_layout

\begin_layout BeginFrame
simuNeutralSNPs.py
\end_layout

\begin_layout Itemize
simulate the evolution of unlinked SNP markers
\end_layout

\begin_layout Itemize
observe the distribution of minor allele frequency
\end_layout

\begin_layout Itemize
no selection
\end_layout

\begin_layout Subsection
simuForward.py
\end_layout

\begin_layout BeginFrame
simuForward.py
\end_layout

\begin_layout Itemize
Traditional forward-time simulation
\end_layout

\begin_layout Itemize
Use a dynamic-selector to control disease allele frequency in a disease
 introduction stage
\end_layout

\begin_layout Itemize
Restart simulation when a disease allele get lost
\end_layout

\begin_layout Subsection
simuComplexDisease.py
\end_layout

\begin_layout BeginFrame
simuComplexDisease.py
\end_layout

\begin_layout Itemize
New forward-time simulation method (Peng, 2007)
\end_layout

\begin_layout Itemize
Simulate the trajectory of disease allele frequencies backward in time
\end_layout

\begin_layout Itemize
Controlled forward-time simulation method that follows simulated disease
 allele frequency
\end_layout

\begin_layout Subsection
simuCluster.py
\end_layout

\begin_layout BeginFrame
simuCluster.py
\end_layout

\begin_layout Itemize
A utility script to help running simuPOP scripts on a cluster system
\end_layout

\begin_layout Itemize
User provides a template scripts and a list of paramters
\end_layout

\begin_layout Itemize
This script generate scripts and submit the jobs
\end_layout

\begin_layout BeginFrame
Acknowledgments
\end_layout

\begin_layout Itemize
W.M.
 Keck Foundation to the Gulf Coast Consortia through the Keck Center for
 Computational and Structural Biology
\end_layout

\begin_layout Itemize
Rice Terascale Cluster funded by NSF under Grant EIA-0216467, Intel, and
 HP
\end_layout

\begin_layout Itemize
M.D.
 Anderson Cancer Center High Performance Cluster
\end_layout

\begin_layout Itemize
BP was supported in part by a grant CA75432 from NCI
\end_layout

\begin_layout Itemize
Yaji Xu helped with all the figures in this talk
\end_layout

\begin_layout BeginFrame
For further reading
\end_layout

\begin_layout Standard
\begin_inset ERT
status inlined

\begin_layout Standard


\backslash
beamertemplatearticlebibitems
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset LatexCommand bibitem
label "Peng and Kimmel, 2005"
key "Peng2005"

\end_inset


\series bold
Bo Peng
\series default
 and Marek Kimmel (2005).
 simuPOP: a forward-time population genetics simulation environment.
 
\emph on
Bioinformatics,
\emph default
 21:3686--3687
\end_layout

\begin_layout Bibliography
\begin_inset LatexCommand bibitem
label "Peng and Kimmel, 2007"
key "Peng2007"

\end_inset


\series bold
Bo Peng
\series default
 and Marek Kimmel (2007) Simulations provide support for the common disease
 common variant hypothesis.
 
\emph on
Genetics.

\emph default
 175:763-776
\emph on
.
\end_layout

\begin_layout Bibliography
\begin_inset LatexCommand bibitem
label "Peng et al, 2007"
key "Peng2007a"

\end_inset


\series bold
Bo Peng
\series default
, Christopher I.
 Amos and Marek Kimmel (2007) Forward-time simulations of complex human
 diseases.
 
\emph on
PLoS Genetics, 
\emph default
3(3):e47
\emph on
.
\end_layout

\begin_layout BeginFrame
That is all
\end_layout

\begin_layout Standard
For more details, please check out
\end_layout

\begin_layout Itemize
simuPOP user's guide
\end_layout

\begin_layout Itemize
simuPOP reference manual
\end_layout

\begin_layout Itemize
Another presentation about the details of each simuPOP components
\end_layout

\begin_layout Standard
Under the 
\family typewriter
doc
\family default
 directory of your simuPOP distribution.
\end_layout

\begin_layout EndFrame

\end_layout

\end_body
\end_document
