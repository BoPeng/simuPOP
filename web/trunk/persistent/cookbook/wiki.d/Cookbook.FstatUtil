version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; GTB6; QQDownload 1.7; SLCC1; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30618; MAXTHON 2.0)
author=
charset=ISO-8859-1
csum=
ctime=1245946634
host=127.0.0.1
name=Cookbook.FstatUtil
rev=8
targets=
text=(:title Export FSTAT data file:)%0a%0a%25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:fstatUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|fstatUtil.py%0a%0a%25red%25 [+++Page and script currently under construction, please refer later.+++]%25%25%0a%0aThis function allows you to export your simulated populations into a FSTAT readable data file.%0a%0aFSTAT is a computer package for PCs which estimates and tests gene diversities and differentiation statistics from codominant genetic markers. It computes both Nei and Weir & Cockerham families of estimators of gene diversities and F-statistics, and tests them using randomisation methods.%0a%0a[[http://www2.unil.ch/popgen/softwares/fstat.htm | What FSTAT does/Download FSTAT]]%0a%0a%25blue%25 [+FSTAT format:+]%0a%0a%25red%25 Total number of individuals in the data set needs to be less than 20,000%0a %0a%25blue%25 First line: %0a  contains 4 numbers separated by any number of spaces: %0a  number of samples, np (‹=200)%0a  number of loci, nl (‹=100)%0a  highest number used to label an allele, nu (‹=999)%0a  a 1 if the code for alleles is a one digit number (1-9), a 2 if code for  %0a    alleles is a 2 digit number (01-99) or a 3 if code for alleles is a 3 digit %0a    number (001-999) %0a%0a%25blue%25 Followed by nl lines: %0a  each containing the name of a locus, in the order they will appear in the rest %0a  of the file%0a%0a%25blue%25 Followed by np lines:%0a  On line nl+2, a series of numbers as follow: 1 0102 0103 0101 0203 0 0303%0a      first number: identifies the sample to which the individual belongs%0a      second: the genotype of the individual at the first locus, coded with a 2 %0a        digits number for each allele%0a      third: the genotype at the second locus, until locus nl is entered (in the %0a        example above, nl=6)%0a  Missing genotypes are encoded with 0 (0001 or 0100 are not a valid format, so%0a    both alleles at a locus have to be known, otherwise, the genotype is %0a    considered as missing)%0a  no empty lines are needed between samples%0a  number of spaces between genotypes can be anything%0a  Numbering of samples need not be sequential%0a  the number of samples np needs to be the same as the largest sample identifier%0a  Samples need not to be ordered%0a  nu needs to be equal to the largest code given to an allele (even if there are %0a    less than nu alleles)%0a%0aUsing the following function,%0a %0a=python [=%0adef SaveFstat(pop, output='', maxAllele=0, loci=[], shift=1,%0a    combine=None):%0a    if output != '':%0a        file = output%0a    else:%0a        raise exceptions.ValueError, "Please specify output"%0a    # open file%0a    try:%0a        f = open(file, "w")%0a    except exceptions.IOError:%0a        raise exceptions.IOError, "Can not open file " + file + " to write."%0a    #%0a    # file is opened.%0a    np = pop.numSubPop()%0a    if np > 200:%0a        print "Warning: Current version (2.93) of FSTAT can not handle more than 200 samples"%0a    if loci == []:%0a        loci = range(pop.totNumLoci())%0a    nl = len(loci)%0a    if nl > 100:%0a        print "Warning: Current version (2.93) of FSTAT can not handle more than 100 loci"%0a    if maxAllele != 0:%0a        nu = maxAllele%0a    else:%0a        nu = max([max(ind.genotype()) for ind in pop.individuals()]) + 1%0a    if nu > 999:%0a        print "Warning: Current version (2.93) of FSTAT can not handle more than 999 alleles at each locus"%0a        print "If you used simuPOP_la library, you can specify maxAllele in population constructure"%0a    if nu %3c 10:%0a        nd = 1%0a    elif nu %3c 100:%0a        nd = 2%0a    elif nu %3c 1000:%0a        nd = 3%0a    else: %0a        raise ValueError('FSTAT can not handle this now, how many digits?')%0a    # write the first line%0a    f.write( '%25d %25d %25d %25d\n' %25 (np, nl, nu, nd) )%0a    # following lines with loci name.%0a    for loc in loci:%0a        f.write( pop.locusName(loc) +"\n");%0a    gs = pop.totNumLoci()%0a    for sp in range(0, pop.numSubPop()):%0a        # genotype of subpopulation sp, individuals are%0a        # rearranged in perfect order%0a        gt = pop.genotype(sp)%0a        for ind in range(0, pop.subPopSize(sp)):%0a            f.write("%25d " %25 (sp+1))%0a            p1 = 2*gs*ind          # begining of first hemo copy%0a            p2 = 2*gs*ind + gs     # second%0a            for al in loci: # allele%0a                # change from 0 based allele to 1 based allele%0a                if combine is None:%0a                    ale1 = gt[p1+al] + shift%0a                    ale2 = gt[p2+al] + shift%0a                    f.write('%25%250%25dd%25%250%25dd ' %25 (nd, nd) %25 (ale1, ale2))%0a                else:%0a                    f.write('%25%250%25dd' %25 nd %25 combine([gt[p1+al], gt[p2+al]]))%0a            f.write( "\n")%0a    f.close()%0a=]%0a%0aif we define the population as %0a=python [=%0a    pop = population(size=[3,4,5], loci=[2,3],%0a                     lociNames=['loc1-1','loc1-2','loc2-1','loc2-2','loc2-3'])%0a    InitByFreq(pop, [.1, .2, .3, .4])%0a=]%0awe may get the output file%0a=python [=%0a3 5 4 1%0aloc1-1%0aloc1-2%0aloc2-1%0aloc2-2%0aloc2-3%0a1 23 24 31 33 24 %0a1 42 34 13 43 34 %0a1 43 23 33 42 13 %0a2 44 32 43 12 32 %0a2 21 44 24 44 33 %0a2 41 24 33 24 42 %0a2 43 33 44 42 34 %0a3 43 44 44 42 24 %0a3 31 24 43 44 43 %0a3 44 23 22 22 43 %0a3 32 44 34 42 32 %0a3 24 42 43 43 44%0a=]%0a
time=1250665214
title=Export FSTAT data file
author:1250665214=
diff:1250665214:1250665061:=115,116c115%0a%3c     pop = population(size=[3,4,5], loci=[2,3],%0a%3c                      lociNames=['loc1-1','loc1-2','loc2-1','loc2-2','loc2-3'])%0a---%0a>     pop = population(size=[3,4,5], loci=[2,3])%0a
host:1250665214=127.0.0.1
author:1250665061=
diff:1250665061:1250664859:=120c120%0a%3c 3 5 4 1%0a---%0a> 3 5 4 3%0a126,137c126,137%0a%3c 1 23 24 31 33 24 %0a%3c 1 42 34 13 43 34 %0a%3c 1 43 23 33 42 13 %0a%3c 2 44 32 43 12 32 %0a%3c 2 21 44 24 44 33 %0a%3c 2 41 24 33 24 42 %0a%3c 2 43 33 44 42 34 %0a%3c 3 43 44 44 42 24 %0a%3c 3 31 24 43 44 43 %0a%3c 3 44 23 22 22 43 %0a%3c 3 32 44 34 42 32 %0a%3c 3 24 42 43 43 44%0a---%0a> 1 004004 002004 004003 002004 004004 %0a> 1 002003 004004 002004 001002 004003 %0a> 1 003002 002004 004004 004002 001003 %0a> 2 004004 004004 003003 004004 002004 %0a> 2 003003 004004 004001 004001 001002 %0a> 2 001004 003004 003002 002004 004004 %0a> 2 002004 004004 002003 003003 004003 %0a> 3 001004 004004 002004 001002 003004 %0a> 3 004004 003003 004002 004002 004004 %0a> 3 004003 002003 004002 003002 004001 %0a> 3 004003 004002 001002 003004 002003 %0a> 3 004001 004002 004003 004004 004004 %0a
host:1250665061=127.0.0.1
author:1250664859=
diff:1250664859:1250578125:=51,110d50%0a%3c def SaveFstat(pop, output='', maxAllele=0, loci=[], shift=1,%0a%3c     combine=None):%0a%3c     if output != '':%0a%3c         file = output%0a%3c     else:%0a%3c         raise exceptions.ValueError, "Please specify output"%0a%3c     # open file%0a%3c     try:%0a%3c         f = open(file, "w")%0a%3c     except exceptions.IOError:%0a%3c         raise exceptions.IOError, "Can not open file " + file + " to write."%0a%3c     #%0a%3c     # file is opened.%0a%3c     np = pop.numSubPop()%0a%3c     if np > 200:%0a%3c         print "Warning: Current version (2.93) of FSTAT can not handle more than 200 samples"%0a%3c     if loci == []:%0a%3c         loci = range(pop.totNumLoci())%0a%3c     nl = len(loci)%0a%3c     if nl > 100:%0a%3c         print "Warning: Current version (2.93) of FSTAT can not handle more than 100 loci"%0a%3c     if maxAllele != 0:%0a%3c         nu = maxAllele%0a%3c     else:%0a%3c         nu = max([max(ind.genotype()) for ind in pop.individuals()]) + 1%0a%3c     if nu > 999:%0a%3c         print "Warning: Current version (2.93) of FSTAT can not handle more than 999 alleles at each locus"%0a%3c         print "If you used simuPOP_la library, you can specify maxAllele in population constructure"%0a%3c     if nu %3c 10:%0a%3c         nd = 1%0a%3c     elif nu %3c 100:%0a%3c         nd = 2%0a%3c     elif nu %3c 1000:%0a%3c         nd = 3%0a%3c     else: %0a%3c         raise ValueError('FSTAT can not handle this now, how many digits?')%0a%3c     # write the first line%0a%3c     f.write( '%25d %25d %25d %25d\n' %25 (np, nl, nu, nd) )%0a%3c     # following lines with loci name.%0a%3c     for loc in loci:%0a%3c         f.write( pop.locusName(loc) +"\n");%0a%3c     gs = pop.totNumLoci()%0a%3c     for sp in range(0, pop.numSubPop()):%0a%3c         # genotype of subpopulation sp, individuals are%0a%3c         # rearranged in perfect order%0a%3c         gt = pop.genotype(sp)%0a%3c         for ind in range(0, pop.subPopSize(sp)):%0a%3c             f.write("%25d " %25 (sp+1))%0a%3c             p1 = 2*gs*ind          # begining of first hemo copy%0a%3c             p2 = 2*gs*ind + gs     # second%0a%3c             for al in loci: # allele%0a%3c                 # change from 0 based allele to 1 based allele%0a%3c                 if combine is None:%0a%3c                     ale1 = gt[p1+al] + shift%0a%3c                     ale2 = gt[p2+al] + shift%0a%3c                     f.write('%25%250%25dd%25%250%25dd ' %25 (nd, nd) %25 (ale1, ale2))%0a%3c                 else:%0a%3c                     f.write('%25%250%25dd' %25 nd %25 combine([gt[p1+al], gt[p2+al]]))%0a%3c             f.write( "\n")%0a%3c     f.close()%0a
host:1250664859=127.0.0.1
author:1250578125=
diff:1250578125:1248278691:=29,30d28%0a%3c %0a%3c %25blue%25 Followed by np lines:%0a
host:1250578125=127.0.0.1
author:1248278691=
diff:1248278691:1248193986:=5c5%0a%3c %25red%25 [+++Page and script currently under construction, please refer later.+++]%25%25%0a---%0a> %25red%25 [++Currently under construction, please refer later.++]%25%25%0a
host:1248278691=127.0.0.1
author:1248193986=
diff:1248193986:1247641154:=3c3%0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:fstatUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|fstatUtil.py%0a---%0a> %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:ExportPOPGENE.py | http://simupop.sourceforge.net/images/download.jpg]]|ExportFSTAT.py%0a
host:1248193986=127.0.0.1
author:1247641154=
diff:1247641154:1245946634:=1,76c1,2%0a%3c (:title Export FSTAT data file:)%0a%3c %0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:ExportPOPGENE.py | http://simupop.sourceforge.net/images/download.jpg]]|ExportFSTAT.py%0a%3c %0a%3c %25red%25 [++Currently under construction, please refer later.++]%25%25%0a%3c %0a%3c This function allows you to export your simulated populations into a FSTAT readable data file.%0a%3c %0a%3c FSTAT is a computer package for PCs which estimates and tests gene diversities and differentiation statistics from codominant genetic markers. It computes both Nei and Weir & Cockerham families of estimators of gene diversities and F-statistics, and tests them using randomisation methods.%0a%3c %0a%3c [[http://www2.unil.ch/popgen/softwares/fstat.htm | What FSTAT does/Download FSTAT]]%0a%3c %0a%3c %25blue%25 [+FSTAT format:+]%0a%3c %0a%3c %25red%25 Total number of individuals in the data set needs to be less than 20,000%0a%3c  %0a%3c %25blue%25 First line: %0a%3c   contains 4 numbers separated by any number of spaces: %0a%3c   number of samples, np (‹=200)%0a%3c   number of loci, nl (‹=100)%0a%3c   highest number used to label an allele, nu (‹=999)%0a%3c   a 1 if the code for alleles is a one digit number (1-9), a 2 if code for  %0a%3c     alleles is a 2 digit number (01-99) or a 3 if code for alleles is a 3 digit %0a%3c     number (001-999) %0a%3c %0a%3c %25blue%25 Followed by nl lines: %0a%3c   each containing the name of a locus, in the order they will appear in the rest %0a%3c   of the file%0a%3c   On line nl+2, a series of numbers as follow: 1 0102 0103 0101 0203 0 0303%0a%3c       first number: identifies the sample to which the individual belongs%0a%3c       second: the genotype of the individual at the first locus, coded with a 2 %0a%3c         digits number for each allele%0a%3c       third: the genotype at the second locus, until locus nl is entered (in the %0a%3c         example above, nl=6)%0a%3c   Missing genotypes are encoded with 0 (0001 or 0100 are not a valid format, so%0a%3c     both alleles at a locus have to be known, otherwise, the genotype is %0a%3c     considered as missing)%0a%3c   no empty lines are needed between samples%0a%3c   number of spaces between genotypes can be anything%0a%3c   Numbering of samples need not be sequential%0a%3c   the number of samples np needs to be the same as the largest sample identifier%0a%3c   Samples need not to be ordered%0a%3c   nu needs to be equal to the largest code given to an allele (even if there are %0a%3c     less than nu alleles)%0a%3c %0a%3c Using the following function,%0a%3c  %0a%3c =python [=%0a%3c =]%0a%3c %0a%3c if we define the population as %0a%3c =python [=%0a%3c     pop = population(size=[3,4,5], loci=[2,3])%0a%3c     InitByFreq(pop, [.1, .2, .3, .4])%0a%3c =]%0a%3c we may get the output file%0a%3c =python [=%0a%3c 3 5 4 3%0a%3c loc1-1%0a%3c loc1-2%0a%3c loc2-1%0a%3c loc2-2%0a%3c loc2-3%0a%3c 1 004004 002004 004003 002004 004004 %0a%3c 1 002003 004004 002004 001002 004003 %0a%3c 1 003002 002004 004004 004002 001003 %0a%3c 2 004004 004004 003003 004004 002004 %0a%3c 2 003003 004004 004001 004001 001002 %0a%3c 2 001004 003004 003002 002004 004004 %0a%3c 2 002004 004004 002003 003003 004003 %0a%3c 3 001004 004004 002004 001002 003004 %0a%3c 3 004004 003003 004002 004002 004004 %0a%3c 3 004003 002003 004002 003002 004001 %0a%3c 3 004003 004002 001002 003004 002003 %0a%3c 3 004001 004002 004003 004004 004004 %0a%3c =]%0a---%0a> %0a> %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:fstatUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|fstatUtil.py%0a\ No newline at end of file%0a
host:1247641154=127.0.0.1
author:1245946634=
diff:1245946634:1245946634:=1,2d0%0a%3c %0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:fstatUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|fstatUtil.py%0a\ No newline at end of file%0a
host:1245946634=127.0.0.1
