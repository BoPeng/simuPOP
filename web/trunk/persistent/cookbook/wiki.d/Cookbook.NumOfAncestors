version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 GTB5 (.NET CLR 3.5.30729)
author=
charset=ISO-8859-1
csum=
ctime=1232504506
host=127.0.0.1
name=Cookbook.NumOfAncestors
rev=7
targets=
text=(:title An example about Python operator:)%0a%0a%25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:simuNumOfAncestors.py | http://simupop.sourceforge.net/images/download.jpg]]|simuNumOfAncestors.py%0a%0a%0a%0aThis program counts the average number of ancestors who contribute%0agenotype to an offspring after a number of generations. The script%0acreates a population and initialize all alleles of an individual with%0atheir indexes.%0a%0a[@%0aInd 0: 000000000000000 000000000000000%0aInd 1: 111111111111111 111111111111111%0a...%0aInd x: xxxxxxxxxxxxxxx xxxxxxxxxxxxxxx%0a@]%0a%0aThe population is evolved for a number of generations, following a%0aMendelian inheritance model. Recombinations are applied so that offspring%0acan inherit genotype from both parental homologous chromosomes.%0a%0aAt the end of the evolution, an individual may have a genome that consists%0aof sequences inherited from multiple ancestors, which can be used to%0acount the number of ancestors who contribute genotype to this individual.%0aFor example,%0a%0a[@%0aInd 0: 111122222225555 000022222224444%0a@]%0a%0ahas genotype from 5 ancestors (0, 1, 2, 4, 5). This script outputs%0athe average number of ancestors at each generation, for a given%0anumber of replicate populations.%0a%0aGiven a population, this function counts the number of ancestors for each individual and print out the average number.%0a%0a=python [=%0adef avgNumOfAncestors(pop):%0a    totAnc = 0%0a    for indi in pop.individuals():%0a        totAnc += len(set(indi.genotype()));%0a    print '%25.2f\t' %25 (totAnc * 1.0 / pop.popSize()),%0a    return True%0a=]%0a%0aThis is how the function @@avgNumOfAncestors@@ is called in a Python operator:%0a%0a=python [=%0adef simuNumOfAncestors(popSize, lociNum, gen, recRate, numRep):%0a    '''%0a    popSize: population size%0a    lociNum: number of loci%0a    gen:     generations to evolve%0a    recRate: recombination rate%0a    numRep:  number of replicates%0a    '''%0a    pop = population(size=popSize, ploidy=2, loci=[lociNum])%0a%0a    # initialize each individual with a different allele%0a    for idx,ind in enumerate(pop.individuals()):%0a        ind.setGenotype([idx])%0a    #%0a    simu = simulator(pop, randomMating(ops=recombinator(rates=recRate)), rep = numRep)%0a    simu.evolve(%0a        initOps = initSex(),%0a        postOps=[%0a            pyOperator(func=avgNumOfAncestors),%0a            pyOutput('\n', reps=-1)%0a        ],%0a        gen=gen%0a    )%0a=]%0a%0aThe script will produce results similar to:%0a%0a=python [=%0a2.00	2.00	2.00	2.00	2.00	%0a2.17	2.18	2.19	2.19	2.20	%0a2.36	2.37	2.38	2.36	2.40	%0a2.52	2.62	2.56	2.52	2.58	%0a2.76	2.80	2.77	2.74	2.77	%0a2.93	2.97	2.96	2.94	2.95	%0a3.12	3.18	3.20	3.12	3.15	%0a3.32	3.42	3.37	3.34	3.38	%0a3.53	3.60	3.58	3.46	3.60	%0a3.75	3.87	3.79	3.65	3.79	%0a3.93	4.10	3.95	3.82	3.90	%0a4.16	4.28	4.15	4.00	4.11	%0a4.27	4.40	4.25	4.13	4.33	%0a4.55	4.61	4.47	4.33	4.53	%0a4.71	4.80	4.68	4.52	4.68	%0a4.86	5.00	4.82	4.75	4.92	%0a5.05	5.11	4.99	4.93	5.07	%0a5.21	5.37	5.19	5.07	5.27	%0a5.38	5.57	5.29	5.27	5.34	%0a5.58	5.77	5.45	5.47	5.50%0a=]
time=1261111368
title=An example about Python operator
author:1261111368=
diff:1261111368:1261098268:=64c64%0a%3c     simu = simulator(pop, randomMating(ops=recombinator(rates=recRate)), rep = numRep)%0a---%0a>     simu = simulator(pop, randomMating(), rep = numRep)%0a66,67c66,67%0a%3c         initOps = initSex(),%0a%3c         postOps=[%0a---%0a>         ops=[%0a>             recombinator(rates=recRate),%0a69c69%0a%3c             pyOutput('\n', reps=-1)%0a---%0a>             pyOutput('\n', rep=-1)%0a
host:1261111368=127.0.0.1
author:1261098268=
diff:1261098268:1261098247:=77d76%0a%3c =python [=%0a98d96%0a%3c =]%0a\ No newline at end of file%0a
host:1261098268=127.0.0.1
author:1261098247=
diff:1261098247:1261098089:=76a77%0a> =python [=%0a96a98%0a> =]%0a\ No newline at end of file%0a
host:1261098247=127.0.0.1
author:1261098089=
diff:1261098089:1244768941:=74,98d73%0a%3c %0a%3c The script will produce results similar to:%0a%3c %0a%3c =python [=%0a%3c 2.00	2.00	2.00	2.00	2.00	%0a%3c 2.17	2.18	2.19	2.19	2.20	%0a%3c 2.36	2.37	2.38	2.36	2.40	%0a%3c 2.52	2.62	2.56	2.52	2.58	%0a%3c 2.76	2.80	2.77	2.74	2.77	%0a%3c 2.93	2.97	2.96	2.94	2.95	%0a%3c 3.12	3.18	3.20	3.12	3.15	%0a%3c 3.32	3.42	3.37	3.34	3.38	%0a%3c 3.53	3.60	3.58	3.46	3.60	%0a%3c 3.75	3.87	3.79	3.65	3.79	%0a%3c 3.93	4.10	3.95	3.82	3.90	%0a%3c 4.16	4.28	4.15	4.00	4.11	%0a%3c 4.27	4.40	4.25	4.13	4.33	%0a%3c 4.55	4.61	4.47	4.33	4.53	%0a%3c 4.71	4.80	4.68	4.52	4.68	%0a%3c 4.86	5.00	4.82	4.75	4.92	%0a%3c 5.05	5.11	4.99	4.93	5.07	%0a%3c 5.21	5.37	5.19	5.07	5.27	%0a%3c 5.38	5.57	5.29	5.27	5.34	%0a%3c 5.58	5.77	5.45	5.47	5.50%0a%3c =]%0a\ No newline at end of file%0a
host:1261098089=127.0.0.1
author:1244768941=
diff:1244768941:1244768925:=69c69%0a%3c             pyOutput('\n', rep=-1)%0a---%0a>             pyOutput('\n', rep=REP_LAST)%0a
host:1244768941=127.0.0.1
author:1244768925=
diff:1244768925:1232504506:=67c67%0a%3c             recombinator(rates=recRate),%0a---%0a>             recombinator(rate=recRate),%0a
host:1244768925=127.0.0.1
author:1232504506=
diff:1232504506:1232504506:=1,73d0%0a%3c (:title An example about Python operator:)%0a%3c %0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:simuNumOfAncestors.py | http://simupop.sourceforge.net/images/download.jpg]]|simuNumOfAncestors.py%0a%3c %0a%3c %0a%3c %0a%3c This program counts the average number of ancestors who contribute%0a%3c genotype to an offspring after a number of generations. The script%0a%3c creates a population and initialize all alleles of an individual with%0a%3c their indexes.%0a%3c %0a%3c [@%0a%3c Ind 0: 000000000000000 000000000000000%0a%3c Ind 1: 111111111111111 111111111111111%0a%3c ...%0a%3c Ind x: xxxxxxxxxxxxxxx xxxxxxxxxxxxxxx%0a%3c @]%0a%3c %0a%3c The population is evolved for a number of generations, following a%0a%3c Mendelian inheritance model. Recombinations are applied so that offspring%0a%3c can inherit genotype from both parental homologous chromosomes.%0a%3c %0a%3c At the end of the evolution, an individual may have a genome that consists%0a%3c of sequences inherited from multiple ancestors, which can be used to%0a%3c count the number of ancestors who contribute genotype to this individual.%0a%3c For example,%0a%3c %0a%3c [@%0a%3c Ind 0: 111122222225555 000022222224444%0a%3c @]%0a%3c %0a%3c has genotype from 5 ancestors (0, 1, 2, 4, 5). This script outputs%0a%3c the average number of ancestors at each generation, for a given%0a%3c number of replicate populations.%0a%3c %0a%3c Given a population, this function counts the number of ancestors for each individual and print out the average number.%0a%3c %0a%3c =python [=%0a%3c def avgNumOfAncestors(pop):%0a%3c     totAnc = 0%0a%3c     for indi in pop.individuals():%0a%3c         totAnc += len(set(indi.genotype()));%0a%3c     print '%25.2f\t' %25 (totAnc * 1.0 / pop.popSize()),%0a%3c     return True%0a%3c =]%0a%3c %0a%3c This is how the function @@avgNumOfAncestors@@ is called in a Python operator:%0a%3c %0a%3c =python [=%0a%3c def simuNumOfAncestors(popSize, lociNum, gen, recRate, numRep):%0a%3c     '''%0a%3c     popSize: population size%0a%3c     lociNum: number of loci%0a%3c     gen:     generations to evolve%0a%3c     recRate: recombination rate%0a%3c     numRep:  number of replicates%0a%3c     '''%0a%3c     pop = population(size=popSize, ploidy=2, loci=[lociNum])%0a%3c %0a%3c     # initialize each individual with a different allele%0a%3c     for idx,ind in enumerate(pop.individuals()):%0a%3c         ind.setGenotype([idx])%0a%3c     #%0a%3c     simu = simulator(pop, randomMating(), rep = numRep)%0a%3c     simu.evolve(%0a%3c         ops=[%0a%3c             recombinator(rate=recRate),%0a%3c             pyOperator(func=avgNumOfAncestors),%0a%3c             pyOutput('\n', rep=REP_LAST)%0a%3c         ],%0a%3c         gen=gen%0a%3c     )%0a%3c =]%0a
host:1232504506=127.0.0.1
