version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.5) Gecko/2008120908 Red Hat/3.0.5-1.el5_2 Firefox/3.0.5
author=
charset=ISO-8859-1
csum=
ctime=1236798465
host=127.0.0.1
name=Cookbook.SimuComplexDisease
rev=2
targets=
text=(:title Download and save the HapMap datasets:)%0a%25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:simuComplexDisease.py | http://simupop.sourceforge.net/images/download.jpg]]|simuComplexDisease.py%0a%0a%0aThis script uses a significantly different mechanism to control the allele %0afrequency of disease susceptibility loci than simuForward.py. I will describe %0athe method briefly here. More details please see %0a%0a    Peng B, Amos CI, Kimmel M (2007) Forward-Time Simulations of Human %0a    Populations with Complex Diseases. PLoS Genet 3(3): e47%0a%0aThis program simulates the evolution of a complex common disease under the %0ainfluence of mutation, migration, recombination and population size change. %0aStarting from a small founder population, each simulation will go through%0athe following steps:%0a%0a* Simulate the trajectory of allele frequency using specified disease model.%0a* Burn-in the population with mutation and recombination%0a* Introduce disease alleles and evolve the population with pre-simulated  allele frequency.%0a* Population structure and migration are specified along with demographic models. The population can be split into several equally-sized subpopulations and then evolve independently, or with migration. %0a%0aThe result of the simulation is a large multi-generation population. To analyze %0athe population, you will typically need to %0a%0a* Apply a penetrance function to the population and determine the affectedness  for each individual%0a* Draw Population and/or pedigree based samples and save in popular formats so that the samples can be analyzed by other software like genehunter.%0a%0aAnother script analComplexDisease gives excellent examples on how to perform these tasks.%0aPlease follow that script to perform your own analyses.%0a%0aThe program is written in Python using the simuPOP modules. For more information,%0aplease visit simuPOP website http://simupop.sourceforge.net .%0a%0a%0a!!! Genotype structure and disease%0a%0aWith typical settings, each individual will have 10 chromosomes, each having%0a20 equal spaced microsatellite or SNP markers. A disease will be caused by %0aseveral disease susceptibility loci (DSL) between markers. For example, a%0aDSL may be .3 unit to the right of marker 25 (the six marker on the second%0achromosome). Since we assume that fitness is only determined by genotype, %0anot affectedness status or trait value, we do not assign individual %0aaffectedness till the sampling stage.%0a%0a%0a!!! Evolutionary Scenario%0a%0aThe evolutionary process can be divided into three stages:%0a%0a!!!! Burn-in stage%0a%0aA founder population will be initialized with a small number of haplotypes.%0aAll DSL will be initialized with wild type alleles ( no disease). This leads%0ato complete linkage disequilibrium between markers and no LD with DSL.%0aThe population will evolve for a number of generations, subject to mutation %0aand recombination. This will break down LD between markers and let (hopefully)%0aeach marker reach a mutation-drift equilibrium.%0a%0aThe mutation happens only at non-DSL markers, following a symmetric%0astepwise mutation model for microsattelite and a Juke-Cantor model for%0aSNP markers. Recombination is uniform across all markers.%0a%0a%0a!!!! No-migration stage%0a%0a%0aThe population will be split into 10 subpopulations and starts to grow,%0aaiming at 100,000 or more individuals at the final generation. No migration %0ais allowed between subpopulations so population heterogeneity will build up.%0a%0a!!!! Mixing stage%0a%0a%0aIndividuals from different subpopulations will be able to migrate following%0aa circular step-stone model. Population heterogeneity will be reduced to%0aa level depending on migration rate and length of this stage.%0a%0a!!!!Introduction of disease%0a%0a%0aThe disease allele frequency is simulated before the simulation is performed.%0aA single disease mutant is introduce to each DSL at simulated mutant-introduction%0ageneration. The allele frequency then evolve according to the simulated frequency%0atrajectory.%0a%0aHowever, you can also specify some free DSL, who will evolve in a different manner.%0aNamely, they will be brought to high allele frequency in your specified time frame,%0aand then evolve freely. This method may fail due to extinction of disease alleles,%0abut it has the advantage of being able to simulate linked DSL.%0a%0a%0a!!! Statistics Monitored%0a%0aA number of statistics will be measured and saved. They are:%0a%0a* Fst before and after mixing%0a* Observed heterogeneity before and after mixing%0a* Disease allele frequency trajectory.%0a%0aYou can add more stat() operator if you need to preserve more information.%0a%0a
time=1236798545
title=Download and save the HapMap datasets
author:1236798545=
diff:1236798545:1236798465:=17,21c17,24%0a%3c * Simulate the trajectory of allele frequency using specified disease model.%0a%3c * Burn-in the population with mutation and recombination%0a%3c * Introduce disease alleles and evolve the population with pre-simulated  allele frequency.%0a%3c * Population structure and migration are specified along with demographic models. The population can be split into several equally-sized subpopulations and then evolve independently, or with migration. %0a%3c %0a---%0a>     1. Simulate the trajectory of allele frequency using specified disease model.%0a>     2. Burn-in the population with mutation and recombination%0a>     3. Introduce disease alleles and evolve the population with pre-simulated %0a>        allele frequency.%0a>     4. Population structure and migration are specified along with demographic%0a>        models. The population can be split into several equally-sized subpopulations%0a>        and then evolve independently, or with migration. %0a> %0a25,27c28,34%0a%3c * Apply a penetrance function to the population and determine the affectedness  for each individual%0a%3c * Draw Population and/or pedigree based samples and save in popular formats so that the samples can be analyzed by other software like genehunter.%0a%3c %0a---%0a>     1. Apply a penetrance function to the population and determine the affectedness%0a>        for each individual%0a> %0a>     2. Draw Population and/or pedigree based samples and save in popular %0a>        formats so that the samples can be analyzed by other software like%0a>        genehunter.%0a> %0a96,98c103,105%0a%3c * Fst before and after mixing%0a%3c * Observed heterogeneity before and after mixing%0a%3c * Disease allele frequency trajectory.%0a---%0a>     1. Fst before and after mixing%0a>     2. Observed heterogeneity before and after mixing%0a>     3. Disease allele frequency trajectory.%0a
host:1236798545=127.0.0.1
author:1236798465=
diff:1236798465:1236798465:=1,108d0%0a%3c (:title Download and save the HapMap datasets:)%0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:simuComplexDisease.py | http://simupop.sourceforge.net/images/download.jpg]]|simuComplexDisease.py%0a%3c %0a%3c %0a%3c This script uses a significantly different mechanism to control the allele %0a%3c frequency of disease susceptibility loci than simuForward.py. I will describe %0a%3c the method briefly here. More details please see %0a%3c %0a%3c     Peng B, Amos CI, Kimmel M (2007) Forward-Time Simulations of Human %0a%3c     Populations with Complex Diseases. PLoS Genet 3(3): e47%0a%3c %0a%3c This program simulates the evolution of a complex common disease under the %0a%3c influence of mutation, migration, recombination and population size change. %0a%3c Starting from a small founder population, each simulation will go through%0a%3c the following steps:%0a%3c %0a%3c     1. Simulate the trajectory of allele frequency using specified disease model.%0a%3c     2. Burn-in the population with mutation and recombination%0a%3c     3. Introduce disease alleles and evolve the population with pre-simulated %0a%3c        allele frequency.%0a%3c     4. Population structure and migration are specified along with demographic%0a%3c        models. The population can be split into several equally-sized subpopulations%0a%3c        and then evolve independently, or with migration. %0a%3c %0a%3c The result of the simulation is a large multi-generation population. To analyze %0a%3c the population, you will typically need to %0a%3c %0a%3c     1. Apply a penetrance function to the population and determine the affectedness%0a%3c        for each individual%0a%3c %0a%3c     2. Draw Population and/or pedigree based samples and save in popular %0a%3c        formats so that the samples can be analyzed by other software like%0a%3c        genehunter.%0a%3c %0a%3c Another script analComplexDisease gives excellent examples on how to perform these tasks.%0a%3c Please follow that script to perform your own analyses.%0a%3c %0a%3c The program is written in Python using the simuPOP modules. For more information,%0a%3c please visit simuPOP website http://simupop.sourceforge.net .%0a%3c %0a%3c %0a%3c !!! Genotype structure and disease%0a%3c %0a%3c With typical settings, each individual will have 10 chromosomes, each having%0a%3c 20 equal spaced microsatellite or SNP markers. A disease will be caused by %0a%3c several disease susceptibility loci (DSL) between markers. For example, a%0a%3c DSL may be .3 unit to the right of marker 25 (the six marker on the second%0a%3c chromosome). Since we assume that fitness is only determined by genotype, %0a%3c not affectedness status or trait value, we do not assign individual %0a%3c affectedness till the sampling stage.%0a%3c %0a%3c %0a%3c !!! Evolutionary Scenario%0a%3c %0a%3c The evolutionary process can be divided into three stages:%0a%3c %0a%3c !!!! Burn-in stage%0a%3c %0a%3c A founder population will be initialized with a small number of haplotypes.%0a%3c All DSL will be initialized with wild type alleles ( no disease). This leads%0a%3c to complete linkage disequilibrium between markers and no LD with DSL.%0a%3c The population will evolve for a number of generations, subject to mutation %0a%3c and recombination. This will break down LD between markers and let (hopefully)%0a%3c each marker reach a mutation-drift equilibrium.%0a%3c %0a%3c The mutation happens only at non-DSL markers, following a symmetric%0a%3c stepwise mutation model for microsattelite and a Juke-Cantor model for%0a%3c SNP markers. Recombination is uniform across all markers.%0a%3c %0a%3c %0a%3c !!!! No-migration stage%0a%3c %0a%3c %0a%3c The population will be split into 10 subpopulations and starts to grow,%0a%3c aiming at 100,000 or more individuals at the final generation. No migration %0a%3c is allowed between subpopulations so population heterogeneity will build up.%0a%3c %0a%3c !!!! Mixing stage%0a%3c %0a%3c %0a%3c Individuals from different subpopulations will be able to migrate following%0a%3c a circular step-stone model. Population heterogeneity will be reduced to%0a%3c a level depending on migration rate and length of this stage.%0a%3c %0a%3c !!!!Introduction of disease%0a%3c %0a%3c %0a%3c The disease allele frequency is simulated before the simulation is performed.%0a%3c A single disease mutant is introduce to each DSL at simulated mutant-introduction%0a%3c generation. The allele frequency then evolve according to the simulated frequency%0a%3c trajectory.%0a%3c %0a%3c However, you can also specify some free DSL, who will evolve in a different manner.%0a%3c Namely, they will be brought to high allele frequency in your specified time frame,%0a%3c and then evolve freely. This method may fail due to extinction of disease alleles,%0a%3c but it has the advantage of being able to simulate linked DSL.%0a%3c %0a%3c %0a%3c !!! Statistics Monitored%0a%3c %0a%3c A number of statistics will be measured and saved. They are:%0a%3c %0a%3c     1. Fst before and after mixing%0a%3c     2. Observed heterogeneity before and after mixing%0a%3c     3. Disease allele frequency trajectory.%0a%3c %0a%3c You can add more stat() operator if you need to preserve more information.%0a%3c %0a
host:1236798465=127.0.0.1
