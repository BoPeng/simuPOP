version=pmwiki-2.2.0 ordered=1 urlencoded=1
agent=Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; GTB6; QQDownload 1.7; SLCC1; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30618; MAXTHON 2.0)
author=
charset=ISO-8859-1
csum=
ctime=1245946671
host=127.0.0.1
name=Cookbook.SolarUtil
rev=5
targets=
text=(:title Export SOLAR frequency file:)%0a%0a%25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:solarUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|solarUtil.py%0a%0a%25red%25 [+++Page and script currently under construction, please refer later.+++]%25%25%0a%0aThis function allows you to export your simulated populations into a frequency file in the SOLAR readable format. %0a%0aSOLAR is a package of software to perform several kinds of statistical genetic analysis, including linkage analysis, quantitative genetic analysis, and covariate screening. The name SOLAR stands for Sequential Oligogenic Linkage Analysis Routines.%0a%0a[[http://www.biostat.wustl.edu/genetics/geneticssoft/manuals/solar210/02.chapter.html | %25blue%25Download SOLAR]]%0a%0a[[http://www.biostat.wustl.edu/genetics/geneticssoft/manuals/solar210/00.contents.html | %25blue%25SOLAR Manual]]%0a%0aThe freq file contains allele frequency data for a set of marker loci, one line per marker. Each line consists of the following space-delimited fields: %0amarker name, all_1 name, all_1 freq, all_2 name, all_2 freq, ... %0aThe allele frequencies for a marker must sum to 1 (a small roundoff error is tolerated). For more information about other SOLAR readable file formats, please refer to [[http://www.biostat.wustl.edu/genetics/geneticssoft/manuals/solar210/04.chapter.html | %25blue%25Input Data File Formats]]%0a%0aUsing the following function,%0a %0a=python [=%0adef SaveSolarFrqFile(pop, output='', loci=[], calcFreq=True):%0a    '''Output a frequency file, in a format readable by solar%0a    calcFreq%0a        whether or not calculate allele frequency%0a    '''%0a    if type(pop) == type(''):%0a        pop = LoadPopulation(pop)%0a    if output != '':%0a        file = output%0a    else:%0a        raise exceptions.ValueError, "Please specify output"%0a    # open data file and pedigree file to write.%0a    try:%0a        frqOut = open(file, "w")%0a    except exceptions.IOError:%0a        raise exceptions.IOError, "Can not open file " + file + ".frq to write."%0a    if loci == []:%0a        loci = range(0, pop.totNumLoci())%0a    if calcFreq or not pop.vars().has_key('alleleFreq'):%0a        Stat(pop, alleleFreq=loci)%0a    alleleFreq = pop.dvars().alleleFreq%0a    for m in loci:%0a        try:%0a            print >> frqOut, pop.locusName(m),%0a            for a in range(len(alleleFreq[m])):%0a                print >> frqOut, '\t%25d\t%25f' %25 (a+1, alleleFreq[m][a]),%0a            print >> frqOut%0a        except:%0a            print "Can not output allele frequency for marker %25s " %25 m%0a    frqOut.close()%0a=]%0a%0aif we define the population as %0a=python [=%0a    pop = population(size=[100]*3, loci=[2,3])%0a    InitByFreq(pop, [.1, .3, .6])%0a=]%0awe may get the output file%0a=python [=%0aloc1-1 	1	0.076667 	2	0.283333 	3	0.640000%0aloc1-2 	1	0.081667 	2	0.300000 	3	0.618333%0aloc2-1 	1	0.098333 	2	0.315000 	3	0.586667%0aloc2-2 	1	0.110000 	2	0.336667 	3	0.553333%0aloc2-3 	1	0.091667 	2	0.331667 	3	0.576667%0a=]%0a%0a
time=1248278888
title=Export SOLAR frequency file
author:1248278888=
diff:1248278888:1248197115:=5c5%0a%3c %25red%25 [+++Page and script currently under construction, please refer later.+++]%25%25%0a---%0a> %25red%25 [++Currently under construction, please refer later.++]%25%25%0a
host:1248278888=127.0.0.1
author:1248197115=
diff:1248197115:1247641388:=3c3%0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:solarUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|solarUtil.py%0a---%0a> %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:ExportPOPGENE.py | http://simupop.sourceforge.net/images/download.jpg]]|ExportSOLAR.py%0a
host:1248197115=127.0.0.1
author:1247641388=
diff:1247641388:1247641284:=4,5d3%0a%3c %0a%3c %25red%25 [++Currently under construction, please refer later.++]%25%25%0a
host:1247641388=127.0.0.1
author:1247641284=
diff:1247641284:1245946671:=1,65c1,2%0a%3c (:title Export SOLAR frequency file:)%0a%3c %0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:ExportPOPGENE.py | http://simupop.sourceforge.net/images/download.jpg]]|ExportSOLAR.py%0a%3c %0a%3c This function allows you to export your simulated populations into a frequency file in the SOLAR readable format. %0a%3c %0a%3c SOLAR is a package of software to perform several kinds of statistical genetic analysis, including linkage analysis, quantitative genetic analysis, and covariate screening. The name SOLAR stands for Sequential Oligogenic Linkage Analysis Routines.%0a%3c %0a%3c [[http://www.biostat.wustl.edu/genetics/geneticssoft/manuals/solar210/02.chapter.html | %25blue%25Download SOLAR]]%0a%3c %0a%3c [[http://www.biostat.wustl.edu/genetics/geneticssoft/manuals/solar210/00.contents.html | %25blue%25SOLAR Manual]]%0a%3c %0a%3c The freq file contains allele frequency data for a set of marker loci, one line per marker. Each line consists of the following space-delimited fields: %0a%3c marker name, all_1 name, all_1 freq, all_2 name, all_2 freq, ... %0a%3c The allele frequencies for a marker must sum to 1 (a small roundoff error is tolerated). For more information about other SOLAR readable file formats, please refer to [[http://www.biostat.wustl.edu/genetics/geneticssoft/manuals/solar210/04.chapter.html | %25blue%25Input Data File Formats]]%0a%3c %0a%3c Using the following function,%0a%3c  %0a%3c =python [=%0a%3c def SaveSolarFrqFile(pop, output='', loci=[], calcFreq=True):%0a%3c     '''Output a frequency file, in a format readable by solar%0a%3c     calcFreq%0a%3c         whether or not calculate allele frequency%0a%3c     '''%0a%3c     if type(pop) == type(''):%0a%3c         pop = LoadPopulation(pop)%0a%3c     if output != '':%0a%3c         file = output%0a%3c     else:%0a%3c         raise exceptions.ValueError, "Please specify output"%0a%3c     # open data file and pedigree file to write.%0a%3c     try:%0a%3c         frqOut = open(file, "w")%0a%3c     except exceptions.IOError:%0a%3c         raise exceptions.IOError, "Can not open file " + file + ".frq to write."%0a%3c     if loci == []:%0a%3c         loci = range(0, pop.totNumLoci())%0a%3c     if calcFreq or not pop.vars().has_key('alleleFreq'):%0a%3c         Stat(pop, alleleFreq=loci)%0a%3c     alleleFreq = pop.dvars().alleleFreq%0a%3c     for m in loci:%0a%3c         try:%0a%3c             print >> frqOut, pop.locusName(m),%0a%3c             for a in range(len(alleleFreq[m])):%0a%3c                 print >> frqOut, '\t%25d\t%25f' %25 (a+1, alleleFreq[m][a]),%0a%3c             print >> frqOut%0a%3c         except:%0a%3c             print "Can not output allele frequency for marker %25s " %25 m%0a%3c     frqOut.close()%0a%3c =]%0a%3c %0a%3c if we define the population as %0a%3c =python [=%0a%3c     pop = population(size=[100]*3, loci=[2,3])%0a%3c     InitByFreq(pop, [.1, .3, .6])%0a%3c =]%0a%3c we may get the output file%0a%3c =python [=%0a%3c loc1-1 	1	0.076667 	2	0.283333 	3	0.640000%0a%3c loc1-2 	1	0.081667 	2	0.300000 	3	0.618333%0a%3c loc2-1 	1	0.098333 	2	0.315000 	3	0.586667%0a%3c loc2-2 	1	0.110000 	2	0.336667 	3	0.553333%0a%3c loc2-3 	1	0.091667 	2	0.331667 	3	0.576667%0a%3c =]%0a%3c %0a---%0a> %0a> %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:solarUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|solarUtil.py%0a\ No newline at end of file%0a
host:1247641284=127.0.0.1
author:1245946671=
diff:1245946671:1245946671:=1,2d0%0a%3c %0a%3c %25rfloat text-align=center margin-top=5px margin-right=25px margin-bottom=15px margin-left=25px %25 [[Attach:solarUtil.py | http://simupop.sourceforge.net/images/download.jpg]]|solarUtil.py%0a\ No newline at end of file%0a
host:1245946671=127.0.0.1
