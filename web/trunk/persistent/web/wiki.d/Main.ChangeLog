version=pmwiki-2.1.27 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.12) Gecko/2009070611 Firefox/3.0.12
author=
csum=
ctime=1232171070
host=127.0.0.1
name=Main.ChangeLog
rev=31
targets=
text=(:title Change Log of simuPOP:)%0a%25rfloat margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.png%0a%0a(:toc:)%0a%0a%0aThis page lists Change logs of all official simuPOP releases. If you would like to see what has been changed since the last official release, you can check the [[ http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/ChangeLog | ChangeLog]] of the  [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk | development version of simuPOP]].%0a%0a!!! version 0.9.6 - Rev 2849 (Aug 6, 2009)%0a* NEW: Add a global function closeOutput to close '>>' or '>>>' output files used in the function form of an operator.%0a* BUG: Fix a memory leak of LoadPopulation.%0a* CHG: Rename function rng() to GetRNG() for consistent naming of functions.%0a* NEW: Merge overloaded functions of population::setIndInfo, population::indInfo, population::individual, population::individuals, population::vars, simulator::vars, individual::setGenotype, individual::genotype, 	individual::allele, individual::setAllele, individual::alleleChar, 	individual::info, individual::setInfo to one function with more complex		input type and default parameter. This change allows keyword arguments for all these functions.%0a* CHG: the parameter order of function population::ancestor has been changed!%0a* CHG: stat(popSize=True) accepts subPops parameter. It now output 'popSize' (a number), 'subPopSize' (a list) and subPop[vsp]['popSize'] (a number). By default, it does not calculate population size for (virtual) subpopulations.%0a* CHG: Introduce parameter vars to operator stator. It will be used to replace all blah_param parameters.%0a* CHG: Remove numOfAllele parameter of stat() operator.%0a* CHG: Parameter subPops now treats [] as no subpopulation, and accept AllSubPops as its usual default parameter.%0a* CHG: Rename parameter rep to reps in all operators. This parameter now treats	input [] as no replicate and use AllReps as its default input.%0a* CHG: Remove expHetero statistics. Remove allele-level heterozygosity variable. Rename heterozygosity variables.%0a* CHG: statGenoFreq now uses tuple (instead of string) as genotype indexes. Parameter phase has been removed.%0a* CHG: statHaploFreq now uses tuple (instead of string) as loci and haplotype indexes.%0a* NEW: Add statInfo to calculate sum, mean, var, max and min of information fields.%0a* CHG: rewrite statLD and change how primary alleles are handled. Please refer to user's guide for details.%0a* NEW: add relationship SpouseAndOffspring to pedigree::locateRelatives.%0a* NEW: add parameter pedFields to population::extract.%0a* NEW: Introduce new type defdict for allele, genotype and haplotype counts 	and frequencies.%0a* CHG: Disallow the use of nested list for parameter lociPos of population().%0a* NEW: Allow single-form parameter for parameters of function population().%0a* CHG: Rename paramter Fst of operator stat to structure, change associated variable names. This leaves room for the implementation of other structure related statistics.%0a* NEW: Add Nei's 1973 Gst statistics.%0a* NEW: Add parameter suffix to operator stator.%0a%0a!!! version 0.9.5 - Revision 2740 (Jun 22, 2009)%0a* NEW: Supports SWIG 1.3.39.%0a* BUG: Fix a bug when using simuRPy for R version %3c= 0.9.0 under windows.%0a* CHG: Do not set default loci name to "locX-Y". Empty string will be returned if lociNames are not set. This also changes the behavior of functions locusByName and lociByNames.%0a* CHG: Do not set default subpopulation name to "Unnamed". Empty string will be returned if lociNames are not set. population::subPopName() is changed accordingly.%0a* NEW: Add matrixMutator and an early form of actgMutator.%0a* NEW: Add mapIn and mapOut feature to all mutators.%0a* NEW: Add parameter name to population::mergeSubPops and operator mergeSubPops%0a* NEW: Add parameter names to population::splitSubPop and operator splitSubPops.%0a* NEW: Allow parameter infoFields to take single form values. Remove  population::addInfoField() because addInfoFields() now accepts single input.%0a* BUG: Fix a bug with persistent dirty signature.%0a* CHG: Replace parameter maxAllele in operator kamMutator with k (= maxAllele + 1), and rename parameter rate to rates.%0a* CHG: Merge operator gsmMutator to smmMutator and pyMutator.%0a* CHG: Rename parameter rate to rates for operator recombinator.%0a* NEW: Mutators now supports virtual subpopulations (parameter VSP).%0a* NEW: ifElse operator now accepts lists of ifOps and elseOps.%0a* NEW: Allow single form input for operator lists.%0a* CHG: Operators are now copied to simulator::evolve. This makes counting functions such as recombinator::recCount useless so they are removed.%0a* NEW: Add a hierarchical island migration model to simuUtil.py.%0a* NEW: Add a mixedMutator to simulated mixed mutation models.%0a* NEW: Move trajectory simulation functions out of the simuPOP core. They will be reimplemented in simuUtil.%0a* NEW: Add a context-dependent mutator contextMutator and context support for pyMutator.%0a* NEW: Allow mitochondrialGenoTransmitter to be used in haploid populations.%0a* NEW: Add links to download examples to the online user's guide.%0a%0a!!!version 0.9.4 - (Rev 2674) May 20, 2009%0a* BUG: Fix the handling of proportions in splitSubPops.%0a* BUG: Fix randomParentChooser when there is subpopulation structure.%0a* BUG: Fix a bug that concerns mutation at invalid (unused) locations.%0a* NEW: Allow Python parent choosers to return individual(s) directly.%0a* CHG: Remove image plottype from varPlotter, with simplified code and enhanced	functions.%0a* NEW: Add scatterPlotter that plots information fields.%0a* NEW: Add infoPlotter and two special cases histPlotter and qqPlotter.%0a* NEW: Add boxPlotter to plot boxplots of information fields.%0a* NEW: Introducing derivedArgs with expression values.%0a%0a!!!version 0.9.3 - (Rev 2601) Apr 3, 2009%0a* BUG: Fix a bug with population::removeLoci when given keep loci are not in order.%0a* NEW: Prevent the use of greater than one probabilities in Bernulli trails.%0a* NEW: Add a Tkinter implementation for simuProgress.%0a* BUG: Fix a bug where subpopulation names of merged population are not properly merged.%0a* NEW: Allow specifying non-string values in 'chooseFrom' and 'chooseOneOf' in simuOpt parameter specification.%0a* NEW: Allow operators to output to a Python function.%0a* NEW: Allow the use of double-click to open a browse dialog for file and directory input in simuOpt.%0a* BUG: Fix a memory leak bug related to infoEval and infoExec. Optimize infoExec for some simple statements.%0a* CHG: change parameter formOffGenotype of pyOperator to isTransmitter as a result of merging concepts 'primary during mating operator' and 'genotype transmitter'.%0a* CHG: Move all scripts under the scripts directory to online cookbook.%0a* CHG: Change relatedness calculations in operator stat.%0a* NEW: Add calculation of HWE p-value to the stat operator.%0a* NEW: Test individual index in population::removeIndividuals%0a* BUG: Fix a bug when no subpopulation is given in splitSubPops.%0a* CHG: Merge stat(association) to stat(LD), in preparation for case-control association	tests.%0a* NEW: (experimental) Add case/control association chisq test to stat.%0a* NEW: (experimental) Add Tajima's pi statistics (mean pairwise difference) to the stat() operator.%0a%0a!!! version 0.9.2 - (Rev 2472) Feb 20, 2009%0a* NEW: Allow populations in a simulator to have different genotype structure. %0a* CHG: A simulator can no longer access genotypic structure information.%0a* NEW: Add simulator::add to add new populations to a simulator.%0a* CHG: Remove simulator::addInfoField and other functions because they can be applied to individual populations.%0a* NEW: Allow the use of single form parameter in population::removeSubPops, removeIndividuals, addLoci, removeLoci and resize.%0a* BUG: Fix a bug in adding locus to a population without any locus.%0a* NEW: Alow the use of single form parameter in controlledOffspringGenerator. Handle single return value of allele frequency trajectory function.%0a* NEW: Rename parameter fromSubPop to subPops and toSubPop to toSubPops for migrator, for    naming consistency.%0a* NEW: Add mode = ByIndInfo to migrator so that users can explicitly set migrate_to informatin field and migrate.%0a* NEW: Remove pyMigrator from the core. The varying migration rate migrator can be easily implemented in a Python operator. The indFunc mode is not at all useful because it can be done by a Python operator plus mode=ByIndInfo.%0a* NEW: Allow unordered lociPos specification in population(), lociNames will be	rearranged accordingly.%0a* NEW: Allow single parameter to parameters loci, ploidy in initByValue and initByFreq.%0a* NEW: Remove parameter chrom from dumper(), allow single parameter input for parameter loci in this operator.%0a* NEW: Add pause operator to accept specified keys.%0a* CHG: Remove rarely used parameters preStmts and postStmts from operators pyEval and		pyExec.%0a* CHG: Polish operator infoEval and infoExec (they now supports virtual subpopulations). Document them in detail in user's guide and reference manual.%0a* CHG: Remove hapMapUtil from the core. These functions belong more to the simuPOP		cookbook than the core.%0a* CHG: Move scripts/loadHapMap to simuPOP online cookbook.%0a* CHG: Polish and document simuOpt. getParam function now belongs to the simuOpt class.%0a* CHG: Remove jump and jumpIfFalse from parameter specification.%0a* CHG: Replace --noDialog with --gui=False (and allow for values such as Tkinter).%0a* CHG: Polish operator splitSubPop, replace which to subPops, and add the feature		to split subpopulations by information field. Rename this operator to splitSubPops.%0a* CHG: population::splitSubPop can no longer split by proportion. Please use operator		splitSubPops and its function form SplitSubPops instead.%0a		%0a%0a%0a!!! Version 0.9.1 - (Rev 2330) Jan 13, 2009%0a* NEW: Improve allele iterator so that @@stat(alleleFreq)@@ can handle chromosome x and y.%0a* CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a* CHG: Remove parameter @@newSubPopSizeExpr@@ and rename @@newSubPopSize@@ to @@subPopSize@@, and @@newSubPopSizeFunc@@ to @@subPopSizeFunc@@.%0a* CHG: Merge parameters @@subPopSize@@ and @@subPopSizeFunc@@. This parameter can now take both a list and a function.%0a* BUG: Fix population load/save under windows, add simulator equality test (@@__cmp__@@).%0a* CHG: Merge parameters @@numOffspringFunc@@, @@numOffspringParam@@ and @@mode@@ to @@numOffspring@@ in @@offspringGenerator@@.%0a* CHG: Merge parameter @@sexParam@@ to @@sexMode@@ in @@offspringGenerator@@.%0a* CHG: Rename mating scheme @@binomialSelection@@ to @@randomSelection.@@%0a* CHG: Merge parameters @@convProb@@, @@convMode@@ and @@convParam@@ to @@convMode@@ in @@recombinator@@.%0a* BUG: Fix option @@shuffleOffspring@@ in @@heteroMating()@@.%0a* CHG: Change the default output of parentsTagger when only one parent is passed.%0a* CHG: Remove parameter @@numParents@@ from @@offspringGenerator@@ and parent choosers.%0a* CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight from heteroMating.%0a* NEW: Allow a demographic function to return a number if there is only one subpopulation.%0a* NEW: Allow pedigreeMating to set sex, affection status and some information fields from the pedigree object.%0a* NEW: Allow random parent(s) choosers to set name of information field fitness.%0a* CHG: Change interface for @@pedigree::locateRelatives@@. Rename @@setIndexOfRelatives@@ to @@traceRelatives@@.%0a* NEW: Allow replicate numbers in a simulator to refer to the last several ''active  populations''.%0a* CHG: Merge parameter output and outputExpr and use @@'!expr'@@ for the expression case.%0a* NEW: Allow parameter @@baseOperator::at@@ to take a single number in addition to a list.%0a* NEW: Disallow parameter alias @@locus@@ to parameter loci in penetrance, selection and quantitative trait operators. Allow loci to accept a number.%0a* NEW: Support other device types in @@varPlotter::saveAs@@.%0a* NEW: dumper now supports virtual subpopulations.%0a%0a!!! Version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a* CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a* CHG: migrator now uses an information field "migrate_to".%0a* CHG: Add function population::extract.%0a* CHG: Remove parameter ancGen from population::clone().%0a* NEW: Dump() also display information fields.%0a* NEW: Expose population::pushAndDiscard(pop) as population::push().%0a* NEW: Add parameter subPops to all operators.%0a* CHG: Move operators pySubset(), randomSample(), caseControlSample() and affectedSibpairSample from simuPOP core to simuUtil.py. Remove src/sampler.*.%0a* CHG: Remove infoTagger, sexTagger and affectionTagger and will replace them by pedigreeTagger.%0a* CHG: Remove population::removeEmptySubPops().%0a* NEW: Add support for subpopulation names.%0a* CHG: Remove intializer, spread and pyInit operators.%0a* CHG: Add parameter initSex to initByFreq and initByValue.%0a* NEW: Initializers now support virtual subpopulations.%0a* CHG: Recombiantor no longer supports recombination by sex, and haplodiploid chromosomes.%0a* CHG: Recombinator now supports different types of chromosomes.%0a* NEW: Add ops parameter to mating schemes.%0a* NEW: add mitochondrialGenoTransmitter.%0a* NEW: add population::updateInfoFieldsFrom.%0a* NEW: Add two examples in doc/cookbook, demonstrating the use of customized genotype transmitters and mitochondrialGenoTransmitter.%0a%0a!!! Version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a* DOC: Adjust reference output for simuPOP classes.%0a* CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a* CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a* CHG: Remove the maxAllele parameter of population.%0a* CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a* CHG: Remove read support for XML and Binary formats.%0a* CHG: Completely change the way sex chromosomes are handled, and add initial support for customized chromosome.%0a* CHG: Rename class vsp to vspID.%0a* CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a* CHG: Change parameter of population::virtualSubPopName().%0a* CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a* CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a* CHG: Make pedigree a subclass of population and move population::locateRelatives and population::setRelativeIndex to this class.%0a* CHG: Temporarily disable all pedigree related features such as pedigree parent chooser, pedigree mating scheme, and all samplers.%0a* CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a* CHG: Replace population::mergePopulation by population::addIndFromPop.%0a* CHG: Replace population::mergePopulationByLoci by population::addChromFromPop and population::addLociFromPop.%0a* CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a* CHG: Adjust interface to population::removeLoci.%0a* CHG: Adjust interface to population::removeSubPops.%0a* NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a* CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a* NEW: Add simuProgress class to simuUtl.%0a* CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a* NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a* CHG: Remove operator terminator and continueIf.%0a* CHG: Reset file format number. No longer support previous file formats.%0a* NEW: add simulator::populations().%0a* NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []), and REP_LAST (now -1).%0a* CHG: Replace simulator::getPopulation by simulator::population and simulator::extract.%0a%0a!!! Version 0.8.8 - (Rev 1787) Oct 24, 2008%0a* CHG: Remove the replicate group feature.%0a* NEW: Allow mapSelector to work for all ploidy.%0a* DOC: Add keyword applicability to indicate applicability of operators.%0a* DOC: Document applicability of mating schemes.%0a* DOC: Fix bibtex references of user's guide and reference manual.%0a* CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete and will be removed later.%0a* NEW: add individual::genotype (previously called arrGenotype) and individual::arrGenotype.%0a* CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed later.%0a* CHG: population arrGenotype are marked obsolete and will be removed later.%0a* NEW: add population::genotype and population::setGenoytpe.%0a* BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting images.%0a* NEW: Support Python 2.6.%0a%0a!!! Version 0.8.7 - (Rev 1755) Aug 29, 2008%0a* NEW: allow the use of a list to specify a virtual subpopulation.%0a* NEW: change the return type of allele() so that no boolean value (True or False) will be returned from the binary modules.%0a* DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a* BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a* BUG: Fix a bug when calculating expected heterozygosity with increased number of subpopulations.%0a* BUG: Fix a bug in controlled random mating where number of affected alleles are calculated from current instead of offspring populations.%0a* CHG: Only write (compressed if possible) in text format. simuPOP can still read binary and xml formats.%0a* BUG: Fix a bug that is related to the calculation of Fst in populations with unordered individuals.%0a* BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a* BUG: Fix a bug that prevents simuPOP from compressing population files.%0a* NEW: Make boost 1.36.0 the default built-in boost version.%0a* BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a* NEW: Stop distributing zlib1.dll by building zlib from source under windows.%0a%0a!!! Version 0.8.6 - (Rev 1666) Jun 20, 2008%0a* NEW: Polish command line arguments output in a configuration file.%0a* NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying population size and selection pressure.%0a* BUG: Fix a minor simuOpt::saveConfigFile bug%0a* BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a* BUG: fix a bug that is related to reference count of loaded lists.%0a* CHG: allow sample size > population size (give a warning rather than error)%0a* CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a* NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a* NEW: load fine-scale recombinate rate and set variable genDist in loaded HapMap populations. (loadHapMap.py)%0a* CHG: polish tkInter and wxPython parameter input dialog.%0a* CHG: Remove parameter order from information field related functions.%0a* BUG: Fix a information field + migration bug.%0a* NEW: add operation resizeSubPops.%0a* BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a* NEW: separate sex initialization from initByFreq, initByValue and pyInit and add a new operator initSex.%0a* BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 during evolution.%0a* CHG: Remove subpopulation specific virtual subpopulation. This is no longer needed with combined virtual splitter.%0a* NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen) to access an individual in an ancestory generation directly.%0a* NEW: support virtual subpopulation in fromSubPop parameter of a migrator. This allows sex-specific migraton and more complicated migration schemes.%0a* NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a* NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a* NEW: add a new parent chooser infoParentsChooser and a new mating scheme consanguineousMating, along with an example doc/cookbook/Mating_consanguineous.py.%0a%0a%0a!!! Version 0.8.5 - (Rev 1488) Apr 3, 2008%0a* BUG: fix a bug that prevents a cloned simulator from evolving again.%0a* NEW: add parameter numMale and sexMode to all offspring generator and mating schemes, to control the sex of offspring exactly.%0a* NEW: add gene conversion to recombinator, using parameter convMode, convProb and convParam.%0a* NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a* NEW: add random parent chooser without replacement and/or with alpha individuals, haplodiploidOffspringGenerator, monogamousMating, polygamousMating, alphaMating, and haplodiploidMating mating schemes.%0a* NEW: add haplodiploid option to GenoStructure. Recombinator now handles such populations correctly.%0a* CHG: make the subPop parameter of population() function obsolete.%0a* CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a%0a%0a!!! Version 0.8.4 - (Rev 1456) Mar 8, 2008%0a* NEW: add support for other posix systems like HP-UX%0a* NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a* NEW: add two operators infoEval and infoExec that can be used to manipulate%0ainformation fields during evolution.%0a* NEW: operator stator popSize=True also calculates virtual subpop size using variable virtualPopSize.%0a* BUG: fix a bug in the re-initialization of pyParentsChooser.%0a* CHG: inheritTagger will inherit the first, instead of the second, information field from mother in TAG_Maternal mode.%0a* CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no virtual subpopulation.%0a* NEW: allow multiple genotype in the same virtual subpopulation split by genotypeSplitter%0a* NEW: add combinedSplitter%0a%0a%0a!!! Version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a* NEW: allow taggers to write pedigree files%0a* NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a* NEW: introduce pedigreeMating to mate according to a given pedigree%0a* NEW: add infoTagger, sexTagger, affectionTagger%0a* NEW: add pedigree information handling functions%0a* CHG: add more options to functions in hapMapUtil.py%0a* CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the MPI related code).%0a* BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a* NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when a lot of populaitons are involved.%0a%0a!!! Version 0.8.2 - (Rev 1370) Nov 19, 2007%0a* BUG: Fix saveFstat in simuUtil.py%0a* NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a* NEW: add heteroMating to allow allow different mating scheme used for different subpopulations, or proportions of individuals%0a* NEW: add selfMating mating scheme.%0a* NEW: add various parent choosers.%0a* NEW: add various offspring generators.%0a* NEW: add null, duplicate, info, genotype, proportion splitters%0a* NEW: add splitter interface to populations.%0a%0a!!! Version 0.8.1 - (Rev 1254) Oct 05, 2007%0a* NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0aMergePopulations(pops)%0a* BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') returns false even if this file does exist.%0a* BUG: Fix the handling of binary option in command line, and handling of short arguments.%0a* NEW: Use a checkbox for binary options in the parameter dialogs.%0a* NEW: make use of second to last inforFields passed to pyPenetrance and pySelector to pass specified information fields to user-defined functions.%0a* BUG: Fix a few functions in hapMapUtil.py%0a* BUG: stop displaying full path name in the title of the parameter dialog.%0a* NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and chromNames parameter to population constructor.%0a* NEW: Some documentation improvement.%0a%0a%0a!!! Version 0.8.0 - (Rev 1215) Aug 14, 2007%0a* Reference manual overhaul%0a* Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a* NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a%0a!!! Version 0.7.11 - (Rev 1133) July 26, 2007%0a* NEW: add subPop(s) parameters to selectors, allowing different selection pressure in different subpopulations%0a* NEW: add subPops parameter to intializers, working the same as subPop%0a* NEW: extending pyIndOperator with handling of loci and infoFields%0a* BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a* BUG: fix scripts/simuViewPop.py%0a* NEW: add optional option destructive=False to simulator::getPopulation, as a way to retrieve a population more efficiently.%0a* NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle control of migration using individual genotype.%0a* NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is still usable)%0a* BUG: fix a mutator crash when locus index difference exceeds the range of integer, for cases, for example, with 10k loci and 100k individuals.%0a* NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a* NEW: add parameter byChromosome to population::mergePopulationByLoci and MergePopulationsByLoci to allow chromosome to chromosome merge.%0a%0a%0a!!! Version 0.7.10 - (Rev 987) May 20, 2007%0a* BUG: fix a memory leak bug with LoadPopulation%0a* BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a* NEW: nuclearFamilySampler operator and function%0a* NEW: add MATE_UniformDistribution number of offspring type%0a* BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a* BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a* BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a* BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a* NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no allele 1. This is avoid trouble in  binary form. (maybe not a good idea).%0a* NEW: throw an exception when multiple selectors are applied at the same time.%0a* NEW: add population::mergePopulation, population::mergePopulationByLoci, MergePopulations, MergePopulationsByLoci, population::resize%0a* NEW: add population::insertLoci, population::insertLocus, population::appendLoci, population::appendLocus%0a* NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a* NEW: swig 1.3.32 compatibility%0a* NEW: add scripts/loadHapMap.py%0a* NEW: add pyTagger operator, which can be used to trace trait values.%0a* NEW: update comments, in preparation for the 0.8.0 release%0a* NEW: disallow change of genotypic structure of populations in a simulator.%0a* NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth and related tests and documents.%0a* BUG: fix a bug when stat() tries to remove non-existings variables caused by population split.%0a%0a%0a!!! Version 0.7.9 - (Rev 885) Apr 3, 2007%0a* BUG (build): add solaris support. This OS does not have stdint.h.%0a* BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a* NEW: add SaveSolarFrqFile in simuUtil.py%0a* NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile SaveQTDT now calls these three functions.%0a* NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a* NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a population with unequal male and female allele frequencies, from Yaji Xu.%0a* BUG: fix a bug in the calculation of D'%0a* NEW: add LD measurement delta^2%0a* NEW: add LD_param parameter to have finer control over how LD is calculated%0a* NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better control over the calculation of these statistics.%0a* CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a* NEW: add association statistics (ChiSq, UC_U, CramerV)%0a* BUG: fix passing of relMethod parameter of stat operator%0a* CHG: NO_CONVERSION is no longer the default for rpy%0a%0a%0a!!! Version 0.7.8 - (Rev 833) Mar 2, 2007%0a* BUG: fix broken user interactive input%0a* BUG: fix help feature of tkinter dialog%0a* NEW: bundle boost 1.33.1 with source package%0a* BUG (build): fix a SConstruct bug with MSVC environment variables%0a* NEW: add other LD measurements to simuLDDecay.py%0a* NEW: optionally add header to QTDT ped file%0a* BUG: fix the combine parameter of SaveQTDT%0a%0a%0a!!! Version 0.7.7 - (Rev 786) Feb 1, 2007%0a* NEW (build): bring scons build system on par with python setup.py%0a* NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a* NEW (build): try really hard to search proper boost libraries. One usually does not have to specify boost inc and lib paths to build simuPOP.%0a* NEW (build): prune files from source package%0a* NEW: add ancestralGen to penetrance and qtrait operators%0a* NEW: change pySelector and allow a second parameter gen for the fitness function This allows varying selection pressure.%0a* CHG: individual comparison does not compare information fields%0a* CHG: adjust individual representation (actually output genotype)%0a* BUG: fix a bug in loading some files saved in binary module from standard modules%0a* BUG: fix an affected sibpair sampler bug introduced in 0.7.5 MPI modules%0a* NEW: add hasInfoField() function%0a* NEW: MPI module pass 00, 01, 06 test scripts%0a* NEW: Only head node can print to cout%0a  %0a%0a!!! Version 0.7.6 - (Rev 674) Dec 25, 2006%0a* NEW: change file format for binary modules, resulting much faster save/load.%0a* NEW: fix adjustGenotype (efficiency)%0a* BUG: fix simulator::clone(), introduced in 0.7.5%0a* NEW: disable compression under windows due to a boost bug.%0a* BUG: make simuRPy works with the latest R and rpy.%0a* NEW: several new chapters in the user's guide.%0a%0a%0a!!! Version 0.7.5 - (Rev 576) Dec 8, 2006%0a* NEW: experimental MPI modules.%0a* BUG: None is treated as False now in Py_Object_As_Bool.%0a* NEW: (internal) Optimize binary allele handling. Copying of alleles are now faster than regular alleles.%0a* NEW (internal): Optimize BernulliTrials and recombination. Recombination under certain conditions is 1/3 faster now.%0a* NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials cache internal point for performance purposes. This also fixes a windows dynamic_bitset related bug (never figure out what was wrong).%0a* NEW: add the missing simulator.clone() function%0a* CHG: stop embedding zlib since the source does not work under windows. The installation process is changed as well.%0a%0a%0a!!! Version 0.7.4 - (Rev 518) Nov 5, 2006%0a* BUG: fix simulator.population() function%0a* NEW/CHG: add order parameter to population arr function series. Changed functions are: [@%0a	C++ level: population::genoBegin(true), genoBegin(sp, true)%0a		population::infoBegin(idx, order), infoBegin(idx, subPop, order)%0a	Python level: population::arrGenotype(True), arrGenotype(sp, True)%0a		population::indInfo(idx, order), indInfo(idx, subPop, order)%0a		population::arrIndInfo(order), arrIndInfo(subPop, order)%0a	@]%0a* NEW: test/test_21_performance is added to keep track of performance%0aimprovements.%0a* NEW: (minor) performance improvement of randomMating and maSelector.%0a* NEW: significant performance improvement of mating schemes.%0acontrolled randomMating: typically 150s => 90s%0a* NEW: add instruction for using intel c++ compiler, which usually improve performance by 20%25 to 30%25.		%0a* BUG: recombinator set sex in a wrong way.%0a* NEW: experimental large pedigree sampling largePedigreeSample%0a* NEW: experimental support for merlin/vc and merlin regression%0a* CHG (internal): overhaul of ascertainment operators and file save stuff.%0a* NEW: add 'useDefault' option to simuOpt paramter specification.%0a%0a%0a!!! Version 0.7.3 - (Rev 470) Oct 2, 2006%0a* CHG: change the allele type of long module to unsigned short, since 2^16 seems to be enough even for long allele cases.%0a* NEW: add -c option to simuCluster.py to allow it to se command instead of the default qaub%0a* NEW: add reference count debugging in simulator.evolve (require specially built python.)%0a* BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a* NEW: add pyMating operator%0a* NEW: add population::individuals() function that can be used to iterate through all individuals (or in a subpopulation).%0a* NEW: add pyIndOperator%0a%0a%0a!!! Version 0.7.2 - (Rev 412) - Not publically released%0a* CHG: remove demo and support for scipy's gplt package.%0a* NEW: add infoFields parameter to population and operators%0a* CHG: all populations must now explicitly state the information fields for each individual.%0a* CHG: all qtrait and penetrance oeprators now use info fields of individuals (they use variable before). penetrance field is optional.%0a* CHG: (Internal) selectors now use info field (fitness) rather than using its own population variable.%0a* NEW: add --useDefault parameter to use default parameters instead of reading from stdin, if they can not be obtained from other methods.%0a* NEW: simuCluster.py now subst environmental variables, and stops if there is remaining $ in the script.%0a* CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use 'label' instead.%0a* BUG: fix starting allele problem in simuCDCV.py%0a%0a%0a!!! Version 0.7.1 - (Rev 378) - Aug 20, 2006%0a* BUG: Fix a bug in backward trajectory simulation%0a* CHG: change the release/snapsot generating process%0a* NEW: add script/simuCluster.py which assists submission of jobs on cluster machines.%0a* BUG: fix a random number generator bug on 64 bit machines.%0a* NEW: random number seed is generated in a much better way, and is retrievable.%0a* NEW: fix analComplexDisease.py which was not up to date with simuComplexDisease.py%0a%0a!!! Version 0.7.0 - (Release 0.6.15, July, 2006)%0a* Check all scripts and test cases%0a* Check document%0a* release%0a%0a!!! Version 0.6.14 - (Rev 341) - June 06, 2006%0a* CHG: user's guide and reference manual revision%0a* NEW: add a local scons build system for developers%0a* BUG: fix the variable update bug.%0a* BUG: fix setRNG(seed) bug.%0a* CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a%0a!!! Version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a* NEW: Add trajectory simulation functions follows those from selSim and geneArtisan.%0a* NEW: Add controlledMating that accept an generation only if allele frequency at specified locus/loci fail in specified range.%0a* NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a* NEW: implement trajectory simulation follows Slatkin 2001. This works better than methods from both selSim and geneArtisan.%0a* CHG: (internal change) abort the original template design. This will make the source less flexible but can dramatically improve development time.%0a* CHG: add separator to simuOpt's parameter specification.%0a* NEW: add controlledRandomMating and controlledBinomialSelection which implement a quicker alternative to controlledMating. %0a* CHG: simuComplexDisease.py has been re-written.%0a* NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG to turn on certain debug mode.%0a* BUG: fixed a bug about s_shallowCopied flag of population.%0a* CHG: Remove starting allele and let all allele start from 0. tests and scripts have been modified. These changes can make binary and other modules behave the same.%0a* CHG: (internal change) upgrade to boost 1.33.1. This allows me to use boost::iostream for instant file compression.%0a* NEW: File format change that compress population genotype before it is saved. This will greatly reduce the file size of saved populations.%0a* NEW: add compress=True option to savePopulation(). For a large file: [@%0a         Before: txt: 496M, 58s load, 24s write%0a	         xml: 169M, 19s load, ? write%0a	 Now:    txt: 66M,  25s load, 125s save%0a	         bin: 51M,  10s load, 70s write%0a	 Since load operation tends to happen more often than save,%0a	 this increased write time seems to be acceptable.%0a	 @]%0a* NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will be equilivalent to compress=True (although compress=True does not add .gz extension to the filename supplied. )%0a			 %0a%0a!!! Version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a* CHG: 'not enough case/control' in caseControlSample now generates a warning message, rather than exception.%0a* CHG: set the default sample saveAs format to 'auto', instead of 'bin' 'bin' was used before 'auto' was introduced%0a* NEW: the format parameter of loadPopulation, loadSimulator are obsolete. File type will be automatically determined.%0a* NEW: the wrap files will be automatically generated if any of the source files is modified. This is useful mostly for svn users.%0a* NEW: simuUtil/SaveLinkage is improved in efficiency%0a* CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre instead of filename.ped, which will be used when pre is False.%0a* CHG: (internal cleaning) fitness is implemented differently.%0a* CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a* CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a* CHG: (internal) change the use of pointer to iterator, in preparation for compact presentation of binary alleles.%0a* NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1 and are stored internally as bits to save spaces.%0a* CHG: carray can now read/write binary allele. However, it can no longer be a standalone type. It should always be only a reference to a piece of memory. This simplifies the design since we do not have to%0a         worry about extending, slicing etc.%0a* NEW: (important) addition of ba, baop modules for binary allele. Extensive tests are needed but it is in working status now, including the arrGenotype%0a         function series.%0a* NEW: you can now directly compare individuals and populations in python.%0a* CHG: carray is no longer a standalone type. (You can not create it in python)%0a* NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a* NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a* NEW: Complete test cases for all operators.%0a* CHG: remove sep parameter of operators. Users need separator between output of operators can use a output() operator manually. (sep is originally a bad idea.)%0a* NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a* CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a%0a!!! Version 0.6.11 - (Rev 119) - Jan 19, 2006%0a* DOC: add examples of penetrance operators to the reference manual.%0a* DOC: document using pyOperator to build pure-python operators%0a* NEW: check return value of pyPenetrance function to be within [0,1]%0a* NEW: add operator continueIf, in addition to terminateIf%0a* NEW: add 's' behavior to operator pause, which will invoke an interactive python shell. Current population is by default exposed to the main dictionary as variable 'pop. This can be controled by parameter %0a         exposePop and popName.%0a* NEW: add test case test_opPause.py%0a* NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a* NEW: add subPop parameter to population::removeIndividual%0a* DOC: add full member function of population object list to reference manual%0a* DOC: add genotypic structure function list to reference manual%0a* DOC: add individual function list to refernce manual%0a* CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a         mapPenetrance etc%0a* NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector, quantrait) except for locus, you can specify loci, and a longer map or array of values.%0a* NEW: pyOperator can now be a during-mating operator. Pass a python function func(pop, offspring, dad, mom, param) and set stage=DuringMating will do.%0a* BUG: fix another memory leak problem when an internal population is exposed%0a* NEW: improve the efficiency of dynamic type finding of population and individual Decent performance boost for pyOperator, especially to the DuringMating mode.%0a* NEW: use the new swig -external-runtime feature to generate swigpyrun.h, this allows me to relocate some utility functions from the interface file to utility.h%0a* NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a* NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a* DOC: add simuPOP coding convension to simuPOP reference manual%0a* NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a* NEW: give correct prompt for pause operator regarding exported population name%0a* BUG: fix a bug in affectedSibpairSample, which will generate the wrong sample if an operator is used a second time (So AffectedSibpairSample is not affected).%0a%0a!!! Version 0.6.10 (Rev90) - Dec, 20th, 2005%0a* NEW: add recCount(loc) and recCount() to recombinator to track the number of recombination event.%0a* NEW: add mutationCount(loc) and mutationCounts() to muators to track the number of mutation event.%0a* NEW: add atPloidy=[0] to pointMutator.%0a* CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term change should be done as soon as possible.%0a* NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used to estimate recombination rate between markers.%0a* NEW: convert test_mutator.py to unittest framework.%0a* NEW: add DBG_DEVEL for developer-level debug information.%0a* CHG: Make adjustment to how genotype structure is accessed from individual and limit the number of subpopulations to 2^31. Save 8 bytes (24->16) for each individual without noticable performance penalty. %0a* BUG: fix a tiny bug about optimization mode reporting%0a* NEW: test_population is better now, but still way to go.%0a* CHG: separate simuComplexDisease.py into simuComplexDisease.py and analComplexDisease.py. The first script will run simulation and generate a population saved in binary format. The second script will run the old analyses (apply penetrance function, plot figures, apply genehunter etc.)%0a* NEW: add more info to saved config file. (Add a command  line script)%0a* CHG: simuOpt does not load wx automatically when --noDialog is used.%0a* BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a* BUG: fix a memory leak problem with PyObject->double conversion.%0a* CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a%0a!!! Version 0.6.9 (Rev71) - Nov, 19th,  2005%0a* add pyOperator, the ultimate hybrid operator, this will considerably simplify many coomplicated tasks %0a* start to convert all test cases to PyUnit. This means better test cases and more thorough testing. I expect that code 0.7.0 is a version with much less bugs due to this change. %0a* fix a bug in initializer (parameter proportion)%0a* fix a bug in recombinator concerning direct chrom copy.%0a* remove autoconf, Makefile.icc stuff to avoid confusion.%0a* fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a* add subversion  revision number to doc and binary releases for better tracking of changes.%0a* fix windows binary import problem caused by mingw/msvcrt. Details please see INSTALL.%0a* fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to handle None return.)%0a* add parameter --resampleOnly and --reAnalyzeOnly%0a* remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a* add simuViewPop.py (module and command) that can load and view popularion property, calculate statistics etc.%0a%0a!!! Version 0.6.8 - Sep 21st, 2005%0a* fix a reporting bug in simuCDCV.py%0a* support sex chromosome and sex chromosome related mating, recombination issues.%0a** sexChrom() in population::population(), %0a** stop recombination between XY of male individual%0a** determine sex in random mating by sex chromosome%0a* add parameters atPloidy, sex to initializers. Now, you can initialize individuals at ploidy level and control assignment of sex. Now, with so many options, these initializers are overly complicated.%0a* add support for sex-specific recombination rate. (parameter maleIntensity, maleRate, and maleAfterLoci.)%0a* modify some features of simuComplexDisease.py%0a* release 0.6.8 and set up daily snapshots %0a%0a!!! Version 0.6.7 - Aug, 1st, 2005%0a* Add help() infor for the function version of operators and member functions.%0a* use Walker's alias algorithm for weighted sampling. Random mating with selection should be only slightly slower than without selection. The performance of simuCDCV.py increased by 15%25 using this algorithm. This method will use a lot of RAM when population size is large (8*N bytes).%0a* add compiler info to Welcome message. (to see if it matches that of Python.)%0a* change the use of logfile in simuCDCV.py %0a* fix a bug in operator InitByFreq.%0a%0a!!! Version 0.6.6 - various GUI / wxPython improvements. Not released.%0a* add wxGetParam. Will be used when wxPython is available.%0a* add wxPython version of listVars. Much better than the text version when wxPython is available.%0a* add some demographic functions in simuUtil.py%0a* use grid for tkinter box%0a* add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a* find an uncaptured out of memory exception.%0a* simuCDCV.py is better, with log file.%0a* stop using global variable gen. Add gen() function to individual population and "gen" to local variable space. (Avoid using modular level global variable) If this breaks anything, please let me know.%0a* Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and simuCDCV.py. This is more natural.%0a* Add tooltip to the wxPython version of getParam.%0a%0a!!! Version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a* separate user's guide and reference manual%0a* streamline getParam, usage, help etc.%0a* add scripts folder for common simupop templates%0a* add quiet option to simuPOP to suppress initial input%0a* add tk support for easy inputing of variables. This is a major enhancement for userfriendliness. A first glimpse of a GUI%0a* fix a bug in saving shared variables. Exam saved format. Full backward compatibility should start from here.%0a* simuComplexDisease.py. It uses almost all features of simuPOP%0a* remove headers support for object. They are not very useful and hard to use.%0a%0a!!! Version 0.6.4 - efficiency and usability. Not released%0a* savePopulation saves local variables as well. This is used to save special info like disease susceptibility loci. %0a* Label save population with max allowed allele number.%0a* merge some parameters through python code. Now, parameters like rate can be either a number or an array. Same is true for value, indRange.%0a* caseControlSample can takes array cases/controls parameters.%0a* optimized genoStructure access, fix a bug about transferring the structure%0a* add LoadRandFam ( not easy :-)%0a* add parameters loci, chrom, indRange, subPop to dumper() and Dump() Dump() is finally useful now.%0a* more efficient handling of ancestral pops%0a%0a!!! Version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a* add simulator::getPopulation get a copy of population%0a* add simuOpt to control simuPOP behavior, hide other modules%0a* add pointMutator%0a* change the meaning of rate in recombinator, add parameter intensity%0a* IMPORTANT: population can contain multiple generations. add: population.pushAndDiscard (CPPONLY), Lots of work. parameter ancestry for population.__init__ parameter ancestry for dumper%0a* add SavePopulations and LoadPopulations function.%0a* add stat(homoFreq and expHetero)%0a* fix a small bug with end %3c 0 and step > 1%0a* add splitSubPop(ByProportion), mergeSubPops member functions, operators and functions.%0a* make duringMating oeprators re-order automatically%0a* add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a* add affected sibpair sampling scheme%0a* export to linkage format (affected sibpair samples)%0a* export to randfam format%0a* test parentsTagger, successfully track pedigree info   %0a%0a!!! Version 0.6.2 - better usage of vars  Mar, 23, 2005%0a* variables are now population associated. (pop.evaluate(...)%0a* add quantitative trait and penetrance support%0a* add dryrun parameter to apply and evolve%0a* dvars() function. (Automatic dictionary wrapper class)%0a* add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a* varPlotter becomes an operator.%0a* add D, D' and r2 measures%0a* add newSubPopSizeFunc option to Mating schemes%0a* change haploFreq to count all haplotypes.%0a* add multi-allele Fst, LD etc. (average)%0a* fixes all memory leak and reference count problems %0a* save/load auto format according to file extension.%0a* fix a small bug of unclosed files.%0a* finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a* fix two bugs in AvgLD calculation and in recombinator.%0a%0a!!! Version 0.6.1	* usability and real applications Feb, 12, 2005%0a* add simuPOP_la library for long alleles.%0a* add exposePop option to pyEval (better pure-python operator support)%0a* better treatment for carray. (fix a bug)%0a* more statistics: Fst, Rst, H_est, H_obs etc%0a* read/write, FSTAT format%0a* use simple string instead of list to store statements.%0a* merge alleleCounter and popStat since alleleCounter may depend on popStat%0a* add operator pause for presentation purpose new operator is called 'basicStat'%0a* Genomic control (use R/gap package, simple subpop vs subpop version)%0a%0a!!! Version 0.6.0 - validation and distribution, Jan, 1st, 2005%0a* bug fixes%0a* better distribution process and binaries.%0a* remove internal language and use Python expression only%0a* more mutation models%0a* some hybrid operators added%0a* simuPOP website%0a%0a!!! Version 0.5.9 - performance boost, dynamic population size  Dec. 12th, 2004%0a* re-write Bernulli-trials and gain 10x performance boost%0a* dynamic population size through newSubPopSizeExpr="".%0a* re-write migration to allow migration between subset of subpopulations%0a* ability to create new subpopulation through migration%0a* tagging x-y location.%0a* visualize migration%0a%0a!!! Version 0.5.8 - selection Dec. 5nd, 2004%0a* add selection. %0a* better matings.%0a* bug fixes%0a* migration and selection examples%0a%0a!!! Version 0.5.7 -  serialization Nov. 24, 2004%0a* add serialization of simulator. Now I can save population/simulator into a file and load it later.%0a* text, xml and binary formats are supported. XML support is especially useful since the data can then be easily loaded into other applications.%0a%0a!!! Version 0.5.6 -  expression. Nov. 19, 2004%0a* better shared variable interface %0a* (IMPORTANT!) implement a C/Matlab like language to calculate statistics. Terminator has been re-written. Many applicaitons are expected to be done easily.%0a* add more functions (abs etc) to inline expression)%0a* fixed some bugs.%0a    %0a!!! Version 0.5.5, - more clean up,  more examples. Nov. 10, 2004%0a* clean the code. Use unsigned long when applicable. Elimilate all compiling warnings.%0a* add some more test cases to cover all user features.%0a* Some real examples%0a%0a!!! Version 0.5.4, Nov. 7, 2004 - clean the code. still working on the code base%0a* return default value for SharedVariable::getVar(name, default) and display warning when in debug mode.%0a* shared variables can take string, double, array and dictionary.%0a* varParser can now take all kind of shared variables, using %25str, %25double, %25array[index], %25dictionary{key}%0a* DataProvider is separated from Operator and is put in utility.h%0a* DataSource is separated from Visualizer so that other operators can also use such sources.%0a* VarDataSource is provided so Visualizer etc can visaulize/display shared variables directly.%0a%0a!!! Version 0.5.3 Oct 10, 2004 -- some interesting new features%0a* shared variables (operators can store and retrieve variables by name)%0a* better written outputHelper. Now can print shared variables. for example %25(gen)+%25shvar%0a* add "memory file" to improve efficiency under certain circumstances.%0a* overhaul of operator's filename parser (can take shared var now)%0a* provide binary distribution for linux, mac and solaris.%0a* create a batch file to build win32 binary. (Much easier to use) distribute win32 binary. %0a   %0a!!! Version 0.5.2  -- windows port, smaller distribution, better help()%0a* help(class/function) now uses doxygen generated document.%0a* distribute tools like .emacs.python.el and swig.xsl%0a* remove all unnecessary files from boost and gsl distribution this is done by some perl scripts testing the usefulness of each file.%0a* ported to windows. see INSTALL.win32 for details fixed two windows specific bugs.%0a* make DEBUG the default library (optimized will be used less frequently.)%0a   %0a!!! Version 0.5.1%0a* better suport of GSL. add setRNG()%0a* better debug debug(code) instead of debug(level)%0a* better macOS support%0a      %0a!!! Version 0.5%0a* a working distribution with lots of test cases%0a* ported to macOS, solaris%0a%0a!!! Version 0.1 Friday 18, June 2004%0a  %0a* Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a* change README and make it doxygen mainpage%0a* create todo list and many other documents%0a* implement exception classes with error message sent to Python%0a* change most arrays to vector so that they can be accessed through python%0a* find the right way to do keyword argument from python. Very useful.%0a* Population basic structure is finished with basic operations.%0a* Operator start-every-end-at is implemented.%0a* genetic drifting sample program went fine.%0a   %0a%0a%0a
time=1249620786
title=Change Log of simuPOP
author:1249620786=
diff:1249620786:1249619615:=22c22%0a%3c * CHG: statHaploFreq now uses tuple (instead of string) as loci and haplotype indexes.%0a---%0a> * CHG: statHaploFreq now uses tupe (instead of string) as loci and haplotype indexes.%0a
host:1249620786=127.0.0.1
author:1249619615=
diff:1249619615:1245693692:=9,33d8%0a%3c !!! version 0.9.6 - Rev 2849 (Aug 6, 2009)%0a%3c * NEW: Add a global function closeOutput to close '>>' or '>>>' output files used in the function form of an operator.%0a%3c * BUG: Fix a memory leak of LoadPopulation.%0a%3c * CHG: Rename function rng() to GetRNG() for consistent naming of functions.%0a%3c * NEW: Merge overloaded functions of population::setIndInfo, population::indInfo, population::individual, population::individuals, population::vars, simulator::vars, individual::setGenotype, individual::genotype, 	individual::allele, individual::setAllele, individual::alleleChar, 	individual::info, individual::setInfo to one function with more complex		input type and default parameter. This change allows keyword arguments for all these functions.%0a%3c * CHG: the parameter order of function population::ancestor has been changed!%0a%3c * CHG: stat(popSize=True) accepts subPops parameter. It now output 'popSize' (a number), 'subPopSize' (a list) and subPop[vsp]['popSize'] (a number). By default, it does not calculate population size for (virtual) subpopulations.%0a%3c * CHG: Introduce parameter vars to operator stator. It will be used to replace all blah_param parameters.%0a%3c * CHG: Remove numOfAllele parameter of stat() operator.%0a%3c * CHG: Parameter subPops now treats [] as no subpopulation, and accept AllSubPops as its usual default parameter.%0a%3c * CHG: Rename parameter rep to reps in all operators. This parameter now treats	input [] as no replicate and use AllReps as its default input.%0a%3c * CHG: Remove expHetero statistics. Remove allele-level heterozygosity variable. Rename heterozygosity variables.%0a%3c * CHG: statGenoFreq now uses tuple (instead of string) as genotype indexes. Parameter phase has been removed.%0a%3c * CHG: statHaploFreq now uses tupe (instead of string) as loci and haplotype indexes.%0a%3c * NEW: Add statInfo to calculate sum, mean, var, max and min of information fields.%0a%3c * CHG: rewrite statLD and change how primary alleles are handled. Please refer to user's guide for details.%0a%3c * NEW: add relationship SpouseAndOffspring to pedigree::locateRelatives.%0a%3c * NEW: add parameter pedFields to population::extract.%0a%3c * NEW: Introduce new type defdict for allele, genotype and haplotype counts 	and frequencies.%0a%3c * CHG: Disallow the use of nested list for parameter lociPos of population().%0a%3c * NEW: Allow single-form parameter for parameters of function population().%0a%3c * CHG: Rename paramter Fst of operator stat to structure, change associated variable names. This leaves room for the implementation of other structure related statistics.%0a%3c * NEW: Add Nei's 1973 Gst statistics.%0a%3c * NEW: Add parameter suffix to operator stator.%0a%3c %0a
host:1249619615=127.0.0.1
author:1245693692=
diff:1245693692:1245688242:=29c29%0a%3c * NEW: Move trajectory simulation functions out of the simuPOP core. They will be reimplemented in simuUtil.%0a---%0a> * NEW: Move trajectory simulation functions out of the simuPOP core and reimplement them in simuUtil.%0a
host:1245693692=127.0.0.1
author:1245688242=
diff:1245688242:1245688092:=9,33d8%0a%3c !!! version 0.9.5 - Revision 2740 (Jun 22, 2009)%0a%3c * NEW: Supports SWIG 1.3.39.%0a%3c * BUG: Fix a bug when using simuRPy for R version %3c= 0.9.0 under windows.%0a%3c * CHG: Do not set default loci name to "locX-Y". Empty string will be returned if lociNames are not set. This also changes the behavior of functions locusByName and lociByNames.%0a%3c * CHG: Do not set default subpopulation name to "Unnamed". Empty string will be returned if lociNames are not set. population::subPopName() is changed accordingly.%0a%3c * NEW: Add matrixMutator and an early form of actgMutator.%0a%3c * NEW: Add mapIn and mapOut feature to all mutators.%0a%3c * NEW: Add parameter name to population::mergeSubPops and operator mergeSubPops%0a%3c * NEW: Add parameter names to population::splitSubPop and operator splitSubPops.%0a%3c * NEW: Allow parameter infoFields to take single form values. Remove  population::addInfoField() because addInfoFields() now accepts single input.%0a%3c * BUG: Fix a bug with persistent dirty signature.%0a%3c * CHG: Replace parameter maxAllele in operator kamMutator with k (= maxAllele + 1), and rename parameter rate to rates.%0a%3c * CHG: Merge operator gsmMutator to smmMutator and pyMutator.%0a%3c * CHG: Rename parameter rate to rates for operator recombinator.%0a%3c * NEW: Mutators now supports virtual subpopulations (parameter VSP).%0a%3c * NEW: ifElse operator now accepts lists of ifOps and elseOps.%0a%3c * NEW: Allow single form input for operator lists.%0a%3c * CHG: Operators are now copied to simulator::evolve. This makes counting functions such as recombinator::recCount useless so they are removed.%0a%3c * NEW: Add a hierarchical island migration model to simuUtil.py.%0a%3c * NEW: Add a mixedMutator to simulated mixed mutation models.%0a%3c * NEW: Move trajectory simulation functions out of the simuPOP core and reimplement them in simuUtil.%0a%3c * NEW: Add a context-dependent mutator contextMutator and context support for pyMutator.%0a%3c * NEW: Allow mitochondrialGenoTransmitter to be used in haploid populations.%0a%3c * NEW: Add links to download examples to the online user's guide.%0a%3c %0a
host:1245688242=127.0.0.1
author:1245688092=
diff:1245688092:1243975067:=6,8d5%0a%3c %0a%3c This page lists Change logs of all official simuPOP releases. If you would like to see what has been changed since the last official release, you can check the [[ http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/ChangeLog | ChangeLog]] of the  [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk | development version of simuPOP]].%0a%3c %0a
host:1245688092=127.0.0.1
author:1243975067=
diff:1243975067:1243975053:=2,3c2,3%0a%3c %25rfloat margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.png%0a%3c %0a---%0a> %25margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.png%0a> %0a
host:1243975067=127.0.0.1
author:1243975053=
diff:1243975053:1243975030:=2,3c2,3%0a%3c %25margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.png%0a%3c %0a---%0a> %25rfloat margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.png%0a> %0a
host:1243975053=127.0.0.1
author:1243975030=
diff:1243975030:1243975008:=0a1,2%0a> (:toc:)%0a> %0a4,5d5%0a%3c (:toc:)%0a%3c %0a
host:1243975030=127.0.0.1
author:1243975008=
diff:1243975008:1243974989:=4,5c4,5%0a%3c %25rfloat margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.png%0a%3c %0a---%0a> %25rfloat margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.jpg%0a> %0a
host:1243975008=127.0.0.1
author:1243974989=
diff:1243974989:1242874927:=4,5c4%0a%3c %25rfloat margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px height=125%25 http://simupop.sourceforge.net/images/ChangeLog.jpg%0a%3c %0a---%0a> %0a
host:1243974989=127.0.0.1
author:1242874927=
diff:1242874927:1238819213:=5,15d4%0a%3c !!!version 0.9.4 - (Rev 2674) May 20, 2009%0a%3c * BUG: Fix the handling of proportions in splitSubPops.%0a%3c * BUG: Fix randomParentChooser when there is subpopulation structure.%0a%3c * BUG: Fix a bug that concerns mutation at invalid (unused) locations.%0a%3c * NEW: Allow Python parent choosers to return individual(s) directly.%0a%3c * CHG: Remove image plottype from varPlotter, with simplified code and enhanced	functions.%0a%3c * NEW: Add scatterPlotter that plots information fields.%0a%3c * NEW: Add infoPlotter and two special cases histPlotter and qqPlotter.%0a%3c * NEW: Add boxPlotter to plot boxplots of information fields.%0a%3c * NEW: Introducing derivedArgs with expression values.%0a%3c %0a
host:1242874927=127.0.0.1
author:1238819213=
diff:1238819213:1235160302:=5,23d4%0a%3c !!!version 0.9.3 - (Rev 2601) Apr 3, 2009%0a%3c * BUG: Fix a bug with population::removeLoci when given keep loci are not in order.%0a%3c * NEW: Prevent the use of greater than one probabilities in Bernulli trails.%0a%3c * NEW: Add a Tkinter implementation for simuProgress.%0a%3c * BUG: Fix a bug where subpopulation names of merged population are not properly merged.%0a%3c * NEW: Allow specifying non-string values in 'chooseFrom' and 'chooseOneOf' in simuOpt parameter specification.%0a%3c * NEW: Allow operators to output to a Python function.%0a%3c * NEW: Allow the use of double-click to open a browse dialog for file and directory input in simuOpt.%0a%3c * BUG: Fix a memory leak bug related to infoEval and infoExec. Optimize infoExec for some simple statements.%0a%3c * CHG: change parameter formOffGenotype of pyOperator to isTransmitter as a result of merging concepts 'primary during mating operator' and 'genotype transmitter'.%0a%3c * CHG: Move all scripts under the scripts directory to online cookbook.%0a%3c * CHG: Change relatedness calculations in operator stat.%0a%3c * NEW: Add calculation of HWE p-value to the stat operator.%0a%3c * NEW: Test individual index in population::removeIndividuals%0a%3c * BUG: Fix a bug when no subpopulation is given in splitSubPops.%0a%3c * CHG: Merge stat(association) to stat(LD), in preparation for case-control association	tests.%0a%3c * NEW: (experimental) Add case/control association chisq test to stat.%0a%3c * NEW: (experimental) Add Tajima's pi statistics (mean pairwise difference) to the stat() operator.%0a%3c %0a
host:1238819213=127.0.0.1
author:1235160302=
diff:1235160302:1235158100:=23c23%0a%3c * CHG: Move scripts/loadHapMap to simuPOP online cookbook.%0a---%0a> * CHG: More scripts/loadHapMap to simuPOP online cookbook.%0a
host:1235160302=127.0.0.1
author:1235158100=
diff:1235158100:1232429984:=5,31d4%0a%3c !!! version 0.9.2 - (Rev 2472) Feb 20, 2009%0a%3c * NEW: Allow populations in a simulator to have different genotype structure. %0a%3c * CHG: A simulator can no longer access genotypic structure information.%0a%3c * NEW: Add simulator::add to add new populations to a simulator.%0a%3c * CHG: Remove simulator::addInfoField and other functions because they can be applied to individual populations.%0a%3c * NEW: Allow the use of single form parameter in population::removeSubPops, removeIndividuals, addLoci, removeLoci and resize.%0a%3c * BUG: Fix a bug in adding locus to a population without any locus.%0a%3c * NEW: Alow the use of single form parameter in controlledOffspringGenerator. Handle single return value of allele frequency trajectory function.%0a%3c * NEW: Rename parameter fromSubPop to subPops and toSubPop to toSubPops for migrator, for    naming consistency.%0a%3c * NEW: Add mode = ByIndInfo to migrator so that users can explicitly set migrate_to informatin field and migrate.%0a%3c * NEW: Remove pyMigrator from the core. The varying migration rate migrator can be easily implemented in a Python operator. The indFunc mode is not at all useful because it can be done by a Python operator plus mode=ByIndInfo.%0a%3c * NEW: Allow unordered lociPos specification in population(), lociNames will be	rearranged accordingly.%0a%3c * NEW: Allow single parameter to parameters loci, ploidy in initByValue and initByFreq.%0a%3c * NEW: Remove parameter chrom from dumper(), allow single parameter input for parameter loci in this operator.%0a%3c * NEW: Add pause operator to accept specified keys.%0a%3c * CHG: Remove rarely used parameters preStmts and postStmts from operators pyEval and		pyExec.%0a%3c * CHG: Polish operator infoEval and infoExec (they now supports virtual subpopulations). Document them in detail in user's guide and reference manual.%0a%3c * CHG: Remove hapMapUtil from the core. These functions belong more to the simuPOP		cookbook than the core.%0a%3c * CHG: More scripts/loadHapMap to simuPOP online cookbook.%0a%3c * CHG: Polish and document simuOpt. getParam function now belongs to the simuOpt class.%0a%3c * CHG: Remove jump and jumpIfFalse from parameter specification.%0a%3c * CHG: Replace --noDialog with --gui=False (and allow for values such as Tkinter).%0a%3c * CHG: Polish operator splitSubPop, replace which to subPops, and add the feature		to split subpopulations by information field. Rename this operator to splitSubPops.%0a%3c * CHG: population::splitSubPop can no longer split by proportion. Please use operator		splitSubPops and its function form SplitSubPops instead.%0a%3c 		%0a%3c %0a%3c %0a
host:1235158100=127.0.0.1
author:1232429984=
diff:1232429984:1232324347:=13,15c13,15%0a%3c * CHG: Rename mating scheme @@binomialSelection@@ to @@randomSelection.@@%0a%3c * CHG: Merge parameters @@convProb@@, @@convMode@@ and @@convParam@@ to @@convMode@@ in @@recombinator@@.%0a%3c * BUG: Fix option @@shuffleOffspring@@ in @@heteroMating()@@.%0a---%0a> * CHG: Rename mating scheme binomialSelection to randomSelection.%0a> * CHG: Merge parameters convProb, convMode and convParam to convMode in recombinator.%0a> * BUG: Fix option shuffleOffspring in heteroMating().%0a17c17%0a%3c * CHG: Remove parameter @@numParents@@ from @@offspringGenerator@@ and parent choosers.%0a---%0a> * CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a22,27c22,27%0a%3c * CHG: Change interface for @@pedigree::locateRelatives@@. Rename @@setIndexOfRelatives@@ to @@traceRelatives@@.%0a%3c * NEW: Allow replicate numbers in a simulator to refer to the last several ''active  populations''.%0a%3c * CHG: Merge parameter output and outputExpr and use @@'!expr'@@ for the expression case.%0a%3c * NEW: Allow parameter @@baseOperator::at@@ to take a single number in addition to a list.%0a%3c * NEW: Disallow parameter alias @@locus@@ to parameter loci in penetrance, selection and quantitative trait operators. Allow loci to accept a number.%0a%3c * NEW: Support other device types in @@varPlotter::saveAs@@.%0a---%0a> * CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives to traceRelatives.%0a> * NEW: Allow replicate numbers in a simulator to refer to the last several _active_ populations.%0a> * CHG: Merge parameter output and outputExpr and use '!expr' for the expression case.%0a> * NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a> * NEW: Disallow parameter alias locus to parameter loci in penetrance, selection and quantitative trait operators. Allow loci to accept a number.%0a> * NEW: Support other device types in varPlotter::saveAs.%0a
host:1232429984=127.0.0.1
author:1232324347=
diff:1232324347:1232324299:=200a201,202%0a> (:breakpage:)%0a> %0a
host:1232324347=127.0.0.1
author:1232324299=
diff:1232324299:1232323929:=4c4,6%0a%3c %0a---%0a> (:toc-back:)%0a> %0a> %0a201,202d202%0a%3c (:breakpage:)%0a%3c %0a
host:1232324299=127.0.0.1
author:1232323929=
diff:1232323929:1232323817:=4,6c4%0a%3c (:toc-back:)%0a%3c %0a%3c %0a---%0a> %0a
host:1232323929=127.0.0.1
author:1232323817=
diff:1232323817:1232323522:=1,2c1,2%0a%3c (:toc:)%0a%3c %0a---%0a> (:toc anchors=visible:)%0a> %0a
host:1232323817=127.0.0.1
author:1232323522=
diff:1232323522:1232298932:=1,2d0%0a%3c (:toc anchors=visible:)%0a%3c %0a
host:1232323522=127.0.0.1
author:1232298932=
diff:1232298932:1232298794:=4c4%0a%3c * NEW: Improve allele iterator so that @@stat(alleleFreq)@@ can handle chromosome x and y.%0a---%0a> * NEW: Improve allele iterator so that ''stat(alleleFreq)'' can handle chromosome x and y.%0a6,10c6,10%0a%3c * CHG: Remove parameter @@newSubPopSizeExpr@@ and rename @@newSubPopSize@@ to @@subPopSize@@, and @@newSubPopSizeFunc@@ to @@subPopSizeFunc@@.%0a%3c * CHG: Merge parameters @@subPopSize@@ and @@subPopSizeFunc@@. This parameter can now take both a list and a function.%0a%3c * BUG: Fix population load/save under windows, add simulator equality test (@@__cmp__@@).%0a%3c * CHG: Merge parameters @@numOffspringFunc@@, @@numOffspringParam@@ and @@mode@@ to @@numOffspring@@ in @@offspringGenerator@@.%0a%3c * CHG: Merge parameter @@sexParam@@ to @@sexMode@@ in @@offspringGenerator@@.%0a---%0a> * CHG: Remove parameter ''newSubPopSizeExpr'' and rename ''newSubPopSize'' to ''subPopSize'', and ''newSubPopSizeFunc'' to ''subPopSizeFunc''.%0a> * CHG: Merge parameters ''subPopSize'' and ''subPopSizeFunc''. This parameter can now take both a list and a function.%0a> * BUG: Fix population load/save under windows, add simulator equality test (''__cmp__'').%0a> * CHG: Merge parameters ''numOffspringFunc'', ''numOffspringParam'' and ''mode'' to ''numOffspring'' in ''offspringGenerator''.%0a> * CHG: Merge parameter ''sexParam'' to ''sexMode'' in ''offspringGenerator''.%0a648d647%0a%3c %0a
host:1232298932=127.0.0.1
author:1232298794=
diff:1232298794:1232294573:=1,2c1,10%0a%3c (:title Change Log of simuPOP:)%0a%3c %0a---%0a> ChangeLog of simuPOP%0a> %0a> !!! Version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a> * NEW: Allow populations in a simulator to have different genotype structure. %0a> * CHG: A simulator can no longer access genotypic structure information.%0a> * NEW: Add simulator::add to add new populations to a simulator.%0a> * CHG: Remove simulator::addInfoField and other functions because they can be applied to individual populations.%0a> * NEW: Allow the use of single form parameter in population::removeSubPops, removeIndividuals, addLoci, removeLoci and resize.%0a> * BUG: Fix a bug in adding locus to a population without any locus.%0a> %0a4c12%0a%3c * NEW: Improve allele iterator so that ''stat(alleleFreq)'' can handle chromosome x and y.%0a---%0a> * NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a6,10c14,18%0a%3c * CHG: Remove parameter ''newSubPopSizeExpr'' and rename ''newSubPopSize'' to ''subPopSize'', and ''newSubPopSizeFunc'' to ''subPopSizeFunc''.%0a%3c * CHG: Merge parameters ''subPopSize'' and ''subPopSizeFunc''. This parameter can now take both a list and a function.%0a%3c * BUG: Fix population load/save under windows, add simulator equality test (''__cmp__'').%0a%3c * CHG: Merge parameters ''numOffspringFunc'', ''numOffspringParam'' and ''mode'' to ''numOffspring'' in ''offspringGenerator''.%0a%3c * CHG: Merge parameter ''sexParam'' to ''sexMode'' in ''offspringGenerator''.%0a---%0a> * CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize, and newSubPopSizeFunc to subPopSizeFunc.%0a> * CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now take both a list and a function.%0a> * BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a> * CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring in offspringGenerator.%0a> * CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a
host:1232298794=127.0.0.1
author:1232294573=
diff:1232294573:1232294526:=308c308,309%0a%3c * NEW/CHG: add order parameter to population arr function series. Changed functions are: [@%0a---%0a> * NEW/CHG: add order parameter to population arr function series.%0a> Changed functions are: [@%0a
host:1232294573=127.0.0.1
author:1232294526=
diff:1232294526:1232294077:=7,8c7,10%0a%3c * CHG: Remove simulator::addInfoField and other functions because they can be applied to individual populations.%0a%3c * NEW: Allow the use of single form parameter in population::removeSubPops, removeIndividuals, addLoci, removeLoci and resize.%0a---%0a> * CHG: Remove simulator::addInfoField and other functions because they can be%0a> 	applied to individual populations.%0a> * NEW: Allow the use of single form parameter in population::removeSubPops,%0a> 	removeIndividuals, addLoci, removeLoci and resize.%0a14,15c16,19%0a%3c * CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize, and newSubPopSizeFunc to subPopSizeFunc.%0a%3c * CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now take both a list and a function.%0a---%0a> * CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a> 	and newSubPopSizeFunc to subPopSizeFunc.%0a> * CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a> 	take both a list and a function.%0a17c21,22%0a%3c * CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring in offspringGenerator.%0a---%0a> * CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a>         in offspringGenerator.%0a20c25,26%0a%3c * CHG: Merge parameters convProb, convMode and convParam to convMode in recombinator.%0a---%0a> * CHG: Merge parameters convProb, convMode and convParam to convMode in%0a> 	recombinator.%0a24,26c30,35%0a%3c * CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight from heteroMating.%0a%3c * NEW: Allow a demographic function to return a number if there is only one subpopulation.%0a%3c * NEW: Allow pedigreeMating to set sex, affection status and some information fields from the pedigree object.%0a---%0a> * CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a> 	from heteroMating.%0a> * NEW: Allow a demographic function to return a number if there is only one%0a> 	subpopulation.%0a> * NEW: Allow pedigreeMating to set sex, affection status and some information%0a> 	fields from the pedigree object.%0a28,30c37,42%0a%3c * CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives to traceRelatives.%0a%3c * NEW: Allow replicate numbers in a simulator to refer to the last several _active_ populations.%0a%3c * CHG: Merge parameter output and outputExpr and use '!expr' for the expression case.%0a---%0a> * CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a> 	to traceRelatives.%0a> * NEW: Allow replicate numbers in a simulator to refer to the last several%0a>         _active_ populations.%0a> * CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a>         case.%0a32c44,45%0a%3c * NEW: Disallow parameter alias locus to parameter loci in penetrance, selection and quantitative trait operators. Allow loci to accept a number.%0a---%0a> * NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a> 	selection and quantitative trait operators. Allow loci to accept a number.%0a44,45c57,61%0a%3c * CHG: Move operators pySubset(), randomSample(), caseControlSample() and affectedSibpairSample from simuPOP core to simuUtil.py. Remove src/sampler.*.%0a%3c * CHG: Remove infoTagger, sexTagger and affectionTagger and will replace them by pedigreeTagger.%0a---%0a> * CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a> 	and affectedSibpairSample from simuPOP core to simuUtil.py.%0a> 	Remove src/sampler.*.%0a> * CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a> 	replace them by pedigreeTagger.%0a51c67,68%0a%3c * CHG: Recombiantor no longer supports recombination by sex, and haplodiploid chromosomes.%0a---%0a> * CHG: Recombiantor no longer supports recombination by sex, %0a> 	and haplodiploid chromosomes.%0a56,57c73,75%0a%3c * NEW: Add two examples in doc/cookbook, demonstrating the use of customized genotype transmitters and mitochondrialGenoTransmitter.%0a%3c %0a---%0a> * NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a> 	genotype transmitters and mitochondrialGenoTransmitter.%0a> %0a65c83,84%0a%3c * CHG: Completely change the way sex chromosomes are handled, and add initial support for customized chromosome.%0a---%0a> * CHG: Completely change the way sex chromosomes are handled, and add%0a> 	initial support for customized chromosome.%0a71,72c90,93%0a%3c * CHG: Make pedigree a subclass of population and move population::locateRelatives and population::setRelativeIndex to this class.%0a%3c * CHG: Temporarily disable all pedigree related features such as pedigree parent chooser, pedigree mating scheme, and all samplers.%0a---%0a> * CHG: Make pedigree a subclass of population and move population::locateRelatives%0a>         and population::setRelativeIndex to this class.%0a> * CHG: Temporarily disable all pedigree related features such as pedigree parent%0a>         chooser, pedigree mating scheme, and all samplers.%0a75c96,97%0a%3c * CHG: Replace population::mergePopulationByLoci by population::addChromFromPop and population::addLociFromPop.%0a---%0a> * CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a> 	and population::addLociFromPop.%0a87,89c109,113%0a%3c * NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []), and REP_LAST (now -1).%0a%3c * CHG: Replace simulator::getPopulation by simulator::population and simulator::extract.%0a%3c %0a---%0a> * NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a> 	and REP_LAST (now -1).%0a> * CHG: Replace simulator::getPopulation by simulator::population and%0a> 	simulator::extract.%0a> %0a96,99c120,127%0a%3c * CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete and will be removed later.%0a%3c * NEW: add individual::genotype (previously called arrGenotype) and individual::arrGenotype.%0a%3c * CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed later.%0a%3c * CHG: population arrGenotype are marked obsolete and will be removed later.%0a---%0a> * CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a> 	and will be removed later.%0a> * NEW: add individual::genotype (previously called arrGenotype) and%0a> 	individual::arrGenotype.%0a> * CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a> 	later.%0a> * CHG: population arrGenotype are marked obsolete and will be removed%0a> 	later.%0a101c129,130%0a%3c * BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting images.%0a---%0a> * BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a> 	images.%0a106c135,136%0a%3c * NEW: change the return type of allele() so that no boolean value (True or False) will be returned from the binary modules.%0a---%0a> * NEW: change the return type of allele() so that no boolean value (True or False)%0a> 	will be returned from the binary modules.%0a109,112c139,146%0a%3c * BUG: Fix a bug when calculating expected heterozygosity with increased number of subpopulations.%0a%3c * BUG: Fix a bug in controlled random mating where number of affected alleles are calculated from current instead of offspring populations.%0a%3c * CHG: Only write (compressed if possible) in text format. simuPOP can still read binary and xml formats.%0a%3c * BUG: Fix a bug that is related to the calculation of Fst in populations with unordered individuals.%0a---%0a> * BUG: Fix a bug when calculating expected heterozygosity with increased%0a> 	number of subpopulations.%0a> * BUG: Fix a bug in controlled random mating where number of affected alleles%0a> 	are calculated from current instead of offspring populations.%0a> * CHG: Only write (compressed if possible) in text format. simuPOP can still%0a> 	read binary and xml formats.%0a> * BUG: Fix a bug that is related to the calculation of Fst in populations with%0a> 	unordered individuals.%0a117,118c151,153%0a%3c * NEW: Stop distributing zlib1.dll by building zlib from source under windows.%0a%3c %0a---%0a> * NEW: Stop distributing zlib1.dll by building zlib from source under%0a> 	windows.%0a> %0a121c156,157%0a%3c * NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying population size and selection pressure.%0a---%0a> * NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a> 	population size and selection pressure.%0a128c164,165%0a%3c * NEW: load fine-scale recombinate rate and set variable genDist in loaded HapMap populations. (loadHapMap.py)%0a---%0a> * NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a> 	HapMap populations. (loadHapMap.py)%0a134,138c171,181%0a%3c * NEW: separate sex initialization from initByFreq, initByValue and pyInit and add a new operator initSex.%0a%3c * BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 during evolution.%0a%3c * CHG: Remove subpopulation specific virtual subpopulation. This is no longer needed with combined virtual splitter.%0a%3c * NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen) to access an individual in an ancestory generation directly.%0a%3c * NEW: support virtual subpopulation in fromSubPop parameter of a migrator. This allows sex-specific migraton and more complicated migration schemes.%0a---%0a> * NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a> 	and add a new operator initSex.%0a> * BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a> 	during evolution.%0a> * CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a> 	needed with combined virtual splitter.%0a> * NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a> 	to access an individual in an ancestory generation directly.%0a> * NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a> 	This allows sex-specific migraton and more complicated migration%0a> 	schemes.%0a141,143c184,187%0a%3c * NEW: add a new parent chooser infoParentsChooser and a new mating scheme consanguineousMating, along with an example doc/cookbook/Mating_consanguineous.py.%0a%3c %0a%3c %0a---%0a> * NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a> 	consanguineousMating, along with an example doc/cookbook/Mating_consanguineous.py.%0a> %0a> %0a146c190,191%0a%3c * NEW: add parameter numMale and sexMode to all offspring generator and mating schemes, to control the sex of offspring exactly.%0a---%0a> * NEW: add parameter numMale and sexMode to all offspring generator and%0a> 	mating schemes, to control the sex of offspring exactly.%0a149,150c194,198%0a%3c * NEW: add random parent chooser without replacement and/or with alpha individuals, haplodiploidOffspringGenerator, monogamousMating, polygamousMating, alphaMating, and haplodiploidMating mating schemes.%0a%3c * NEW: add haplodiploid option to GenoStructure. Recombinator now handles such populations correctly.%0a---%0a> * NEW: add random parent chooser without replacement and/or with alpha individuals,%0a> 	haplodiploidOffspringGenerator, monogamousMating, polygamousMating, alphaMating,%0a> 	and haplodiploidMating mating schemes.%0a> * NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a> 	populations correctly.%0a160c208,209%0a%3c * NEW: operator stator popSize=True also calculates virtual subpop size using variable virtualPopSize.%0a---%0a> * NEW: operator stator popSize=True also calculates virtual subpop size using%0a> 	variable virtualPopSize.%0a162,164c211,216%0a%3c * CHG: inheritTagger will inherit the first, instead of the second, information field from mother in TAG_Maternal mode.%0a%3c * CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no virtual subpopulation.%0a%3c * NEW: allow multiple genotype in the same virtual subpopulation split by genotypeSplitter%0a---%0a> * CHG: inheritTagger will inherit the first, instead of the second, information%0a> 	field from mother in TAG_Maternal mode.%0a> * CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a> 	virtual subpopulation.%0a> * NEW: allow multiple genotype in the same virtual subpopulation split by%0a> 	genotypeSplitter%0a175c227,228%0a%3c * CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the MPI related code).%0a---%0a> * CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a> 	MPI related code).%0a177,178c230,232%0a%3c * NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when a lot of populaitons are involved.%0a%3c %0a---%0a> * NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a> 	a lot of populaitons are involved.%0a> %0a182c236,237%0a%3c * NEW: add heteroMating to allow allow different mating scheme used for different subpopulations, or proportions of individuals%0a---%0a> * NEW: add heteroMating to allow allow different mating scheme used for different%0a> 	subpopulations, or proportions of individuals%0a192,193c247,250%0a%3c * BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') returns false even if this file does exist.%0a%3c * BUG: Fix the handling of binary option in command line, and handling of short arguments.%0a---%0a> * BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a> 	returns false even if this file does exist.%0a> * BUG: Fix the handling of binary option in command line, and handling of short %0a> 	arguments.%0a195c252,254%0a%3c * NEW: make use of second to last inforFields passed to pyPenetrance and pySelector to pass specified information fields to user-defined functions.%0a---%0a> * NEW: make use of second to last inforFields passed to pyPenetrance %0a> 	and pySelector to pass specified information fields to user-defined%0a> 	functions.%0a198c257,258%0a%3c * NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and chromNames parameter to population constructor.%0a---%0a> * NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a> 	chromNames parameter to population constructor.%0a208c268,269%0a%3c * NEW: add subPop(s) parameters to selectors, allowing different selection pressure in different subpopulations%0a---%0a> * NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a> 	in different subpopulations%0a213,216c274,281%0a%3c * NEW: add optional option destructive=False to simulator::getPopulation, as a way to retrieve a population more efficiently.%0a%3c * NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle control of migration using individual genotype.%0a%3c * NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is still usable)%0a%3c * BUG: fix a mutator crash when locus index difference exceeds the range of integer, for cases, for example, with 10k loci and 100k individuals.%0a---%0a> * NEW: add optional option destructive=False to simulator::getPopulation, as%0a> 	a way to retrieve a population more efficiently.%0a> * NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a> 	control of migration using individual genotype.%0a> * NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a> 	still usable)%0a> * BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a> 	for cases, for example, with 10k loci and 100k individuals.%0a218,220c283,286%0a%3c * NEW: add parameter byChromosome to population::mergePopulationByLoci and MergePopulationsByLoci to allow chromosome to chromosome merge.%0a%3c %0a%3c %0a---%0a> * NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a> 	MergePopulationsByLoci to allow chromosome to chromosome merge.%0a> %0a> %0a230c296,297%0a%3c * NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no allele 1. This is avoid trouble in  binary form. (maybe not a good idea).%0a---%0a> * NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a>     allele 1. This is avoid trouble in  binary form. (maybe not a good idea).%0a232,233c299,302%0a%3c * NEW: add population::mergePopulation, population::mergePopulationByLoci, MergePopulations, MergePopulationsByLoci, population::resize%0a%3c * NEW: add population::insertLoci, population::insertLocus, population::appendLoci, population::appendLocus%0a---%0a> * NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a> 	MergePopulations, MergePopulationsByLoci, population::resize%0a> * NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a> 	population::appendLocus%0a240,243c309,314%0a%3c * NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth and related tests and documents.%0a%3c * BUG: fix a bug when stat() tries to remove non-existings variables caused by population split.%0a%3c %0a%3c %0a---%0a> * NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a> 	and related tests and documents.%0a> * BUG: fix a bug when stat() tries to remove non-existings variables%0a> 	caused by population split.%0a> %0a> %0a248c319,320%0a%3c * NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile SaveQTDT now calls these three functions.%0a---%0a> * NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a> 	SaveQTDT now calls these three functions.%0a250c322,323%0a%3c * NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a population with unequal male and female allele frequencies, from Yaji Xu.%0a---%0a> * NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a> 	population with unequal male and female allele frequencies, from Yaji Xu.%0a254c327,328%0a%3c * NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better control over the calculation of these statistics.%0a---%0a> * NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a>     control over the calculation of these statistics.%0a274c348,349%0a%3c * NEW (build): try really hard to search proper boost libraries. One usually does not have to specify boost inc and lib paths to build simuPOP.%0a---%0a> * NEW (build): try really hard to search proper boost libraries. One usually%0a>     does not have to specify boost inc and lib paths to build simuPOP.%0a277c352,353%0a%3c * NEW: change pySelector and allow a second parameter gen for the fitness function This allows varying selection pressure.%0a---%0a> * NEW: change pySelector and allow a second parameter gen for the fitness function%0a>         This allows varying selection pressure.%0a288,295c364,371%0a%3c * NEW: change file format for binary modules, resulting much faster save/load.%0a%3c * NEW: fix adjustGenotype (efficiency)%0a%3c * BUG: fix simulator::clone(), introduced in 0.7.5%0a%3c * NEW: disable compression under windows due to a boost bug.%0a%3c * BUG: make simuRPy works with the latest R and rpy.%0a%3c * NEW: several new chapters in the user's guide.%0a%3c %0a%3c %0a---%0a>   -NEW: change file format for binary modules, resulting much faster save/load.%0a>   -NEW: fix adjustGenotype (efficiency)%0a>   -BUG: fix simulator::clone(), introduced in 0.7.5%0a>   -NEW: disable compression under windows due to a boost bug.%0a>   -BUG: make simuRPy works with the latest R and rpy.%0a>   -NEW: several new chapters in the user's guide.%0a> %0a> %0a299,301c375,381%0a%3c * NEW: (internal) Optimize binary allele handling. Copying of alleles are now faster than regular alleles.%0a%3c * NEW (internal): Optimize BernulliTrials and recombination. Recombination under certain conditions is 1/3 faster now.%0a%3c * NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials cache internal point for performance purposes. This also fixes a windows dynamic_bitset related bug (never figure out what was wrong).%0a---%0a> * NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a> 	faster than regular alleles.%0a> * NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a> 	under certain conditions is 1/3 faster now.%0a> * NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a>     cache internal point for performance purposes. This also fixes a windows%0a> 	dynamic_bitset related bug (never figure out what was wrong).%0a303,305c383,386%0a%3c * CHG: stop embedding zlib since the source does not work under windows. The installation process is changed as well.%0a%3c %0a%3c %0a---%0a> * CHG: stop embedding zlib since the source does not work under windows.%0a> 	The installation process is changed as well.%0a> %0a> %0a309c390%0a%3c Changed functions are: [@%0a---%0a> Changed functions are:%0a315d395%0a%3c 	@]%0a321c401,402%0a%3c * NEW: add instruction for using intel c++ compiler, which usually improve performance by 20%25 to 30%25.		%0a---%0a> * NEW: add instruction for using intel c++ compiler, which usually improve%0a>    performance by 20%25 to 30%25.		%0a330,332c411,416%0a%3c * CHG: change the allele type of long module to unsigned short, since 2^16 seems to be enough even for long allele cases.%0a%3c * NEW: add -c option to simuCluster.py to allow it to se command instead of the default qaub%0a%3c * NEW: add reference count debugging in simulator.evolve (require specially built python.)%0a---%0a> * CHG: change the allele type of long module to unsigned short, since%0a> 	2^16 seems to be enough even for long allele cases.%0a> * NEW: add -c option to simuCluster.py to allow it to se command instead%0a> 	of the default qaub%0a> * NEW: add reference count debugging in simulator.evolve (require%0a> 	specially built python.)%0a335c419,420%0a%3c * NEW: add population::individuals() function that can be used to iterate through all individuals (or in a subpopulation).%0a---%0a> * NEW: add population::individuals() function that can be used to iterate%0a> 	through all individuals (or in a subpopulation).%0a342,347c427,439%0a%3c * CHG: all populations must now explicitly state the information fields for each individual.%0a%3c * CHG: all qtrait and penetrance oeprators now use info fields of individuals (they use variable before). penetrance field is optional.%0a%3c * CHG: (Internal) selectors now use info field (fitness) rather than using its own population variable.%0a%3c * NEW: add --useDefault parameter to use default parameters instead of reading from stdin, if they can not be obtained from other methods.%0a%3c * NEW: simuCluster.py now subst environmental variables, and stops if there is remaining $ in the script.%0a%3c * CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use 'label' instead.%0a---%0a> * CHG: all populations must now explicitly state the information%0a> 	fields for each individual.%0a> * CHG: all qtrait and penetrance oeprators now use info fields of%0a> 	individuals (they use variable before). penetrance field is%0a> 	optional.%0a> * CHG: (Internal) selectors now use info field (fitness) rather than%0a> 	using its own population variable.%0a> * NEW: add --useDefault parameter to use default parameters instead of%0a> 	reading from stdin, if they can not be obtained from other methods.%0a> * NEW: simuCluster.py now subst environmental variables, and stops if%0a> 	there is remaining $ in the script.%0a> * CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a> 	'label' instead.%0a354c446,447%0a%3c * NEW: add script/simuCluster.py which assists submission of jobs on cluster machines.%0a---%0a> * NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a> 	machines.%0a356,358c449,453%0a%3c * NEW: random number seed is generated in a much better way, and is retrievable.%0a%3c * NEW: fix analComplexDisease.py which was not up to date with simuComplexDisease.py%0a%3c %0a---%0a> * NEW: random number seed is generated in a much better way, and is%0a> 	retrievable.%0a> * NEW: fix analComplexDisease.py which was not up to date with %0a> 	simuComplexDisease.py%0a> %0a372,373c467,470%0a%3c * NEW: Add trajectory simulation functions follows those from selSim and geneArtisan.%0a%3c * NEW: Add controlledMating that accept an generation only if allele frequency at specified locus/loci fail in specified range.%0a---%0a> * NEW: Add trajectory simulation functions follows those from selSim%0a>          and geneArtisan.%0a> * NEW: Add controlledMating that accept an generation only if allele%0a>          frequency at specified locus/loci fail in specified range.%0a375,376c472,476%0a%3c * NEW: implement trajectory simulation follows Slatkin 2001. This works better than methods from both selSim and geneArtisan.%0a%3c * CHG: (internal change) abort the original template design. This will make the source less flexible but can dramatically improve development time.%0a---%0a> * NEW: implement trajectory simulation follows Slatkin 2001. This %0a>          works better than methods from both selSim and geneArtisan.%0a> * CHG: (internal change) abort the original template design. This %0a>          will make the source less flexible but can dramatically improve%0a>          development time.%0a378c478,479%0a%3c * NEW: add controlledRandomMating and controlledBinomialSelection which implement a quicker alternative to controlledMating. %0a---%0a> * NEW: add controlledRandomMating and controlledBinomialSelection which%0a>          implement a quicker alternative to controlledMating. %0a380c481,482%0a%3c * NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG to turn on certain debug mode.%0a---%0a> * NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a>          to turn on certain debug mode.%0a382,385c484,491%0a%3c * CHG: Remove starting allele and let all allele start from 0. tests and scripts have been modified. These changes can make binary and other modules behave the same.%0a%3c * CHG: (internal change) upgrade to boost 1.33.1. This allows me to use boost::iostream for instant file compression.%0a%3c * NEW: File format change that compress population genotype before it is saved. This will greatly reduce the file size of saved populations.%0a%3c * NEW: add compress=True option to savePopulation(). For a large file: [@%0a---%0a> * CHG: Remove starting allele and let all allele start from 0. tests %0a>          and scripts have been modified. These changes can make binary%0a>          and other modules behave the same.%0a> * CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a>          boost::iostream for instant file compression.%0a> * NEW: File format change that compress population genotype before it is%0a>          saved. This will greatly reduce the file size of saved populations.%0a> * NEW: add compress=True option to savePopulation(). For a large file:%0a392,393c498,500%0a%3c 	 @]%0a%3c * NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will be equilivalent to compress=True (although compress=True does not add .gz extension to the filename supplied. )%0a---%0a> * NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a>          be equilivalent to compress=True (although compress=True does not%0a>          add .gz extension to the filename supplied. )%0a397,400c504,511%0a%3c * CHG: 'not enough case/control' in caseControlSample now generates a warning message, rather than exception.%0a%3c * CHG: set the default sample saveAs format to 'auto', instead of 'bin' 'bin' was used before 'auto' was introduced%0a%3c * NEW: the format parameter of loadPopulation, loadSimulator are obsolete. File type will be automatically determined.%0a%3c * NEW: the wrap files will be automatically generated if any of the source files is modified. This is useful mostly for svn users.%0a---%0a> * CHG: 'not enough case/control' in caseControlSample now generates %0a>          a warning message, rather than exception.%0a> * CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a>          'bin' was used before 'auto' was introduced%0a> * NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a>          File type will be automatically determined.%0a> * NEW: the wrap files will be automatically generated if any of the source%0a>          files is modified. This is useful mostly for svn users.%0a402c513,514%0a%3c * CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre instead of filename.ped, which will be used when pre is False.%0a---%0a> * CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a>          instead of filename.ped, which will be used when pre is False.%0a406,408c518,524%0a%3c * CHG: (internal) change the use of pointer to iterator, in preparation for compact presentation of binary alleles.%0a%3c * NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1 and are stored internally as bits to save spaces.%0a%3c * CHG: carray can now read/write binary allele. However, it can no longer be a standalone type. It should always be only a reference to a piece of memory. This simplifies the design since we do not have to%0a---%0a> * CHG: (internal) change the use of pointer to iterator, in preparation for%0a>          compact presentation of binary alleles.%0a> * NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a>          and are stored internally as bits to save spaces.%0a> * CHG: carray can now read/write binary allele. However, it can no longer %0a>          be a standalone type. It should always be only a reference to a %0a>          piece of memory. This simplifies the design since we do not have to%0a410c526,527%0a%3c * NEW: (important) addition of ba, baop modules for binary allele. Extensive tests are needed but it is in working status now, including the arrGenotype%0a---%0a> * NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a>          tests are needed but it is in working status now, including the arrGenotype%0a417c534,535%0a%3c * CHG: remove sep parameter of operators. Users need separator between output of operators can use a output() operator manually. (sep is originally a bad idea.)%0a---%0a> * CHG: remove sep parameter of operators. Users need separator between output of%0a>          operators can use a output() operator manually. (sep is originally a bad idea.)%0a426c544,546%0a%3c * NEW: add 's' behavior to operator pause, which will invoke an interactive python shell. Current population is by default exposed to the main dictionary as variable 'pop. This can be controled by parameter %0a---%0a> * NEW: add 's' behavior to operator pause, which will invoke an interactive%0a>          python shell. Current population is by default exposed to the main %0a>          dictionary as variable 'pop. This can be controled by parameter %0a436,437c556,560%0a%3c * NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector, quantrait) except for locus, you can specify loci, and a longer map or array of values.%0a%3c * NEW: pyOperator can now be a during-mating operator. Pass a python function func(pop, offspring, dad, mom, param) and set stage=DuringMating will do.%0a---%0a> * NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a>          quantrait) except for locus, you can specify loci, and a longer map %0a>          or array of values.%0a> * NEW: pyOperator can now be a during-mating operator. Pass a python function%0a>          func(pop, offspring, dad, mom, param) and set stage=DuringMating will do.%0a439,440c562,567%0a%3c * NEW: improve the efficiency of dynamic type finding of population and individual Decent performance boost for pyOperator, especially to the DuringMating mode.%0a%3c * NEW: use the new swig -external-runtime feature to generate swigpyrun.h, this allows me to relocate some utility functions from the interface file to utility.h%0a---%0a> * NEW: improve the efficiency of dynamic type finding of population and %0a>          individual Decent performance boost for pyOperator, especially to %0a>          the DuringMating mode.%0a> * NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a>          this allows me to relocate some utility functions from the interface %0a>          file to utility.h%0a446,447c573,576%0a%3c * BUG: fix a bug in affectedSibpairSample, which will generate the wrong sample if an operator is used a second time (So AffectedSibpairSample is not affected).%0a%3c %0a---%0a> * BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a>          sample if an operator is used a second time (So AffectedSibpairSample%0a>          is not affected).%0a> %0a449,450c578,581%0a%3c * NEW: add recCount(loc) and recCount() to recombinator to track the number of recombination event.%0a%3c * NEW: add mutationCount(loc) and mutationCounts() to muators to track the number of mutation event.%0a---%0a> * NEW: add recCount(loc) and recCount() to recombinator to track%0a>          the number of recombination event.%0a> * NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a>          the number of mutation event.%0a452,453c583,586%0a%3c * CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term change should be done as soon as possible.%0a%3c * NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used to estimate recombination rate between markers.%0a---%0a> * CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a>          change should be done as soon as possible.%0a> * NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a>          to estimate recombination rate between markers.%0a456c589,591%0a%3c * CHG: Make adjustment to how genotype structure is accessed from individual and limit the number of subpopulations to 2^31. Save 8 bytes (24->16) for each individual without noticable performance penalty. %0a---%0a> * CHG: Make adjustment to how genotype structure is accessed from individual and %0a>          limit the number of subpopulations to 2^31. Save 8 bytes (24->16) for each%0a>          individual without noticable performance penalty. %0a459c594,597%0a%3c * CHG: separate simuComplexDisease.py into simuComplexDisease.py and analComplexDisease.py. The first script will run simulation and generate a population saved in binary format. The second script will run the old analyses (apply penetrance function, plot figures, apply genehunter etc.)%0a---%0a> * CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a>          analComplexDisease.py. The first script will run simulation and generate%0a>          a population saved in binary format. The second script will run the old%0a>          analyses (apply penetrance function, plot figures, apply genehunter etc.)%0a467,468c605,609%0a%3c * add pyOperator, the ultimate hybrid operator, this will considerably simplify many coomplicated tasks %0a%3c * start to convert all test cases to PyUnit. This means better test cases and more thorough testing. I expect that code 0.7.0 is a version with much less bugs due to this change. %0a---%0a> * add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a>     coomplicated tasks %0a> * start to convert all test cases to PyUnit. This means better test cases and more%0a>     thorough testing. I expect that code 0.7.0 is a version with much less bugs due to%0a>     this change. %0a473,475c614,619%0a%3c * add subversion  revision number to doc and binary releases for better tracking of changes.%0a%3c * fix windows binary import problem caused by mingw/msvcrt. Details please see INSTALL.%0a%3c * fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to handle None return.)%0a---%0a> * add subversion  revision number to doc and binary releases for%0a>     better tracking of changes.%0a> * fix windows binary import problem caused by mingw/msvcrt. Details please see %0a>     INSTALL.%0a> * fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a>     handle None return.)%0a478,479c622,624%0a%3c * add simuViewPop.py (module and command) that can load and view popularion property, calculate statistics etc.%0a%3c %0a---%0a> * add simuViewPop.py (module and command) that can load and view popularion%0a>     property, calculate statistics etc.%0a> %0a483,487c628,635%0a%3c ** sexChrom() in population::population(), %0a%3c ** stop recombination between XY of male individual%0a%3c ** determine sex in random mating by sex chromosome%0a%3c * add parameters atPloidy, sex to initializers. Now, you can initialize individuals at ploidy level and control assignment of sex. Now, with so many options, these initializers are overly complicated.%0a%3c * add support for sex-specific recombination rate. (parameter maleIntensity, maleRate, and maleAfterLoci.)%0a---%0a>       -- sexChrom() in population::population(), %0a>       -- stop recombination between XY of male individual%0a>       -- determine sex in random mating by sex chromosome%0a> * add parameters atPloidy, sex to initializers. Now, you can %0a>     initialize individuals at ploidy level and control assignment of sex.%0a>     Now, with so many options, these initializers are overly complicated.%0a> * add support for sex-specific recombination rate. (parameter maleIntensity,%0a>     maleRate, and maleAfterLoci.)%0a493c641,644%0a%3c * use Walker's alias algorithm for weighted sampling. Random mating with selection should be only slightly slower than without selection. The performance of simuCDCV.py increased by 15%25 using this algorithm. This method will use a lot of RAM when population size is large (8*N bytes).%0a---%0a> * use Walker's alias algorithm for weighted sampling. Random mating with %0a>     selection should be only slightly slower than without selection. The performance%0a>     of simuCDCV.py increased by 15%25 using this algorithm. This method will use%0a>     a lot of RAM when population size is large (8*N bytes).%0a500c651,652%0a%3c * add wxPython version of listVars. Much better than the text version when wxPython is available.%0a---%0a> * add wxPython version of listVars. Much better than the text version %0a>     when wxPython is available.%0a506,507c658,662%0a%3c * stop using global variable gen. Add gen() function to individual population and "gen" to local variable space. (Avoid using modular level global variable) If this breaks anything, please let me know.%0a%3c * Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and simuCDCV.py. This is more natural.%0a---%0a> * stop using global variable gen. Add gen() function to individual population%0a>     and "gen" to local variable space. (Avoid using modular level global variable)%0a>     If this breaks anything, please let me know.%0a> * Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a>     simuCDCV.py. This is more natural.%0a515,516c670,673%0a%3c * add tk support for easy inputing of variables. This is a major enhancement for userfriendliness. A first glimpse of a GUI%0a%3c * fix a bug in saving shared variables. Exam saved format. Full backward compatibility should start from here.%0a---%0a> * add tk support for easy inputing of variables. This is %0a>     a major enhancement for userfriendliness. A first glimpse of a GUI%0a> * fix a bug in saving shared variables. Exam saved format. Full backward%0a>     compatibility should start from here.%0a518,519c675,677%0a%3c * remove headers support for object. They are not very useful and hard to use.%0a%3c %0a---%0a> * remove headers support for object. They are not very useful and %0a>     hard to use.%0a> %0a521c679,680%0a%3c * savePopulation saves local variables as well. This is used to save special info like disease susceptibility loci. %0a---%0a> * savePopulation saves local variables as well. This is used to save special info like %0a>     disease susceptibility loci. %0a523c682,683%0a%3c * merge some parameters through python code. Now, parameters like rate can be either a number or an array. Same is true for value, indRange.%0a---%0a> * merge some parameters through python code. Now, parameters like rate%0a>     can be either a number or an array. Same is true for value, indRange.%0a527c687,688%0a%3c * add parameters loci, chrom, indRange, subPop to dumper() and Dump() Dump() is finally useful now.%0a---%0a> * add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a>     Dump() is finally useful now.%0a535c696,699%0a%3c * IMPORTANT: population can contain multiple generations. add: population.pushAndDiscard (CPPONLY), Lots of work. parameter ancestry for population.__init__ parameter ancestry for dumper%0a---%0a> * IMPORTANT: population can contain multiple generations. %0a>     add: population.pushAndDiscard (CPPONLY), Lots of work.%0a>       parameter ancestry for population.__init__%0a>       parameter ancestry for dumper%0a539c703,704%0a%3c * add splitSubPop(ByProportion), mergeSubPops member functions, operators and functions.%0a---%0a> * add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a>       and functions.%0a572c737,738%0a%3c * add operator pause for presentation purpose new operator is called 'basicStat'%0a---%0a> * add operator pause for presentation purpose%0a>     new operator is called 'basicStat'%0a598,600c764,769%0a%3c * add serialization of simulator. Now I can save population/simulator into a file and load it later.%0a%3c * text, xml and binary formats are supported. XML support is especially useful since the data can then be easily loaded into other applications.%0a%3c %0a---%0a> * add serialization of simulator. Now I can save %0a>     population/simulator into a file and load it later.%0a> * text, xml and binary formats are supported. XML support%0a>     is especially useful since the data can then be easily%0a>     loaded into other applications.%0a> %0a603c772,774%0a%3c * (IMPORTANT!) implement a C/Matlab like language to calculate statistics. Terminator has been re-written. Many applicaitons are expected to be done easily.%0a---%0a> * (IMPORTANT!) implement a C/Matlab like language to calculate%0a>     statistics. Terminator has been re-written. Many applicaitons%0a>     are expected to be done easily.%0a608c779,780%0a%3c * clean the code. Use unsigned long when applicable. Elimilate all compiling warnings.%0a---%0a> * clean the code. Use unsigned long when applicable. Elimilate all %0a>     compiling warnings.%0a613c785,786%0a%3c * return default value for SharedVariable::getVar(name, default) and display warning when in debug mode.%0a---%0a> * return default value for SharedVariable::getVar(name, default)%0a>     and display warning when in debug mode.%0a615c788,789%0a%3c * varParser can now take all kind of shared variables, using %25str, %25double, %25array[index], %25dictionary{key}%0a---%0a> * varParser can now take all kind of shared variables, using%0a>     %25str, %25double, %25array[index], %25dictionary{key}%0a617,619c791,795%0a%3c * DataSource is separated from Visualizer so that other operators can also use such sources.%0a%3c * VarDataSource is provided so Visualizer etc can visaulize/display shared variables directly.%0a%3c %0a---%0a> * DataSource is separated from Visualizer so that other operators%0a>     can also use such sources.%0a> * VarDataSource is provided so Visualizer etc can visaulize/display%0a>     shared variables directly.%0a> %0a622c798,799%0a%3c * better written outputHelper. Now can print shared variables. for example %25(gen)+%25shvar%0a---%0a> * better written outputHelper. Now can print shared variables.%0a>     for example %25(gen)+%25shvar%0a626c803,804%0a%3c * create a batch file to build win32 binary. (Much easier to use) distribute win32 binary. %0a---%0a> * create a batch file to build win32 binary. (Much easier to use)%0a>     distribute win32 binary. %0a631,632c809,812%0a%3c * remove all unnecessary files from boost and gsl distribution this is done by some perl scripts testing the usefulness of each file.%0a%3c * ported to windows. see INSTALL.win32 for details fixed two windows specific bugs.%0a---%0a> * remove all unnecessary files from boost and gsl distribution%0a>     this is done by some perl scripts testing the usefulness of each file.%0a> * ported to windows. see INSTALL.win32 for details %0a>     fixed two windows specific bugs.%0a
host:1232294526=127.0.0.1
author:1232294077=
diff:1232294077:1232294043:=3c3%0a%3c !!! Version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a---%0a> !! Version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a13c13%0a%3c !!! Version 0.9.1 - (Rev 2330) Jan 13, 2009%0a---%0a> !! Version 0.9.1 - (Rev 2330) Jan 13, 2009%0a49c49%0a%3c !!! Version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a---%0a> !! Version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a76c76%0a%3c !!! Version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a---%0a> !! Version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a114c114%0a%3c !!! Version 0.8.8 - (Rev 1787) Oct 24, 2008%0a---%0a> !! Version 0.8.8 - (Rev 1787) Oct 24, 2008%0a133c133%0a%3c !!! Version 0.8.7 - (Rev 1755) Aug 29, 2008%0a---%0a> !! Version 0.8.7 - (Rev 1755) Aug 29, 2008%0a154c154%0a%3c !!! Version 0.8.6 - (Rev 1666) Jun 20, 2008%0a---%0a> !! Version 0.8.6 - (Rev 1666) Jun 20, 2008%0a188c188%0a%3c !!! Version 0.8.5 - (Rev 1488) Apr 3, 2008%0a---%0a> !! Version 0.8.5 - (Rev 1488) Apr 3, 2008%0a203c203%0a%3c !!! Version 0.8.4 - (Rev 1456) Mar 8, 2008%0a---%0a> !! Version 0.8.4 - (Rev 1456) Mar 8, 2008%0a220c220%0a%3c !!! Version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a---%0a> !! Version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a233c233%0a%3c !!! Version 0.8.2 - (Rev 1370) Nov 19, 2007%0a---%0a> !! Version 0.8.2 - (Rev 1370) Nov 19, 2007%0a244c244%0a%3c !!! Version 0.8.1 - (Rev 1254) Oct 05, 2007%0a---%0a> !! Version 0.8.1 - (Rev 1254) Oct 05, 2007%0a262c262%0a%3c !!! Version 0.8.0 - (Rev 1215) Aug 14, 2007%0a---%0a> !! Version 0.8.0 - (Rev 1215) Aug 14, 2007%0a267c267%0a%3c !!! Version 0.7.11 - (Rev 1133) July 26, 2007%0a---%0a> !! Version 0.7.11 - (Rev 1133) July 26, 2007%0a287c287%0a%3c !!! Version 0.7.10 - (Rev 987) May 20, 2007%0a---%0a> !! Version 0.7.10 - (Rev 987) May 20, 2007%0a315c315%0a%3c !!! Version 0.7.9 - (Rev 885) Apr 3, 2007%0a---%0a> !! Version 0.7.9 - (Rev 885) Apr 3, 2007%0a335c335%0a%3c !!! Version 0.7.8 - (Rev 833) Mar 2, 2007%0a---%0a> !! Version 0.7.8 - (Rev 833) Mar 2, 2007%0a345c345%0a%3c !!! Version 0.7.7 - (Rev 786) Feb 1, 2007%0a---%0a> !! Version 0.7.7 - (Rev 786) Feb 1, 2007%0a363c363%0a%3c !!! Version 0.7.6 - (Rev 674) Dec 25, 2006%0a---%0a> !! Version 0.7.6 - (Rev 674) Dec 25, 2006%0a372c372%0a%3c !!! Version 0.7.5 - (Rev 576) Dec 8, 2006%0a---%0a> !! Version 0.7.5 - (Rev 576) Dec 8, 2006%0a387c387%0a%3c !!! Version 0.7.4 - (Rev 518) Nov 5, 2006%0a---%0a> !! Version 0.7.4 - (Rev 518) Nov 5, 2006%0a410c410%0a%3c !!! Version 0.7.3 - (Rev 470) Oct 2, 2006%0a---%0a> !! Version 0.7.3 - (Rev 470) Oct 2, 2006%0a424c424%0a%3c !!! Version 0.7.2 - (Rev 412) - Not publically released%0a---%0a> !! Version 0.7.2 - (Rev 412) - Not publically released%0a443c443%0a%3c !!! Version 0.7.1 - (Rev 378) - Aug 20, 2006%0a---%0a> !! Version 0.7.1 - (Rev 378) - Aug 20, 2006%0a454c454%0a%3c !!! Version 0.7.0 - (Release 0.6.15, July, 2006)%0a---%0a> !! Version 0.7.0 - (Release 0.6.15, July, 2006)%0a459c459%0a%3c !!! Version 0.6.14 - (Rev 341) - June 06, 2006%0a---%0a> !! Version 0.6.14 - (Rev 341) - June 06, 2006%0a466c466%0a%3c !!! Version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a---%0a> !! Version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a503c503%0a%3c !!! Version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a---%0a> !! Version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a539c539%0a%3c !!! Version 0.6.11 - (Rev 119) - Jan 19, 2006%0a---%0a> !! Version 0.6.11 - (Rev 119) - Jan 19, 2006%0a577c577%0a%3c !!! Version 0.6.10 (Rev90) - Dec, 20th, 2005%0a---%0a> !! Version 0.6.10 (Rev90) - Dec, 20th, 2005%0a604c604%0a%3c !!! Version 0.6.9 (Rev71) - Nov, 19th,  2005%0a---%0a> !! Version 0.6.9 (Rev71) - Nov, 19th,  2005%0a625c625%0a%3c !!! Version 0.6.8 - Sep 21st, 2005%0a---%0a> !! Version 0.6.8 - Sep 21st, 2005%0a639c639%0a%3c !!! Version 0.6.7 - Aug, 1st, 2005%0a---%0a> !! Version 0.6.7 - Aug, 1st, 2005%0a649c649%0a%3c !!! Version 0.6.6 - various GUI / wxPython improvements. Not released.%0a---%0a> !! Version 0.6.6 - various GUI / wxPython improvements. Not released.%0a665c665%0a%3c !!! Version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a---%0a> !! Version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a678c678%0a%3c !!! Version 0.6.4 - efficiency and usability. Not released%0a---%0a> !! Version 0.6.4 - efficiency and usability. Not released%0a691c691%0a%3c !!! Version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a---%0a> !! Version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a712c712%0a%3c !!! Version 0.6.2 - better usage of vars  Mar, 23, 2005%0a---%0a> !! Version 0.6.2 - better usage of vars  Mar, 23, 2005%0a729c729%0a%3c !!! Version 0.6.1	* usability and real applications Feb, 12, 2005%0a---%0a> !! Version 0.6.1	* usability and real applications Feb, 12, 2005%0a741c741%0a%3c !!! Version 0.6.0 - validation and distribution, Jan, 1st, 2005%0a---%0a> !! Version 0.6.0 - validation and distribution, Jan, 1st, 2005%0a749c749%0a%3c !!! Version 0.5.9 - performance boost, dynamic population size  Dec. 12th, 2004%0a---%0a> !! Version 0.5.9 - performance boost, dynamic population size  Dec. 12th, 2004%0a757c757%0a%3c !!! Version 0.5.8 - selection Dec. 5nd, 2004%0a---%0a> !! Version 0.5.8 - selection Dec. 5nd, 2004%0a763c763%0a%3c !!! Version 0.5.7 -  serialization Nov. 24, 2004%0a---%0a> !! Version 0.5.7 -  serialization Nov. 24, 2004%0a770c770%0a%3c !!! Version 0.5.6 -  expression. Nov. 19, 2004%0a---%0a> !! Version 0.5.6 -  expression. Nov. 19, 2004%0a778c778%0a%3c !!! Version 0.5.5, - more clean up,  more examples. Nov. 10, 2004%0a---%0a> !! Version 0.5.5, - more clean up,  more examples. Nov. 10, 2004%0a784c784%0a%3c !!! Version 0.5.4, Nov. 7, 2004 - clean the code. still working on the code base%0a---%0a> !! Version 0.5.4, Nov. 7, 2004 - clean the code. still working on the code base%0a796c796%0a%3c !!! Version 0.5.3 Oct 10, 2004 -- some interesting new features%0a---%0a> !! Version 0.5.3 Oct 10, 2004 -- some interesting new features%0a806c806%0a%3c !!! Version 0.5.2  -- windows port, smaller distribution, better help()%0a---%0a> !! Version 0.5.2  -- windows port, smaller distribution, better help()%0a815c815%0a%3c !!! Version 0.5.1%0a---%0a> !! Version 0.5.1%0a820c820%0a%3c !!! Version 0.5%0a---%0a> !! Version 0.5%0a824c824%0a%3c !!! Version 0.1 Friday 18, June 2004%0a---%0a> !! Version 0.1 Friday 18, June 2004%0a
host:1232294077=127.0.0.1
author:1232294043=
diff:1232294043:1232293932:=4,12c4,12%0a%3c * NEW: Allow populations in a simulator to have different genotype structure. %0a%3c * CHG: A simulator can no longer access genotypic structure information.%0a%3c * NEW: Add simulator::add to add new populations to a simulator.%0a%3c * CHG: Remove simulator::addInfoField and other functions because they can be%0a%3c 	applied to individual populations.%0a%3c * NEW: Allow the use of single form parameter in population::removeSubPops,%0a%3c 	removeIndividuals, addLoci, removeLoci and resize.%0a%3c * BUG: Fix a bug in adding locus to a population without any locus.%0a%3c %0a---%0a> 	* NEW: Allow populations in a simulator to have different genotype structure. %0a> 	* CHG: A simulator can no longer access genotypic structure information.%0a> 	* NEW: Add simulator::add to add new populations to a simulator.%0a> 	* CHG: Remove simulator::addInfoField and other functions because they can be%0a> 		applied to individual populations.%0a> 	* NEW: Allow the use of single form parameter in population::removeSubPops,%0a> 		removeIndividuals, addLoci, removeLoci and resize.%0a> 	* BUG: Fix a bug in adding locus to a population without any locus.%0a> %0a14,21c14,21%0a%3c * NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a%3c * CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a%3c * CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a%3c 	and newSubPopSizeFunc to subPopSizeFunc.%0a%3c * CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a%3c 	take both a list and a function.%0a%3c * BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a%3c * CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a---%0a> 	* NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a> 	* CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a> 	* CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a> 		and newSubPopSizeFunc to subPopSizeFunc.%0a> 	* CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a> 		take both a list and a function.%0a> 	* BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a> 	* CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a23,39c23,39%0a%3c * CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a%3c * CHG: Rename mating scheme binomialSelection to randomSelection.%0a%3c * CHG: Merge parameters convProb, convMode and convParam to convMode in%0a%3c 	recombinator.%0a%3c * BUG: Fix option shuffleOffspring in heteroMating().%0a%3c * CHG: Change the default output of parentsTagger when only one parent is passed.%0a%3c * CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a%3c * CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a%3c 	from heteroMating.%0a%3c * NEW: Allow a demographic function to return a number if there is only one%0a%3c 	subpopulation.%0a%3c * NEW: Allow pedigreeMating to set sex, affection status and some information%0a%3c 	fields from the pedigree object.%0a%3c * NEW: Allow random parent(s) choosers to set name of information field fitness.%0a%3c * CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a%3c 	to traceRelatives.%0a%3c * NEW: Allow replicate numbers in a simulator to refer to the last several%0a---%0a> 	* CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a> 	* CHG: Rename mating scheme binomialSelection to randomSelection.%0a> 	* CHG: Merge parameters convProb, convMode and convParam to convMode in%0a> 		recombinator.%0a> 	* BUG: Fix option shuffleOffspring in heteroMating().%0a> 	* CHG: Change the default output of parentsTagger when only one parent is passed.%0a> 	* CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a> 	* CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a> 		from heteroMating.%0a> 	* NEW: Allow a demographic function to return a number if there is only one%0a> 		subpopulation.%0a> 	* NEW: Allow pedigreeMating to set sex, affection status and some information%0a> 		fields from the pedigree object.%0a> 	* NEW: Allow random parent(s) choosers to set name of information field fitness.%0a> 	* CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a> 		to traceRelatives.%0a> 	* NEW: Allow replicate numbers in a simulator to refer to the last several%0a41c41%0a%3c * CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a---%0a> 	* CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a43,48c43,48%0a%3c * NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a%3c * NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a%3c 	selection and quantitative trait operators. Allow loci to accept a number.%0a%3c * NEW: Support other device types in varPlotter::saveAs.%0a%3c * NEW: dumper now supports virtual subpopulations.%0a%3c %0a---%0a> 	* NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a> 	* NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a> 		selection and quantitative trait operators. Allow loci to accept a number.%0a> 	* NEW: Support other device types in varPlotter::saveAs.%0a> 	* NEW: dumper now supports virtual subpopulations.%0a> %0a50,75c50,75%0a%3c * CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a%3c * CHG: migrator now uses an information field "migrate_to".%0a%3c * CHG: Add function population::extract.%0a%3c * CHG: Remove parameter ancGen from population::clone().%0a%3c * NEW: Dump() also display information fields.%0a%3c * NEW: Expose population::pushAndDiscard(pop) as population::push().%0a%3c * NEW: Add parameter subPops to all operators.%0a%3c * CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a%3c 	and affectedSibpairSample from simuPOP core to simuUtil.py.%0a%3c 	Remove src/sampler.*.%0a%3c * CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a%3c 	replace them by pedigreeTagger.%0a%3c * CHG: Remove population::removeEmptySubPops().%0a%3c * NEW: Add support for subpopulation names.%0a%3c * CHG: Remove intializer, spread and pyInit operators.%0a%3c * CHG: Add parameter initSex to initByFreq and initByValue.%0a%3c * NEW: Initializers now support virtual subpopulations.%0a%3c * CHG: Recombiantor no longer supports recombination by sex, %0a%3c 	and haplodiploid chromosomes.%0a%3c * CHG: Recombinator now supports different types of chromosomes.%0a%3c * NEW: Add ops parameter to mating schemes.%0a%3c * NEW: add mitochondrialGenoTransmitter.%0a%3c * NEW: add population::updateInfoFieldsFrom.%0a%3c * NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a%3c 	genotype transmitters and mitochondrialGenoTransmitter.%0a%3c %0a---%0a> 	* CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a> 	* CHG: migrator now uses an information field "migrate_to".%0a> 	* CHG: Add function population::extract.%0a> 	* CHG: Remove parameter ancGen from population::clone().%0a> 	* NEW: Dump() also display information fields.%0a> 	* NEW: Expose population::pushAndDiscard(pop) as population::push().%0a> 	* NEW: Add parameter subPops to all operators.%0a> 	* CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a> 		and affectedSibpairSample from simuPOP core to simuUtil.py.%0a> 		Remove src/sampler.*.%0a> 	* CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a> 		replace them by pedigreeTagger.%0a> 	* CHG: Remove population::removeEmptySubPops().%0a> 	* NEW: Add support for subpopulation names.%0a> 	* CHG: Remove intializer, spread and pyInit operators.%0a> 	* CHG: Add parameter initSex to initByFreq and initByValue.%0a> 	* NEW: Initializers now support virtual subpopulations.%0a> 	* CHG: Recombiantor no longer supports recombination by sex, %0a> 		and haplodiploid chromosomes.%0a> 	* CHG: Recombinator now supports different types of chromosomes.%0a> 	* NEW: Add ops parameter to mating schemes.%0a> 	* NEW: add mitochondrialGenoTransmitter.%0a> 	* NEW: add population::updateInfoFieldsFrom.%0a> 	* NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a> 		genotype transmitters and mitochondrialGenoTransmitter.%0a> %0a77,90c77,90%0a%3c * DOC: Adjust reference output for simuPOP classes.%0a%3c * CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a%3c * CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a%3c * CHG: Remove the maxAllele parameter of population.%0a%3c * CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a%3c * CHG: Remove read support for XML and Binary formats.%0a%3c * CHG: Completely change the way sex chromosomes are handled, and add%0a%3c 	initial support for customized chromosome.%0a%3c * CHG: Rename class vsp to vspID.%0a%3c * CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a%3c * CHG: Change parameter of population::virtualSubPopName().%0a%3c * CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a%3c * CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a%3c * CHG: Make pedigree a subclass of population and move population::locateRelatives%0a---%0a> 	* DOC: Adjust reference output for simuPOP classes.%0a> 	* CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a> 	* CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a> 	* CHG: Remove the maxAllele parameter of population.%0a> 	* CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a> 	* CHG: Remove read support for XML and Binary formats.%0a> 	* CHG: Completely change the way sex chromosomes are handled, and add%0a> 		initial support for customized chromosome.%0a> 	* CHG: Rename class vsp to vspID.%0a> 	* CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a> 	* CHG: Change parameter of population::virtualSubPopName().%0a> 	* CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a> 	* CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a> 	* CHG: Make pedigree a subclass of population and move population::locateRelatives%0a92c92%0a%3c * CHG: Temporarily disable all pedigree related features such as pedigree parent%0a---%0a> 	* CHG: Temporarily disable all pedigree related features such as pedigree parent%0a94,113c94,113%0a%3c * CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a%3c * CHG: Replace population::mergePopulation by population::addIndFromPop.%0a%3c * CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a%3c 	and population::addLociFromPop.%0a%3c * CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a%3c * CHG: Adjust interface to population::removeLoci.%0a%3c * CHG: Adjust interface to population::removeSubPops.%0a%3c * NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a%3c * CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a%3c * NEW: Add simuProgress class to simuUtl.%0a%3c * CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a%3c * NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a%3c * CHG: Remove operator terminator and continueIf.%0a%3c * CHG: Reset file format number. No longer support previous file formats.%0a%3c * NEW: add simulator::populations().%0a%3c * NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a%3c 	and REP_LAST (now -1).%0a%3c * CHG: Replace simulator::getPopulation by simulator::population and%0a%3c 	simulator::extract.%0a%3c %0a---%0a> 	* CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a> 	* CHG: Replace population::mergePopulation by population::addIndFromPop.%0a> 	* CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a> 		and population::addLociFromPop.%0a> 	* CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a> 	* CHG: Adjust interface to population::removeLoci.%0a> 	* CHG: Adjust interface to population::removeSubPops.%0a> 	* NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a> 	* CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a> 	* NEW: Add simuProgress class to simuUtl.%0a> 	* CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a> 	* NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a> 	* CHG: Remove operator terminator and continueIf.%0a> 	* CHG: Reset file format number. No longer support previous file formats.%0a> 	* NEW: add simulator::populations().%0a> 	* NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a> 		and REP_LAST (now -1).%0a> 	* CHG: Replace simulator::getPopulation by simulator::population and%0a> 		simulator::extract.%0a> %0a115,132c115,132%0a%3c * CHG: Remove the replicate group feature.%0a%3c * NEW: Allow mapSelector to work for all ploidy.%0a%3c * DOC: Add keyword applicability to indicate applicability of operators.%0a%3c * DOC: Document applicability of mating schemes.%0a%3c * DOC: Fix bibtex references of user's guide and reference manual.%0a%3c * CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a%3c 	and will be removed later.%0a%3c * NEW: add individual::genotype (previously called arrGenotype) and%0a%3c 	individual::arrGenotype.%0a%3c * CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a%3c 	later.%0a%3c * CHG: population arrGenotype are marked obsolete and will be removed%0a%3c 	later.%0a%3c * NEW: add population::genotype and population::setGenoytpe.%0a%3c * BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a%3c 	images.%0a%3c * NEW: Support Python 2.6.%0a%3c %0a---%0a> 	* CHG: Remove the replicate group feature.%0a> 	* NEW: Allow mapSelector to work for all ploidy.%0a> 	* DOC: Add keyword applicability to indicate applicability of operators.%0a> 	* DOC: Document applicability of mating schemes.%0a> 	* DOC: Fix bibtex references of user's guide and reference manual.%0a> 	* CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a> 		and will be removed later.%0a> 	* NEW: add individual::genotype (previously called arrGenotype) and%0a> 		individual::arrGenotype.%0a> 	* CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a> 		later.%0a> 	* CHG: population arrGenotype are marked obsolete and will be removed%0a> 		later.%0a> 	* NEW: add population::genotype and population::setGenoytpe.%0a> 	* BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a> 		images.%0a> 	* NEW: Support Python 2.6.%0a> %0a134,153c134,153%0a%3c * NEW: allow the use of a list to specify a virtual subpopulation.%0a%3c * NEW: change the return type of allele() so that no boolean value (True or False)%0a%3c 	will be returned from the binary modules.%0a%3c * DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a%3c * BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a%3c * BUG: Fix a bug when calculating expected heterozygosity with increased%0a%3c 	number of subpopulations.%0a%3c * BUG: Fix a bug in controlled random mating where number of affected alleles%0a%3c 	are calculated from current instead of offspring populations.%0a%3c * CHG: Only write (compressed if possible) in text format. simuPOP can still%0a%3c 	read binary and xml formats.%0a%3c * BUG: Fix a bug that is related to the calculation of Fst in populations with%0a%3c 	unordered individuals.%0a%3c * BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a%3c * BUG: Fix a bug that prevents simuPOP from compressing population files.%0a%3c * NEW: Make boost 1.36.0 the default built-in boost version.%0a%3c * BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a%3c * NEW: Stop distributing zlib1.dll by building zlib from source under%0a%3c 	windows.%0a%3c %0a---%0a> 	* NEW: allow the use of a list to specify a virtual subpopulation.%0a> 	* NEW: change the return type of allele() so that no boolean value (True or False)%0a> 		will be returned from the binary modules.%0a> 	* DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a> 	* BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a> 	* BUG: Fix a bug when calculating expected heterozygosity with increased%0a> 		number of subpopulations.%0a> 	* BUG: Fix a bug in controlled random mating where number of affected alleles%0a> 		are calculated from current instead of offspring populations.%0a> 	* CHG: Only write (compressed if possible) in text format. simuPOP can still%0a> 		read binary and xml formats.%0a> 	* BUG: Fix a bug that is related to the calculation of Fst in populations with%0a> 		unordered individuals.%0a> 	* BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a> 	* BUG: Fix a bug that prevents simuPOP from compressing population files.%0a> 	* NEW: Make boost 1.36.0 the default built-in boost version.%0a> 	* BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a> 	* NEW: Stop distributing zlib1.dll by building zlib from source under%0a> 		windows.%0a> %0a155,187c155,187%0a%3c * NEW: Polish command line arguments output in a configuration file.%0a%3c * NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a%3c 	population size and selection pressure.%0a%3c * BUG: Fix a minor simuOpt::saveConfigFile bug%0a%3c * BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a%3c * BUG: fix a bug that is related to reference count of loaded lists.%0a%3c * CHG: allow sample size > population size (give a warning rather than error)%0a%3c * CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a%3c * NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a%3c * NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a%3c 	HapMap populations. (loadHapMap.py)%0a%3c * CHG: polish tkInter and wxPython parameter input dialog.%0a%3c * CHG: Remove parameter order from information field related functions.%0a%3c * BUG: Fix a information field + migration bug.%0a%3c * NEW: add operation resizeSubPops.%0a%3c * BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a%3c * NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a%3c 	and add a new operator initSex.%0a%3c * BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a%3c 	during evolution.%0a%3c * CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a%3c 	needed with combined virtual splitter.%0a%3c * NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a%3c 	to access an individual in an ancestory generation directly.%0a%3c * NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a%3c 	This allows sex-specific migraton and more complicated migration%0a%3c 	schemes.%0a%3c * NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a%3c * NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a%3c * NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a%3c 	consanguineousMating, along with an example doc/cookbook/Mating_consanguineous.py.%0a%3c %0a%3c %0a---%0a> 	* NEW: Polish command line arguments output in a configuration file.%0a> 	* NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a> 		population size and selection pressure.%0a> 	* BUG: Fix a minor simuOpt::saveConfigFile bug%0a> 	* BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a> 	* BUG: fix a bug that is related to reference count of loaded lists.%0a> 	* CHG: allow sample size > population size (give a warning rather than error)%0a> 	* CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a> 	* NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a> 	* NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a> 		HapMap populations. (loadHapMap.py)%0a> 	* CHG: polish tkInter and wxPython parameter input dialog.%0a> 	* CHG: Remove parameter order from information field related functions.%0a> 	* BUG: Fix a information field + migration bug.%0a> 	* NEW: add operation resizeSubPops.%0a> 	* BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a> 	* NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a> 		and add a new operator initSex.%0a> 	* BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a> 		during evolution.%0a> 	* CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a> 		needed with combined virtual splitter.%0a> 	* NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a> 		to access an individual in an ancestory generation directly.%0a> 	* NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a> 		This allows sex-specific migraton and more complicated migration%0a> 		schemes.%0a> 	* NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a> 	* NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a> 	* NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a> 		consanguineousMating, along with an example doc/cookbook/Mating_consanguineous.py.%0a> %0a> %0a189,202c189,202%0a%3c * BUG: fix a bug that prevents a cloned simulator from evolving again.%0a%3c * NEW: add parameter numMale and sexMode to all offspring generator and%0a%3c 	mating schemes, to control the sex of offspring exactly.%0a%3c * NEW: add gene conversion to recombinator, using parameter convMode, convProb and convParam.%0a%3c * NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a%3c * NEW: add random parent chooser without replacement and/or with alpha individuals,%0a%3c 	haplodiploidOffspringGenerator, monogamousMating, polygamousMating, alphaMating,%0a%3c 	and haplodiploidMating mating schemes.%0a%3c * NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a%3c 	populations correctly.%0a%3c * CHG: make the subPop parameter of population() function obsolete.%0a%3c * CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a%3c %0a%3c %0a---%0a> 	* BUG: fix a bug that prevents a cloned simulator from evolving again.%0a> 	* NEW: add parameter numMale and sexMode to all offspring generator and%0a> 		mating schemes, to control the sex of offspring exactly.%0a> 	* NEW: add gene conversion to recombinator, using parameter convMode, convProb and convParam.%0a> 	* NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a> 	* NEW: add random parent chooser without replacement and/or with alpha individuals,%0a> 		haplodiploidOffspringGenerator, monogamousMating, polygamousMating, alphaMating,%0a> 		and haplodiploidMating mating schemes.%0a> 	* NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a> 		populations correctly.%0a> 	* CHG: make the subPop parameter of population() function obsolete.%0a> 	* CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a> %0a> %0a204,219c204,219%0a%3c * NEW: add support for other posix systems like HP-UX%0a%3c * NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a%3c * NEW: add two operators infoEval and infoExec that can be used to manipulate%0a%3c information fields during evolution.%0a%3c * NEW: operator stator popSize=True also calculates virtual subpop size using%0a%3c 	variable virtualPopSize.%0a%3c * BUG: fix a bug in the re-initialization of pyParentsChooser.%0a%3c * CHG: inheritTagger will inherit the first, instead of the second, information%0a%3c 	field from mother in TAG_Maternal mode.%0a%3c * CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a%3c 	virtual subpopulation.%0a%3c * NEW: allow multiple genotype in the same virtual subpopulation split by%0a%3c 	genotypeSplitter%0a%3c * NEW: add combinedSplitter%0a%3c %0a%3c %0a---%0a> 	* NEW: add support for other posix systems like HP-UX%0a> 	* NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a> 	* NEW: add two operators infoEval and infoExec that can be used to manipulate%0a> 	information fields during evolution.%0a> 	* NEW: operator stator popSize=True also calculates virtual subpop size using%0a> 		variable virtualPopSize.%0a> 	* BUG: fix a bug in the re-initialization of pyParentsChooser.%0a> 	* CHG: inheritTagger will inherit the first, instead of the second, information%0a> 		field from mother in TAG_Maternal mode.%0a> 	* CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a> 		virtual subpopulation.%0a> 	* NEW: allow multiple genotype in the same virtual subpopulation split by%0a> 		genotypeSplitter%0a> 	* NEW: add combinedSplitter%0a> %0a> %0a221,232c221,232%0a%3c * NEW: allow taggers to write pedigree files%0a%3c * NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a%3c * NEW: introduce pedigreeMating to mate according to a given pedigree%0a%3c * NEW: add infoTagger, sexTagger, affectionTagger%0a%3c * NEW: add pedigree information handling functions%0a%3c * CHG: add more options to functions in hapMapUtil.py%0a%3c * CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a%3c 	MPI related code).%0a%3c * BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a%3c * NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a%3c 	a lot of populaitons are involved.%0a%3c %0a---%0a> 	* NEW: allow taggers to write pedigree files%0a> 	* NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a> 	* NEW: introduce pedigreeMating to mate according to a given pedigree%0a> 	* NEW: add infoTagger, sexTagger, affectionTagger%0a> 	* NEW: add pedigree information handling functions%0a> 	* CHG: add more options to functions in hapMapUtil.py%0a> 	* CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a> 		MPI related code).%0a> 	* BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a> 	* NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a> 		a lot of populaitons are involved.%0a> %0a234,243c234,243%0a%3c * BUG: Fix saveFstat in simuUtil.py%0a%3c * NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a%3c * NEW: add heteroMating to allow allow different mating scheme used for different%0a%3c 	subpopulations, or proportions of individuals%0a%3c * NEW: add selfMating mating scheme.%0a%3c * NEW: add various parent choosers.%0a%3c * NEW: add various offspring generators.%0a%3c * NEW: add null, duplicate, info, genotype, proportion splitters%0a%3c * NEW: add splitter interface to populations.%0a%3c %0a---%0a> 	* BUG: Fix saveFstat in simuUtil.py%0a> 	* NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a> 	* NEW: add heteroMating to allow allow different mating scheme used for different%0a> 		subpopulations, or proportions of individuals%0a> 	* NEW: add selfMating mating scheme.%0a> 	* NEW: add various parent choosers.%0a> 	* NEW: add various offspring generators.%0a> 	* NEW: add null, duplicate, info, genotype, proportion splitters%0a> 	* NEW: add splitter interface to populations.%0a> %0a245,261c245,261%0a%3c * NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0a%3c MergePopulations(pops)%0a%3c * BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a%3c 	returns false even if this file does exist.%0a%3c * BUG: Fix the handling of binary option in command line, and handling of short %0a%3c 	arguments.%0a%3c * NEW: Use a checkbox for binary options in the parameter dialogs.%0a%3c * NEW: make use of second to last inforFields passed to pyPenetrance %0a%3c 	and pySelector to pass specified information fields to user-defined%0a%3c 	functions.%0a%3c * BUG: Fix a few functions in hapMapUtil.py%0a%3c * BUG: stop displaying full path name in the title of the parameter dialog.%0a%3c * NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a%3c 	chromNames parameter to population constructor.%0a%3c * NEW: Some documentation improvement.%0a%3c %0a%3c %0a---%0a> 	* NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0a> 	MergePopulations(pops)%0a> 	* BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a> 		returns false even if this file does exist.%0a> 	* BUG: Fix the handling of binary option in command line, and handling of short %0a> 		arguments.%0a> 	* NEW: Use a checkbox for binary options in the parameter dialogs.%0a> 	* NEW: make use of second to last inforFields passed to pyPenetrance %0a> 		and pySelector to pass specified information fields to user-defined%0a> 		functions.%0a> 	* BUG: Fix a few functions in hapMapUtil.py%0a> 	* BUG: stop displaying full path name in the title of the parameter dialog.%0a> 	* NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a> 		chromNames parameter to population constructor.%0a> 	* NEW: Some documentation improvement.%0a> %0a> %0a263,266c263,266%0a%3c * Reference manual overhaul%0a%3c * Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a%3c * NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a%3c %0a---%0a> 	* Reference manual overhaul%0a> 	* Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a> 	* NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a> %0a268,286c268,286%0a%3c * NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a%3c 	in different subpopulations%0a%3c * NEW: add subPops parameter to intializers, working the same as subPop%0a%3c * NEW: extending pyIndOperator with handling of loci and infoFields%0a%3c * BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a%3c * BUG: fix scripts/simuViewPop.py%0a%3c * NEW: add optional option destructive=False to simulator::getPopulation, as%0a%3c 	a way to retrieve a population more efficiently.%0a%3c * NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a%3c 	control of migration using individual genotype.%0a%3c * NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a%3c 	still usable)%0a%3c * BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a%3c 	for cases, for example, with 10k loci and 100k individuals.%0a%3c * NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a%3c * NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a%3c 	MergePopulationsByLoci to allow chromosome to chromosome merge.%0a%3c %0a%3c %0a---%0a> 	* NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a> 		in different subpopulations%0a> 	* NEW: add subPops parameter to intializers, working the same as subPop%0a> 	* NEW: extending pyIndOperator with handling of loci and infoFields%0a> 	* BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a> 	* BUG: fix scripts/simuViewPop.py%0a> 	* NEW: add optional option destructive=False to simulator::getPopulation, as%0a> 		a way to retrieve a population more efficiently.%0a> 	* NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a> 		control of migration using individual genotype.%0a> 	* NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a> 		still usable)%0a> 	* BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a> 		for cases, for example, with 10k loci and 100k individuals.%0a> 	* NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a> 	* NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a> 		MergePopulationsByLoci to allow chromosome to chromosome merge.%0a> %0a> %0a288,314c288,314%0a%3c * BUG: fix a memory leak bug with LoadPopulation%0a%3c * BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a%3c * NEW: nuclearFamilySampler operator and function%0a%3c * NEW: add MATE_UniformDistribution number of offspring type%0a%3c * BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a%3c * BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a%3c * BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a%3c * BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a%3c * NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a%3c     allele 1. This is avoid trouble in  binary form. (maybe not a good idea).%0a%3c * NEW: throw an exception when multiple selectors are applied at the same time.%0a%3c * NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a%3c 	MergePopulations, MergePopulationsByLoci, population::resize%0a%3c * NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a%3c 	population::appendLocus%0a%3c * NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a%3c * NEW: swig 1.3.32 compatibility%0a%3c * NEW: add scripts/loadHapMap.py%0a%3c * NEW: add pyTagger operator, which can be used to trace trait values.%0a%3c * NEW: update comments, in preparation for the 0.8.0 release%0a%3c * NEW: disallow change of genotypic structure of populations in a simulator.%0a%3c * NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a%3c 	and related tests and documents.%0a%3c * BUG: fix a bug when stat() tries to remove non-existings variables%0a%3c 	caused by population split.%0a%3c %0a%3c %0a---%0a> 	* BUG: fix a memory leak bug with LoadPopulation%0a> 	* BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a> 	* NEW: nuclearFamilySampler operator and function%0a> 	* NEW: add MATE_UniformDistribution number of offspring type%0a> 	* BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a> 	* BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a> 	* BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a> 	* BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a> 	* NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a> 	    allele 1. This is avoid trouble in  binary form. (maybe not a good idea).%0a> 	* NEW: throw an exception when multiple selectors are applied at the same time.%0a> 	* NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a> 		MergePopulations, MergePopulationsByLoci, population::resize%0a> 	* NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a> 		population::appendLocus%0a> 	* NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a> 	* NEW: swig 1.3.32 compatibility%0a> 	* NEW: add scripts/loadHapMap.py%0a> 	* NEW: add pyTagger operator, which can be used to trace trait values.%0a> 	* NEW: update comments, in preparation for the 0.8.0 release%0a> 	* NEW: disallow change of genotypic structure of populations in a simulator.%0a> 	* NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a> 		and related tests and documents.%0a> 	* BUG: fix a bug when stat() tries to remove non-existings variables%0a> 		caused by population split.%0a> %0a> %0a316,334c316,334%0a%3c * BUG (build): add solaris support. This OS does not have stdint.h.%0a%3c * BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a%3c * NEW: add SaveSolarFrqFile in simuUtil.py%0a%3c * NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a%3c 	SaveQTDT now calls these three functions.%0a%3c * NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a%3c * NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a%3c 	population with unequal male and female allele frequencies, from Yaji Xu.%0a%3c * BUG: fix a bug in the calculation of D'%0a%3c * NEW: add LD measurement delta^2%0a%3c * NEW: add LD_param parameter to have finer control over how LD is calculated%0a%3c * NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a%3c     control over the calculation of these statistics.%0a%3c * CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a%3c * NEW: add association statistics (ChiSq, UC_U, CramerV)%0a%3c * BUG: fix passing of relMethod parameter of stat operator%0a%3c * CHG: NO_CONVERSION is no longer the default for rpy%0a%3c %0a%3c %0a---%0a> 	* BUG (build): add solaris support. This OS does not have stdint.h.%0a> 	* BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a> 	* NEW: add SaveSolarFrqFile in simuUtil.py%0a> 	* NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a> 		SaveQTDT now calls these three functions.%0a> 	* NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a> 	* NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a> 		population with unequal male and female allele frequencies, from Yaji Xu.%0a> 	* BUG: fix a bug in the calculation of D'%0a> 	* NEW: add LD measurement delta^2%0a> 	* NEW: add LD_param parameter to have finer control over how LD is calculated%0a> 	* NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a> 	    control over the calculation of these statistics.%0a> 	* CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a> 	* NEW: add association statistics (ChiSq, UC_U, CramerV)%0a> 	* BUG: fix passing of relMethod parameter of stat operator%0a> 	* CHG: NO_CONVERSION is no longer the default for rpy%0a> %0a> %0a336,344c336,344%0a%3c * BUG: fix broken user interactive input%0a%3c * BUG: fix help feature of tkinter dialog%0a%3c * NEW: bundle boost 1.33.1 with source package%0a%3c * BUG (build): fix a SConstruct bug with MSVC environment variables%0a%3c * NEW: add other LD measurements to simuLDDecay.py%0a%3c * NEW: optionally add header to QTDT ped file%0a%3c * BUG: fix the combine parameter of SaveQTDT%0a%3c %0a%3c %0a---%0a> 	* BUG: fix broken user interactive input%0a> 	* BUG: fix help feature of tkinter dialog%0a> 	* NEW: bundle boost 1.33.1 with source package%0a> 	* BUG (build): fix a SConstruct bug with MSVC environment variables%0a> 	* NEW: add other LD measurements to simuLDDecay.py%0a> 	* NEW: optionally add header to QTDT ped file%0a> 	* BUG: fix the combine parameter of SaveQTDT%0a> %0a> %0a346,348c346,348%0a%3c * NEW (build): bring scons build system on par with python setup.py%0a%3c * NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a%3c * NEW (build): try really hard to search proper boost libraries. One usually%0a---%0a> 	* NEW (build): bring scons build system on par with python setup.py%0a> 	* NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a> 	* NEW (build): try really hard to search proper boost libraries. One usually%0a350,352c350,352%0a%3c * NEW (build): prune files from source package%0a%3c * NEW: add ancestralGen to penetrance and qtrait operators%0a%3c * NEW: change pySelector and allow a second parameter gen for the fitness function%0a---%0a> 	* NEW (build): prune files from source package%0a> 	* NEW: add ancestralGen to penetrance and qtrait operators%0a> 	* NEW: change pySelector and allow a second parameter gen for the fitness function%0a354,360c354,360%0a%3c * CHG: individual comparison does not compare information fields%0a%3c * CHG: adjust individual representation (actually output genotype)%0a%3c * BUG: fix a bug in loading some files saved in binary module from standard modules%0a%3c * BUG: fix an affected sibpair sampler bug introduced in 0.7.5 MPI modules%0a%3c * NEW: add hasInfoField() function%0a%3c * NEW: MPI module pass 00, 01, 06 test scripts%0a%3c * NEW: Only head node can print to cout%0a---%0a> 	* CHG: individual comparison does not compare information fields%0a> 	* CHG: adjust individual representation (actually output genotype)%0a> 	* BUG: fix a bug in loading some files saved in binary module from standard modules%0a> 	* BUG: fix an affected sibpair sampler bug introduced in 0.7.5 MPI modules%0a> 	* NEW: add hasInfoField() function%0a> 	* NEW: MPI module pass 00, 01, 06 test scripts%0a> 	* NEW: Only head node can print to cout%0a373,386c373,386%0a%3c * NEW: experimental MPI modules.%0a%3c * BUG: None is treated as False now in Py_Object_As_Bool.%0a%3c * NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a%3c 	faster than regular alleles.%0a%3c * NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a%3c 	under certain conditions is 1/3 faster now.%0a%3c * NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a%3c     cache internal point for performance purposes. This also fixes a windows%0a%3c 	dynamic_bitset related bug (never figure out what was wrong).%0a%3c * NEW: add the missing simulator.clone() function%0a%3c * CHG: stop embedding zlib since the source does not work under windows.%0a%3c 	The installation process is changed as well.%0a%3c %0a%3c %0a---%0a> 	* NEW: experimental MPI modules.%0a> 	* BUG: None is treated as False now in Py_Object_As_Bool.%0a> 	* NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a> 		faster than regular alleles.%0a> 	* NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a> 		under certain conditions is 1/3 faster now.%0a> 	* NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a> 	    cache internal point for performance purposes. This also fixes a windows%0a> 		dynamic_bitset related bug (never figure out what was wrong).%0a> 	* NEW: add the missing simulator.clone() function%0a> 	* CHG: stop embedding zlib since the source does not work under windows.%0a> 		The installation process is changed as well.%0a> %0a> %0a388,401c388,401%0a%3c * BUG: fix simulator.population() function%0a%3c * NEW/CHG: add order parameter to population arr function series.%0a%3c Changed functions are:%0a%3c 	C++ level: population::genoBegin(true), genoBegin(sp, true)%0a%3c 		population::infoBegin(idx, order), infoBegin(idx, subPop, order)%0a%3c 	Python level: population::arrGenotype(True), arrGenotype(sp, True)%0a%3c 		population::indInfo(idx, order), indInfo(idx, subPop, order)%0a%3c 		population::arrIndInfo(order), arrIndInfo(subPop, order)%0a%3c * NEW: test/test_21_performance is added to keep track of performance%0a%3c improvements.%0a%3c * NEW: (minor) performance improvement of randomMating and maSelector.%0a%3c * NEW: significant performance improvement of mating schemes.%0a%3c controlled randomMating: typically 150s => 90s%0a%3c * NEW: add instruction for using intel c++ compiler, which usually improve%0a---%0a> 	* BUG: fix simulator.population() function%0a> 	* NEW/CHG: add order parameter to population arr function series.%0a> 	Changed functions are:%0a> 		C++ level: population::genoBegin(true), genoBegin(sp, true)%0a> 			population::infoBegin(idx, order), infoBegin(idx, subPop, order)%0a> 		Python level: population::arrGenotype(True), arrGenotype(sp, True)%0a> 			population::indInfo(idx, order), indInfo(idx, subPop, order)%0a> 			population::arrIndInfo(order), arrIndInfo(subPop, order)%0a> 	* NEW: test/test_21_performance is added to keep track of performance%0a> 	improvements.%0a> 	* NEW: (minor) performance improvement of randomMating and maSelector.%0a> 	* NEW: significant performance improvement of mating schemes.%0a> 	controlled randomMating: typically 150s => 90s%0a> 	* NEW: add instruction for using intel c++ compiler, which usually improve%0a403,409c403,409%0a%3c * BUG: recombinator set sex in a wrong way.%0a%3c * NEW: experimental large pedigree sampling largePedigreeSample%0a%3c * NEW: experimental support for merlin/vc and merlin regression%0a%3c * CHG (internal): overhaul of ascertainment operators and file save stuff.%0a%3c * NEW: add 'useDefault' option to simuOpt paramter specification.%0a%3c %0a%3c %0a---%0a> 	* BUG: recombinator set sex in a wrong way.%0a> 	* NEW: experimental large pedigree sampling largePedigreeSample%0a> 	* NEW: experimental support for merlin/vc and merlin regression%0a> 	* CHG (internal): overhaul of ascertainment operators and file save stuff.%0a> 	* NEW: add 'useDefault' option to simuOpt paramter specification.%0a> %0a> %0a411,423c411,423%0a%3c * CHG: change the allele type of long module to unsigned short, since%0a%3c 	2^16 seems to be enough even for long allele cases.%0a%3c * NEW: add -c option to simuCluster.py to allow it to se command instead%0a%3c 	of the default qaub%0a%3c * NEW: add reference count debugging in simulator.evolve (require%0a%3c 	specially built python.)%0a%3c * BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a%3c * NEW: add pyMating operator%0a%3c * NEW: add population::individuals() function that can be used to iterate%0a%3c 	through all individuals (or in a subpopulation).%0a%3c * NEW: add pyIndOperator%0a%3c %0a%3c %0a---%0a> 	* CHG: change the allele type of long module to unsigned short, since%0a> 		2^16 seems to be enough even for long allele cases.%0a> 	* NEW: add -c option to simuCluster.py to allow it to se command instead%0a> 		of the default qaub%0a> 	* NEW: add reference count debugging in simulator.evolve (require%0a> 		specially built python.)%0a> 	* BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a> 	* NEW: add pyMating operator%0a> 	* NEW: add population::individuals() function that can be used to iterate%0a> 		through all individuals (or in a subpopulation).%0a> 	* NEW: add pyIndOperator%0a> %0a> %0a425,442c425,442%0a%3c * CHG: remove demo and support for scipy's gplt package.%0a%3c * NEW: add infoFields parameter to population and operators%0a%3c * CHG: all populations must now explicitly state the information%0a%3c 	fields for each individual.%0a%3c * CHG: all qtrait and penetrance oeprators now use info fields of%0a%3c 	individuals (they use variable before). penetrance field is%0a%3c 	optional.%0a%3c * CHG: (Internal) selectors now use info field (fitness) rather than%0a%3c 	using its own population variable.%0a%3c * NEW: add --useDefault parameter to use default parameters instead of%0a%3c 	reading from stdin, if they can not be obtained from other methods.%0a%3c * NEW: simuCluster.py now subst environmental variables, and stops if%0a%3c 	there is remaining $ in the script.%0a%3c * CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a%3c 	'label' instead.%0a%3c * BUG: fix starting allele problem in simuCDCV.py%0a%3c %0a%3c %0a---%0a> 	* CHG: remove demo and support for scipy's gplt package.%0a> 	* NEW: add infoFields parameter to population and operators%0a> 	* CHG: all populations must now explicitly state the information%0a> 		fields for each individual.%0a> 	* CHG: all qtrait and penetrance oeprators now use info fields of%0a> 		individuals (they use variable before). penetrance field is%0a> 		optional.%0a> 	* CHG: (Internal) selectors now use info field (fitness) rather than%0a> 		using its own population variable.%0a> 	* NEW: add --useDefault parameter to use default parameters instead of%0a> 		reading from stdin, if they can not be obtained from other methods.%0a> 	* NEW: simuCluster.py now subst environmental variables, and stops if%0a> 		there is remaining $ in the script.%0a> 	* CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a> 		'label' instead.%0a> 	* BUG: fix starting allele problem in simuCDCV.py%0a> %0a> %0a444,453c444,453%0a%3c * BUG: Fix a bug in backward trajectory simulation%0a%3c * CHG: change the release/snapsot generating process%0a%3c * NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a%3c 	machines.%0a%3c * BUG: fix a random number generator bug on 64 bit machines.%0a%3c * NEW: random number seed is generated in a much better way, and is%0a%3c 	retrievable.%0a%3c * NEW: fix analComplexDisease.py which was not up to date with %0a%3c 	simuComplexDisease.py%0a%3c %0a---%0a> 	* BUG: Fix a bug in backward trajectory simulation%0a> 	* CHG: change the release/snapsot generating process%0a> 	* NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a> 		machines.%0a> 	* BUG: fix a random number generator bug on 64 bit machines.%0a> 	* NEW: random number seed is generated in a much better way, and is%0a> 		retrievable.%0a> 	* NEW: fix analComplexDisease.py which was not up to date with %0a> 		simuComplexDisease.py%0a> %0a455,458c455,458%0a%3c * Check all scripts and test cases%0a%3c * Check document%0a%3c * release%0a%3c %0a---%0a> 	* Check all scripts and test cases%0a> 	* Check document%0a> 	* release%0a> %0a460,465c460,465%0a%3c * CHG: user's guide and reference manual revision%0a%3c * NEW: add a local scons build system for developers%0a%3c * BUG: fix the variable update bug.%0a%3c * BUG: fix setRNG(seed) bug.%0a%3c * CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a%3c %0a---%0a> 	* CHG: user's guide and reference manual revision%0a> 	* NEW: add a local scons build system for developers%0a> 	* BUG: fix the variable update bug.%0a> 	* BUG: fix setRNG(seed) bug.%0a> 	* CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a> %0a467c467%0a%3c * NEW: Add trajectory simulation functions follows those from selSim%0a---%0a> 	* NEW: Add trajectory simulation functions follows those from selSim%0a469c469%0a%3c * NEW: Add controlledMating that accept an generation only if allele%0a---%0a> 	* NEW: Add controlledMating that accept an generation only if allele%0a471,472c471,472%0a%3c * NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a%3c * NEW: implement trajectory simulation follows Slatkin 2001. This %0a---%0a> 	* NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a> 	* NEW: implement trajectory simulation follows Slatkin 2001. This %0a474c474%0a%3c * CHG: (internal change) abort the original template design. This %0a---%0a> 	* CHG: (internal change) abort the original template design. This %0a477,478c477,478%0a%3c * CHG: add separator to simuOpt's parameter specification.%0a%3c * NEW: add controlledRandomMating and controlledBinomialSelection which%0a---%0a> 	* CHG: add separator to simuOpt's parameter specification.%0a> 	* NEW: add controlledRandomMating and controlledBinomialSelection which%0a480,481c480,481%0a%3c * CHG: simuComplexDisease.py has been re-written.%0a%3c * NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a---%0a> 	* CHG: simuComplexDisease.py has been re-written.%0a> 	* NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a483,484c483,484%0a%3c * BUG: fixed a bug about s_shallowCopied flag of population.%0a%3c * CHG: Remove starting allele and let all allele start from 0. tests %0a---%0a> 	* BUG: fixed a bug about s_shallowCopied flag of population.%0a> 	* CHG: Remove starting allele and let all allele start from 0. tests %0a487c487%0a%3c * CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a---%0a> 	* CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a489c489%0a%3c * NEW: File format change that compress population genotype before it is%0a---%0a> 	* NEW: File format change that compress population genotype before it is%0a491c491%0a%3c * NEW: add compress=True option to savePopulation(). For a large file:%0a---%0a> 	* NEW: add compress=True option to savePopulation(). For a large file:%0a493,498c493,498%0a%3c 	         xml: 169M, 19s load, ? write%0a%3c 	 Now:    txt: 66M,  25s load, 125s save%0a%3c 	         bin: 51M,  10s load, 70s write%0a%3c 	 Since load operation tends to happen more often than save,%0a%3c 	 this increased write time seems to be acceptable.%0a%3c * NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a---%0a> 		         xml: 169M, 19s load, ? write%0a> 		 Now:    txt: 66M,  25s load, 125s save%0a> 		         bin: 51M,  10s load, 70s write%0a> 		 Since load operation tends to happen more often than save,%0a> 		 this increased write time seems to be acceptable.%0a> 	* NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a501,502c501,502%0a%3c 			 %0a%3c %0a---%0a> 				 %0a> %0a504c504%0a%3c * CHG: 'not enough case/control' in caseControlSample now generates %0a---%0a> 	* CHG: 'not enough case/control' in caseControlSample now generates %0a506c506%0a%3c * CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a---%0a> 	* CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a508c508%0a%3c * NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a---%0a> 	* NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a510c510%0a%3c * NEW: the wrap files will be automatically generated if any of the source%0a---%0a> 	* NEW: the wrap files will be automatically generated if any of the source%0a512,513c512,513%0a%3c * NEW: simuUtil/SaveLinkage is improved in efficiency%0a%3c * CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a---%0a> 	* NEW: simuUtil/SaveLinkage is improved in efficiency%0a> 	* CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a515,518c515,518%0a%3c * CHG: (internal cleaning) fitness is implemented differently.%0a%3c * CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a%3c * CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a%3c * CHG: (internal) change the use of pointer to iterator, in preparation for%0a---%0a> 	* CHG: (internal cleaning) fitness is implemented differently.%0a> 	* CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a> 	* CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a> 	* CHG: (internal) change the use of pointer to iterator, in preparation for%0a520c520%0a%3c * NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a---%0a> 	* NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a522c522%0a%3c * CHG: carray can now read/write binary allele. However, it can no longer %0a---%0a> 	* CHG: carray can now read/write binary allele. However, it can no longer %0a526c526%0a%3c * NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a---%0a> 	* NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a529,534c529,534%0a%3c * NEW: you can now directly compare individuals and populations in python.%0a%3c * CHG: carray is no longer a standalone type. (You can not create it in python)%0a%3c * NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a%3c * NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a%3c * NEW: Complete test cases for all operators.%0a%3c * CHG: remove sep parameter of operators. Users need separator between output of%0a---%0a> 	* NEW: you can now directly compare individuals and populations in python.%0a> 	* CHG: carray is no longer a standalone type. (You can not create it in python)%0a> 	* NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a> 	* NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a> 	* NEW: Complete test cases for all operators.%0a> 	* CHG: remove sep parameter of operators. Users need separator between output of%0a536,538c536,538%0a%3c * NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a%3c * CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a%3c %0a---%0a> 	* NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a> 	* CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a> %0a540,544c540,544%0a%3c * DOC: add examples of penetrance operators to the reference manual.%0a%3c * DOC: document using pyOperator to build pure-python operators%0a%3c * NEW: check return value of pyPenetrance function to be within [0,1]%0a%3c * NEW: add operator continueIf, in addition to terminateIf%0a%3c * NEW: add 's' behavior to operator pause, which will invoke an interactive%0a---%0a> 	* DOC: add examples of penetrance operators to the reference manual.%0a> 	* DOC: document using pyOperator to build pure-python operators%0a> 	* NEW: check return value of pyPenetrance function to be within [0,1]%0a> 	* NEW: add operator continueIf, in addition to terminateIf%0a> 	* NEW: add 's' behavior to operator pause, which will invoke an interactive%0a548,554c548,554%0a%3c * NEW: add test case test_opPause.py%0a%3c * NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a%3c * NEW: add subPop parameter to population::removeIndividual%0a%3c * DOC: add full member function of population object list to reference manual%0a%3c * DOC: add genotypic structure function list to reference manual%0a%3c * DOC: add individual function list to refernce manual%0a%3c * CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a---%0a> 	* NEW: add test case test_opPause.py%0a> 	* NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a> 	* NEW: add subPop parameter to population::removeIndividual%0a> 	* DOC: add full member function of population object list to reference manual%0a> 	* DOC: add genotypic structure function list to reference manual%0a> 	* DOC: add individual function list to refernce manual%0a> 	* CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a556c556%0a%3c * NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a---%0a> 	* NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a559c559%0a%3c * NEW: pyOperator can now be a during-mating operator. Pass a python function%0a---%0a> 	* NEW: pyOperator can now be a during-mating operator. Pass a python function%0a561,562c561,562%0a%3c * BUG: fix another memory leak problem when an internal population is exposed%0a%3c * NEW: improve the efficiency of dynamic type finding of population and %0a---%0a> 	* BUG: fix another memory leak problem when an internal population is exposed%0a> 	* NEW: improve the efficiency of dynamic type finding of population and %0a565c565%0a%3c * NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a---%0a> 	* NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a568,573c568,573%0a%3c * NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a%3c * NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a%3c * DOC: add simuPOP coding convension to simuPOP reference manual%0a%3c * NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a%3c * NEW: give correct prompt for pause operator regarding exported population name%0a%3c * BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a---%0a> 	* NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a> 	* NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a> 	* DOC: add simuPOP coding convension to simuPOP reference manual%0a> 	* NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a> 	* NEW: give correct prompt for pause operator regarding exported population name%0a> 	* BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a578c578%0a%3c * NEW: add recCount(loc) and recCount() to recombinator to track%0a---%0a> 	* NEW: add recCount(loc) and recCount() to recombinator to track%0a580c580%0a%3c * NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a---%0a> 	* NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a582,583c582,583%0a%3c * NEW: add atPloidy=[0] to pointMutator.%0a%3c * CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a---%0a> 	* NEW: add atPloidy=[0] to pointMutator.%0a> 	* CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a585c585%0a%3c * NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a---%0a> 	* NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a587,589c587,589%0a%3c * NEW: convert test_mutator.py to unittest framework.%0a%3c * NEW: add DBG_DEVEL for developer-level debug information.%0a%3c * CHG: Make adjustment to how genotype structure is accessed from individual and %0a---%0a> 	* NEW: convert test_mutator.py to unittest framework.%0a> 	* NEW: add DBG_DEVEL for developer-level debug information.%0a> 	* CHG: Make adjustment to how genotype structure is accessed from individual and %0a592,594c592,594%0a%3c * BUG: fix a tiny bug about optimization mode reporting%0a%3c * NEW: test_population is better now, but still way to go.%0a%3c * CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a---%0a> 	* BUG: fix a tiny bug about optimization mode reporting%0a> 	* NEW: test_population is better now, but still way to go.%0a> 	* CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a598,603c598,603%0a%3c * NEW: add more info to saved config file. (Add a command  line script)%0a%3c * CHG: simuOpt does not load wx automatically when --noDialog is used.%0a%3c * BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a%3c * BUG: fix a memory leak problem with PyObject->double conversion.%0a%3c * CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a%3c %0a---%0a> 	* NEW: add more info to saved config file. (Add a command  line script)%0a> 	* CHG: simuOpt does not load wx automatically when --noDialog is used.%0a> 	* BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a> 	* BUG: fix a memory leak problem with PyObject->double conversion.%0a> 	* CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a> %0a605c605%0a%3c * add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a---%0a> 	* add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a607c607%0a%3c * start to convert all test cases to PyUnit. This means better test cases and more%0a---%0a> 	* start to convert all test cases to PyUnit. This means better test cases and more%0a610,614c610,614%0a%3c * fix a bug in initializer (parameter proportion)%0a%3c * fix a bug in recombinator concerning direct chrom copy.%0a%3c * remove autoconf, Makefile.icc stuff to avoid confusion.%0a%3c * fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a%3c * add subversion  revision number to doc and binary releases for%0a---%0a> 	* fix a bug in initializer (parameter proportion)%0a> 	* fix a bug in recombinator concerning direct chrom copy.%0a> 	* remove autoconf, Makefile.icc stuff to avoid confusion.%0a> 	* fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a> 	* add subversion  revision number to doc and binary releases for%0a616c616%0a%3c * fix windows binary import problem caused by mingw/msvcrt. Details please see %0a---%0a> 	* fix windows binary import problem caused by mingw/msvcrt. Details please see %0a618c618%0a%3c * fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a---%0a> 	* fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a620,622c620,622%0a%3c * add parameter --resampleOnly and --reAnalyzeOnly%0a%3c * remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a%3c * add simuViewPop.py (module and command) that can load and view popularion%0a---%0a> 	* add parameter --resampleOnly and --reAnalyzeOnly%0a> 	* remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a> 	* add simuViewPop.py (module and command) that can load and view popularion%0a626,627c626,627%0a%3c * fix a reporting bug in simuCDCV.py%0a%3c * support sex chromosome and sex chromosome related mating, recombination issues.%0a---%0a> 	* fix a reporting bug in simuCDCV.py%0a> 	* support sex chromosome and sex chromosome related mating, recombination issues.%0a631c631%0a%3c * add parameters atPloidy, sex to initializers. Now, you can %0a---%0a> 	* add parameters atPloidy, sex to initializers. Now, you can %0a634c634%0a%3c * add support for sex-specific recombination rate. (parameter maleIntensity,%0a---%0a> 	* add support for sex-specific recombination rate. (parameter maleIntensity,%0a636,638c636,638%0a%3c * modify some features of simuComplexDisease.py%0a%3c * release 0.6.8 and set up daily snapshots %0a%3c %0a---%0a> 	* modify some features of simuComplexDisease.py%0a> 	* release 0.6.8 and set up daily snapshots %0a> %0a640,641c640,641%0a%3c * Add help() infor for the function version of operators and member functions.%0a%3c * use Walker's alias algorithm for weighted sampling. Random mating with %0a---%0a> 	* Add help() infor for the function version of operators and member functions.%0a> 	* use Walker's alias algorithm for weighted sampling. Random mating with %0a645,648c645,648%0a%3c * add compiler info to Welcome message. (to see if it matches that of Python.)%0a%3c * change the use of logfile in simuCDCV.py %0a%3c * fix a bug in operator InitByFreq.%0a%3c %0a---%0a> 	* add compiler info to Welcome message. (to see if it matches that of Python.)%0a> 	* change the use of logfile in simuCDCV.py %0a> 	* fix a bug in operator InitByFreq.%0a> %0a650,651c650,651%0a%3c * add wxGetParam. Will be used when wxPython is available.%0a%3c * add wxPython version of listVars. Much better than the text version %0a---%0a> 	* add wxGetParam. Will be used when wxPython is available.%0a> 	* add wxPython version of listVars. Much better than the text version %0a653,658c653,658%0a%3c * add some demographic functions in simuUtil.py%0a%3c * use grid for tkinter box%0a%3c * add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a%3c * find an uncaptured out of memory exception.%0a%3c * simuCDCV.py is better, with log file.%0a%3c * stop using global variable gen. Add gen() function to individual population%0a---%0a> 	* add some demographic functions in simuUtil.py%0a> 	* use grid for tkinter box%0a> 	* add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a> 	* find an uncaptured out of memory exception.%0a> 	* simuCDCV.py is better, with log file.%0a> 	* stop using global variable gen. Add gen() function to individual population%0a661c661%0a%3c * Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a---%0a> 	* Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a663,664c663,664%0a%3c * Add tooltip to the wxPython version of getParam.%0a%3c %0a---%0a> 	* Add tooltip to the wxPython version of getParam.%0a> %0a666,670c666,670%0a%3c * separate user's guide and reference manual%0a%3c * streamline getParam, usage, help etc.%0a%3c * add scripts folder for common simupop templates%0a%3c * add quiet option to simuPOP to suppress initial input%0a%3c * add tk support for easy inputing of variables. This is %0a---%0a> 	* separate user's guide and reference manual%0a> 	* streamline getParam, usage, help etc.%0a> 	* add scripts folder for common simupop templates%0a> 	* add quiet option to simuPOP to suppress initial input%0a> 	* add tk support for easy inputing of variables. This is %0a672c672%0a%3c * fix a bug in saving shared variables. Exam saved format. Full backward%0a---%0a> 	* fix a bug in saving shared variables. Exam saved format. Full backward%0a674,675c674,675%0a%3c * simuComplexDisease.py. It uses almost all features of simuPOP%0a%3c * remove headers support for object. They are not very useful and %0a---%0a> 	* simuComplexDisease.py. It uses almost all features of simuPOP%0a> 	* remove headers support for object. They are not very useful and %0a679c679%0a%3c * savePopulation saves local variables as well. This is used to save special info like %0a---%0a> 	* savePopulation saves local variables as well. This is used to save special info like %0a681,682c681,682%0a%3c * Label save population with max allowed allele number.%0a%3c * merge some parameters through python code. Now, parameters like rate%0a---%0a> 	* Label save population with max allowed allele number.%0a> 	* merge some parameters through python code. Now, parameters like rate%0a684,687c684,687%0a%3c * caseControlSample can takes array cases/controls parameters.%0a%3c * optimized genoStructure access, fix a bug about transferring the structure%0a%3c * add LoadRandFam ( not easy :-)%0a%3c * add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a---%0a> 	* caseControlSample can takes array cases/controls parameters.%0a> 	* optimized genoStructure access, fix a bug about transferring the structure%0a> 	* add LoadRandFam ( not easy :-)%0a> 	* add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a689,690c689,690%0a%3c * more efficient handling of ancestral pops%0a%3c %0a---%0a> 	* more efficient handling of ancestral pops%0a> %0a692,696c692,696%0a%3c * add simulator::getPopulation get a copy of population%0a%3c * add simuOpt to control simuPOP behavior, hide other modules%0a%3c * add pointMutator%0a%3c * change the meaning of rate in recombinator, add parameter intensity%0a%3c * IMPORTANT: population can contain multiple generations. %0a---%0a> 	* add simulator::getPopulation get a copy of population%0a> 	* add simuOpt to control simuPOP behavior, hide other modules%0a> 	* add pointMutator%0a> 	* change the meaning of rate in recombinator, add parameter intensity%0a> 	* IMPORTANT: population can contain multiple generations. %0a700,703c700,703%0a%3c * add SavePopulations and LoadPopulations function.%0a%3c * add stat(homoFreq and expHetero)%0a%3c * fix a small bug with end %3c 0 and step > 1%0a%3c * add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a---%0a> 	* add SavePopulations and LoadPopulations function.%0a> 	* add stat(homoFreq and expHetero)%0a> 	* fix a small bug with end %3c 0 and step > 1%0a> 	* add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a705,711c705,711%0a%3c * make duringMating oeprators re-order automatically%0a%3c * add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a%3c * add affected sibpair sampling scheme%0a%3c * export to linkage format (affected sibpair samples)%0a%3c * export to randfam format%0a%3c * test parentsTagger, successfully track pedigree info   %0a%3c %0a---%0a> 	* make duringMating oeprators re-order automatically%0a> 	* add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a> 	* add affected sibpair sampling scheme%0a> 	* export to linkage format (affected sibpair samples)%0a> 	* export to randfam format%0a> 	* test parentsTagger, successfully track pedigree info   %0a> %0a713,728c713,728%0a%3c * variables are now population associated. (pop.evaluate(...)%0a%3c * add quantitative trait and penetrance support%0a%3c * add dryrun parameter to apply and evolve%0a%3c * dvars() function. (Automatic dictionary wrapper class)%0a%3c * add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a%3c * varPlotter becomes an operator.%0a%3c * add D, D' and r2 measures%0a%3c * add newSubPopSizeFunc option to Mating schemes%0a%3c * change haploFreq to count all haplotypes.%0a%3c * add multi-allele Fst, LD etc. (average)%0a%3c * fixes all memory leak and reference count problems %0a%3c * save/load auto format according to file extension.%0a%3c * fix a small bug of unclosed files.%0a%3c * finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a%3c * fix two bugs in AvgLD calculation and in recombinator.%0a%3c %0a---%0a> 	* variables are now population associated. (pop.evaluate(...)%0a> 	* add quantitative trait and penetrance support%0a> 	* add dryrun parameter to apply and evolve%0a> 	* dvars() function. (Automatic dictionary wrapper class)%0a> 	* add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a> 	* varPlotter becomes an operator.%0a> 	* add D, D' and r2 measures%0a> 	* add newSubPopSizeFunc option to Mating schemes%0a> 	* change haploFreq to count all haplotypes.%0a> 	* add multi-allele Fst, LD etc. (average)%0a> 	* fixes all memory leak and reference count problems %0a> 	* save/load auto format according to file extension.%0a> 	* fix a small bug of unclosed files.%0a> 	* finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a> 	* fix two bugs in AvgLD calculation and in recombinator.%0a> %0a730,737c730,737%0a%3c * add simuPOP_la library for long alleles.%0a%3c * add exposePop option to pyEval (better pure-python operator support)%0a%3c * better treatment for carray. (fix a bug)%0a%3c * more statistics: Fst, Rst, H_est, H_obs etc%0a%3c * read/write, FSTAT format%0a%3c * use simple string instead of list to store statements.%0a%3c * merge alleleCounter and popStat since alleleCounter may depend on popStat%0a%3c * add operator pause for presentation purpose%0a---%0a> 	* add simuPOP_la library for long alleles.%0a> 	* add exposePop option to pyEval (better pure-python operator support)%0a> 	* better treatment for carray. (fix a bug)%0a> 	* more statistics: Fst, Rst, H_est, H_obs etc%0a> 	* read/write, FSTAT format%0a> 	* use simple string instead of list to store statements.%0a> 	* merge alleleCounter and popStat since alleleCounter may depend on popStat%0a> 	* add operator pause for presentation purpose%0a739,740c739,740%0a%3c * Genomic control (use R/gap package, simple subpop vs subpop version)%0a%3c %0a---%0a> 	* Genomic control (use R/gap package, simple subpop vs subpop version)%0a> %0a742,748c742,748%0a%3c * bug fixes%0a%3c * better distribution process and binaries.%0a%3c * remove internal language and use Python expression only%0a%3c * more mutation models%0a%3c * some hybrid operators added%0a%3c * simuPOP website%0a%3c %0a---%0a> 	* bug fixes%0a> 	* better distribution process and binaries.%0a> 	* remove internal language and use Python expression only%0a> 	* more mutation models%0a> 	* some hybrid operators added%0a> 	* simuPOP website%0a> %0a750,756c750,756%0a%3c * re-write Bernulli-trials and gain 10x performance boost%0a%3c * dynamic population size through newSubPopSizeExpr="".%0a%3c * re-write migration to allow migration between subset of subpopulations%0a%3c * ability to create new subpopulation through migration%0a%3c * tagging x-y location.%0a%3c * visualize migration%0a%3c %0a---%0a> 	* re-write Bernulli-trials and gain 10x performance boost%0a> 	* dynamic population size through newSubPopSizeExpr="".%0a> 	* re-write migration to allow migration between subset of subpopulations%0a> 	* ability to create new subpopulation through migration%0a> 	* tagging x-y location.%0a> 	* visualize migration%0a> %0a758,762c758,762%0a%3c * add selection. %0a%3c * better matings.%0a%3c * bug fixes%0a%3c * migration and selection examples%0a%3c %0a---%0a> 	* add selection. %0a> 	* better matings.%0a> 	* bug fixes%0a> 	* migration and selection examples%0a> %0a764c764%0a%3c * add serialization of simulator. Now I can save %0a---%0a> 	* add serialization of simulator. Now I can save %0a766c766%0a%3c * text, xml and binary formats are supported. XML support%0a---%0a> 	* text, xml and binary formats are supported. XML support%0a771,772c771,772%0a%3c * better shared variable interface %0a%3c * (IMPORTANT!) implement a C/Matlab like language to calculate%0a---%0a> 	* better shared variable interface %0a> 	* (IMPORTANT!) implement a C/Matlab like language to calculate%0a775,776c775,776%0a%3c * add more functions (abs etc) to inline expression)%0a%3c * fixed some bugs.%0a---%0a> 	* add more functions (abs etc) to inline expression)%0a> 	* fixed some bugs.%0a779c779%0a%3c * clean the code. Use unsigned long when applicable. Elimilate all %0a---%0a> 	* clean the code. Use unsigned long when applicable. Elimilate all %0a781,783c781,783%0a%3c * add some more test cases to cover all user features.%0a%3c * Some real examples%0a%3c %0a---%0a> 	* add some more test cases to cover all user features.%0a> 	* Some real examples%0a> %0a785c785%0a%3c * return default value for SharedVariable::getVar(name, default)%0a---%0a> 	* return default value for SharedVariable::getVar(name, default)%0a787,788c787,788%0a%3c * shared variables can take string, double, array and dictionary.%0a%3c * varParser can now take all kind of shared variables, using%0a---%0a> 	* shared variables can take string, double, array and dictionary.%0a> 	* varParser can now take all kind of shared variables, using%0a790,791c790,791%0a%3c * DataProvider is separated from Operator and is put in utility.h%0a%3c * DataSource is separated from Visualizer so that other operators%0a---%0a> 	* DataProvider is separated from Operator and is put in utility.h%0a> 	* DataSource is separated from Visualizer so that other operators%0a793c793%0a%3c * VarDataSource is provided so Visualizer etc can visaulize/display%0a---%0a> 	* VarDataSource is provided so Visualizer etc can visaulize/display%0a797,798c797,798%0a%3c * shared variables (operators can store and retrieve variables by name)%0a%3c * better written outputHelper. Now can print shared variables.%0a---%0a> 	* shared variables (operators can store and retrieve variables by name)%0a> 	* better written outputHelper. Now can print shared variables.%0a800,803c800,803%0a%3c * add "memory file" to improve efficiency under certain circumstances.%0a%3c * overhaul of operator's filename parser (can take shared var now)%0a%3c * provide binary distribution for linux, mac and solaris.%0a%3c * create a batch file to build win32 binary. (Much easier to use)%0a---%0a> 	* add "memory file" to improve efficiency under certain circumstances.%0a> 	* overhaul of operator's filename parser (can take shared var now)%0a> 	* provide binary distribution for linux, mac and solaris.%0a> 	* create a batch file to build win32 binary. (Much easier to use)%0a807,809c807,809%0a%3c * help(class/function) now uses doxygen generated document.%0a%3c * distribute tools like .emacs.python.el and swig.xsl%0a%3c * remove all unnecessary files from boost and gsl distribution%0a---%0a> 	* help(class/function) now uses doxygen generated document.%0a> 	* distribute tools like .emacs.python.el and swig.xsl%0a> 	* remove all unnecessary files from boost and gsl distribution%0a811c811%0a%3c * ported to windows. see INSTALL.win32 for details %0a---%0a> 	* ported to windows. see INSTALL.win32 for details %0a813c813%0a%3c * make DEBUG the default library (optimized will be used less frequently.)%0a---%0a> 	* make DEBUG the default library (optimized will be used less frequently.)%0a816,818c816,818%0a%3c * better suport of GSL. add setRNG()%0a%3c * better debug debug(code) instead of debug(level)%0a%3c * better macOS support%0a---%0a> 	* better suport of GSL. add setRNG()%0a> 	* better debug debug(code) instead of debug(level)%0a> 	* better macOS support%0a821,823c821,823%0a%3c * a working distribution with lots of test cases%0a%3c * ported to macOS, solaris%0a%3c %0a---%0a> 	* a working distribution with lots of test cases%0a> 	* ported to macOS, solaris%0a> %0a826,834c826,834%0a%3c * Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a%3c * change README and make it doxygen mainpage%0a%3c * create todo list and many other documents%0a%3c * implement exception classes with error message sent to Python%0a%3c * change most arrays to vector so that they can be accessed through python%0a%3c * find the right way to do keyword argument from python. Very useful.%0a%3c * Population basic structure is finished with basic operations.%0a%3c * Operator start-every-end-at is implemented.%0a%3c * genetic drifting sample program went fine.%0a---%0a> 	* Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a> 	* change README and make it doxygen mainpage%0a> 	* create todo list and many other documents%0a> 	* implement exception classes with error message sent to Python%0a> 	* change most arrays to vector so that they can be accessed through python%0a> 	* find the right way to do keyword argument from python. Very useful.%0a> 	* Population basic structure is finished with basic operations.%0a> 	* Operator start-every-end-at is implemented.%0a> 	* genetic drifting sample program went fine.%0a
host:1232294043=127.0.0.1
author:1232293932=
diff:1232293932:1232292363:=3,7c3,7%0a%3c !! Version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a%3c 	* NEW: Allow populations in a simulator to have different genotype structure. %0a%3c 	* CHG: A simulator can no longer access genotypic structure information.%0a%3c 	* NEW: Add simulator::add to add new populations to a simulator.%0a%3c 	* CHG: Remove simulator::addInfoField and other functions because they can be%0a---%0a> !!version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a> * NEW: Allow populations in a simulator to have different genotype structure. %0a> * CHG: A simulator can no longer access genotypic structure information.%0a> * NEW: Add simulator::add to add new populations to a simulator.%0a> * CHG: Remove simulator::addInfoField and other functions because they can be%0a9c9%0a%3c 	* NEW: Allow the use of single form parameter in population::removeSubPops,%0a---%0a> * NEW: Allow the use of single form parameter in population::removeSubPops,%0a11,16c11,16%0a%3c 	* BUG: Fix a bug in adding locus to a population without any locus.%0a%3c %0a%3c !! Version 0.9.1 - (Rev 2330) Jan 13, 2009%0a%3c 	* NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a%3c 	* CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a%3c 	* CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a---%0a> * BUG: Fix a bug in adding locus to a population without any locus.%0a> %0a> !!version 0.9.1 - (Rev 2330) Jan 13, 2009%0a> * NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a> * CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a> * CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a18c18%0a%3c 	* CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a---%0a> * CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a20,21c20,21%0a%3c 	* BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a%3c 	* CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a---%0a> * BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a> * CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a23,25c23,25%0a%3c 	* CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a%3c 	* CHG: Rename mating scheme binomialSelection to randomSelection.%0a%3c 	* CHG: Merge parameters convProb, convMode and convParam to convMode in%0a---%0a> * CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a> * CHG: Rename mating scheme binomialSelection to randomSelection.%0a> * CHG: Merge parameters convProb, convMode and convParam to convMode in%0a27,30c27,30%0a%3c 	* BUG: Fix option shuffleOffspring in heteroMating().%0a%3c 	* CHG: Change the default output of parentsTagger when only one parent is passed.%0a%3c 	* CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a%3c 	* CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a---%0a> * BUG: Fix option shuffleOffspring in heteroMating().%0a> * CHG: Change the default output of parentsTagger when only one parent is passed.%0a> * CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a> * CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a32c32%0a%3c 	* NEW: Allow a demographic function to return a number if there is only one%0a---%0a> * NEW: Allow a demographic function to return a number if there is only one%0a34c34%0a%3c 	* NEW: Allow pedigreeMating to set sex, affection status and some information%0a---%0a> * NEW: Allow pedigreeMating to set sex, affection status and some information%0a36,37c36,37%0a%3c 	* NEW: Allow random parent(s) choosers to set name of information field fitness.%0a%3c 	* CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a---%0a> * NEW: Allow random parent(s) choosers to set name of information field fitness.%0a> * CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a39c39%0a%3c 	* NEW: Allow replicate numbers in a simulator to refer to the last several%0a---%0a> * NEW: Allow replicate numbers in a simulator to refer to the last several%0a41c41%0a%3c 	* CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a---%0a> * CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a43,44c43,44%0a%3c 	* NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a%3c 	* NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a---%0a> * NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a> * NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a46,57c46,57%0a%3c 	* NEW: Support other device types in varPlotter::saveAs.%0a%3c 	* NEW: dumper now supports virtual subpopulations.%0a%3c %0a%3c !! Version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a%3c 	* CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a%3c 	* CHG: migrator now uses an information field "migrate_to".%0a%3c 	* CHG: Add function population::extract.%0a%3c 	* CHG: Remove parameter ancGen from population::clone().%0a%3c 	* NEW: Dump() also display information fields.%0a%3c 	* NEW: Expose population::pushAndDiscard(pop) as population::push().%0a%3c 	* NEW: Add parameter subPops to all operators.%0a%3c 	* CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a---%0a> * NEW: Support other device types in varPlotter::saveAs.%0a> * NEW: dumper now supports virtual subpopulations.%0a> %0a> !!version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a> * CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a> * CHG: migrator now uses an information field "migrate_to".%0a> * CHG: Add function population::extract.%0a> * CHG: Remove parameter ancGen from population::clone().%0a> * NEW: Dump() also display information fields.%0a> * NEW: Expose population::pushAndDiscard(pop) as population::push().%0a> * NEW: Add parameter subPops to all operators.%0a> * CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a60c60%0a%3c 	* CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a---%0a> * CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a62,67c62,67%0a%3c 	* CHG: Remove population::removeEmptySubPops().%0a%3c 	* NEW: Add support for subpopulation names.%0a%3c 	* CHG: Remove intializer, spread and pyInit operators.%0a%3c 	* CHG: Add parameter initSex to initByFreq and initByValue.%0a%3c 	* NEW: Initializers now support virtual subpopulations.%0a%3c 	* CHG: Recombiantor no longer supports recombination by sex, %0a---%0a> * CHG: Remove population::removeEmptySubPops().%0a> * NEW: Add support for subpopulation names.%0a> * CHG: Remove intializer, spread and pyInit operators.%0a> * CHG: Add parameter initSex to initByFreq and initByValue.%0a> * NEW: Initializers now support virtual subpopulations.%0a> * CHG: Recombiantor no longer supports recombination by sex, %0a69,73c69,73%0a%3c 	* CHG: Recombinator now supports different types of chromosomes.%0a%3c 	* NEW: Add ops parameter to mating schemes.%0a%3c 	* NEW: add mitochondrialGenoTransmitter.%0a%3c 	* NEW: add population::updateInfoFieldsFrom.%0a%3c 	* NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a---%0a> * CHG: Recombinator now supports different types of chromosomes.%0a> * NEW: Add ops parameter to mating schemes.%0a> * NEW: add mitochondrialGenoTransmitter.%0a> * NEW: add population::updateInfoFieldsFrom.%0a> * NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a76,83c76,83%0a%3c !! Version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a%3c 	* DOC: Adjust reference output for simuPOP classes.%0a%3c 	* CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a%3c 	* CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a%3c 	* CHG: Remove the maxAllele parameter of population.%0a%3c 	* CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a%3c 	* CHG: Remove read support for XML and Binary formats.%0a%3c 	* CHG: Completely change the way sex chromosomes are handled, and add%0a---%0a> !!version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a> * DOC: Adjust reference output for simuPOP classes.%0a> * CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a> * CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a> * CHG: Remove the maxAllele parameter of population.%0a> * CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a> * CHG: Remove read support for XML and Binary formats.%0a> * CHG: Completely change the way sex chromosomes are handled, and add%0a85,90c85,90%0a%3c 	* CHG: Rename class vsp to vspID.%0a%3c 	* CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a%3c 	* CHG: Change parameter of population::virtualSubPopName().%0a%3c 	* CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a%3c 	* CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a%3c 	* CHG: Make pedigree a subclass of population and move population::locateRelatives%0a---%0a> * CHG: Rename class vsp to vspID.%0a> * CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a> * CHG: Change parameter of population::virtualSubPopName().%0a> * CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a> * CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a> * CHG: Make pedigree a subclass of population and move population::locateRelatives%0a92c92%0a%3c 	* CHG: Temporarily disable all pedigree related features such as pedigree parent%0a---%0a> * CHG: Temporarily disable all pedigree related features such as pedigree parent%0a94,96c94,96%0a%3c 	* CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a%3c 	* CHG: Replace population::mergePopulation by population::addIndFromPop.%0a%3c 	* CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a---%0a> * CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a> * CHG: Replace population::mergePopulation by population::addIndFromPop.%0a> * CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a98,109c98,109%0a%3c 	* CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a%3c 	* CHG: Adjust interface to population::removeLoci.%0a%3c 	* CHG: Adjust interface to population::removeSubPops.%0a%3c 	* NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a%3c 	* CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a%3c 	* NEW: Add simuProgress class to simuUtl.%0a%3c 	* CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a%3c 	* NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a%3c 	* CHG: Remove operator terminator and continueIf.%0a%3c 	* CHG: Reset file format number. No longer support previous file formats.%0a%3c 	* NEW: add simulator::populations().%0a%3c 	* NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a---%0a> * CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a> * CHG: Adjust interface to population::removeLoci.%0a> * CHG: Adjust interface to population::removeSubPops.%0a> * NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a> * CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a> * NEW: Add simuProgress class to simuUtl.%0a> * CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a> * NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a> * CHG: Remove operator terminator and continueIf.%0a> * CHG: Reset file format number. No longer support previous file formats.%0a> * NEW: add simulator::populations().%0a> * NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a111c111%0a%3c 	* CHG: Replace simulator::getPopulation by simulator::population and%0a---%0a> * CHG: Replace simulator::getPopulation by simulator::population and%0a114,120c114,120%0a%3c !! Version 0.8.8 - (Rev 1787) Oct 24, 2008%0a%3c 	* CHG: Remove the replicate group feature.%0a%3c 	* NEW: Allow mapSelector to work for all ploidy.%0a%3c 	* DOC: Add keyword applicability to indicate applicability of operators.%0a%3c 	* DOC: Document applicability of mating schemes.%0a%3c 	* DOC: Fix bibtex references of user's guide and reference manual.%0a%3c 	* CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a---%0a> !!version 0.8.8 - (Rev 1787) Oct 24, 2008%0a> * CHG: Remove the replicate group feature.%0a> * NEW: Allow mapSelector to work for all ploidy.%0a> * DOC: Add keyword applicability to indicate applicability of operators.%0a> * DOC: Document applicability of mating schemes.%0a> * DOC: Fix bibtex references of user's guide and reference manual.%0a> * CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a122c122%0a%3c 	* NEW: add individual::genotype (previously called arrGenotype) and%0a---%0a> * NEW: add individual::genotype (previously called arrGenotype) and%0a124c124%0a%3c 	* CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a---%0a> * CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a126c126%0a%3c 	* CHG: population arrGenotype are marked obsolete and will be removed%0a---%0a> * CHG: population arrGenotype are marked obsolete and will be removed%0a128,129c128,129%0a%3c 	* NEW: add population::genotype and population::setGenoytpe.%0a%3c 	* BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a---%0a> * NEW: add population::genotype and population::setGenoytpe.%0a> * BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a131,135c131,135%0a%3c 	* NEW: Support Python 2.6.%0a%3c %0a%3c !! Version 0.8.7 - (Rev 1755) Aug 29, 2008%0a%3c 	* NEW: allow the use of a list to specify a virtual subpopulation.%0a%3c 	* NEW: change the return type of allele() so that no boolean value (True or False)%0a---%0a> * NEW: Support Python 2.6.%0a> %0a> !!version 0.8.7 - (Rev 1755) Aug 29, 2008%0a> * NEW: allow the use of a list to specify a virtual subpopulation.%0a> * NEW: change the return type of allele() so that no boolean value (True or False)%0a137,139c137,139%0a%3c 	* DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a%3c 	* BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a%3c 	* BUG: Fix a bug when calculating expected heterozygosity with increased%0a---%0a> * DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a> * BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a> * BUG: Fix a bug when calculating expected heterozygosity with increased%0a141c141%0a%3c 	* BUG: Fix a bug in controlled random mating where number of affected alleles%0a---%0a> * BUG: Fix a bug in controlled random mating where number of affected alleles%0a143c143%0a%3c 	* CHG: Only write (compressed if possible) in text format. simuPOP can still%0a---%0a> * CHG: Only write (compressed if possible) in text format. simuPOP can still%0a145c145%0a%3c 	* BUG: Fix a bug that is related to the calculation of Fst in populations with%0a---%0a> * BUG: Fix a bug that is related to the calculation of Fst in populations with%0a147,151c147,151%0a%3c 	* BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a%3c 	* BUG: Fix a bug that prevents simuPOP from compressing population files.%0a%3c 	* NEW: Make boost 1.36.0 the default built-in boost version.%0a%3c 	* BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a%3c 	* NEW: Stop distributing zlib1.dll by building zlib from source under%0a---%0a> * BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a> * BUG: Fix a bug that prevents simuPOP from compressing population files.%0a> * NEW: Make boost 1.36.0 the default built-in boost !!version.%0a> * BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a> * NEW: Stop distributing zlib1.dll by building zlib from source under%0a154,156c154,156%0a%3c !! Version 0.8.6 - (Rev 1666) Jun 20, 2008%0a%3c 	* NEW: Polish command line arguments output in a configuration file.%0a%3c 	* NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a---%0a> !!version 0.8.6 - (Rev 1666) Jun 20, 2008%0a> * NEW: Polish command line arguments output in a configuration file.%0a> * NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a158,164c158,164%0a%3c 	* BUG: Fix a minor simuOpt::saveConfigFile bug%0a%3c 	* BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a%3c 	* BUG: fix a bug that is related to reference count of loaded lists.%0a%3c 	* CHG: allow sample size > population size (give a warning rather than error)%0a%3c 	* CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a%3c 	* NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a%3c 	* NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a---%0a> * BUG: Fix a minor simuOpt::saveConfigFile bug%0a> * BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a> * BUG: fix a bug that is related to reference count of loaded lists.%0a> * CHG: allow sample size > population size (give a warning rather than error)%0a> * CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a> * NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a> * NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a166,171c166,171%0a%3c 	* CHG: polish tkInter and wxPython parameter input dialog.%0a%3c 	* CHG: Remove parameter order from information field related functions.%0a%3c 	* BUG: Fix a information field + migration bug.%0a%3c 	* NEW: add operation resizeSubPops.%0a%3c 	* BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a%3c 	* NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a---%0a> * CHG: polish tkInter and wxPython parameter input dialog.%0a> * CHG: Remove parameter order from information field related functions.%0a> * BUG: Fix a information field + migration bug.%0a> * NEW: add operation resizeSubPops.%0a> * BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a> * NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a173c173%0a%3c 	* BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a---%0a> * BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a175c175%0a%3c 	* CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a---%0a> * CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a177c177%0a%3c 	* NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a---%0a> * NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a179c179%0a%3c 	* NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a---%0a> * NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a182,184c182,184%0a%3c 	* NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a%3c 	* NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a%3c 	* NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a---%0a> * NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a> * NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a> * NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a188,190c188,190%0a%3c !! Version 0.8.5 - (Rev 1488) Apr 3, 2008%0a%3c 	* BUG: fix a bug that prevents a cloned simulator from evolving again.%0a%3c 	* NEW: add parameter numMale and sexMode to all offspring generator and%0a---%0a> !!version 0.8.5 - (Rev 1488) Apr 3, 2008%0a> * BUG: fix a bug that prevents a cloned simulator from evolving again.%0a> * NEW: add parameter numMale and sexMode to all offspring generator and%0a192,194c192,194%0a%3c 	* NEW: add gene conversion to recombinator, using parameter convMode, convProb and convParam.%0a%3c 	* NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a%3c 	* NEW: add random parent chooser without replacement and/or with alpha individuals,%0a---%0a> * NEW: add gene con!!version to recombinator, using parameter convMode, convProb and convParam.%0a> * NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a> * NEW: add random parent chooser without replacement and/or with alpha individuals,%0a197c197%0a%3c 	* NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a---%0a> * NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a199,206c199,206%0a%3c 	* CHG: make the subPop parameter of population() function obsolete.%0a%3c 	* CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a%3c %0a%3c %0a%3c !! Version 0.8.4 - (Rev 1456) Mar 8, 2008%0a%3c 	* NEW: add support for other posix systems like HP-UX%0a%3c 	* NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a%3c 	* NEW: add two operators infoEval and infoExec that can be used to manipulate%0a---%0a> * CHG: make the subPop parameter of population() function obsolete.%0a> * CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a> %0a> %0a> !!version 0.8.4 - (Rev 1456) Mar 8, 2008%0a> * NEW: add support for other posix systems like HP-UX%0a> * NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a> * NEW: add two operators infoEval and infoExec that can be used to manipulate%0a208c208%0a%3c 	* NEW: operator stator popSize=True also calculates virtual subpop size using%0a---%0a> * NEW: operator stator popSize=True also calculates virtual subpop size using%0a210,211c210,211%0a%3c 	* BUG: fix a bug in the re-initialization of pyParentsChooser.%0a%3c 	* CHG: inheritTagger will inherit the first, instead of the second, information%0a---%0a> * BUG: fix a bug in the re-initialization of pyParentsChooser.%0a> * CHG: inheritTagger will inherit the first, instead of the second, information%0a213c213%0a%3c 	* CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a---%0a> * CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a215c215%0a%3c 	* NEW: allow multiple genotype in the same virtual subpopulation split by%0a---%0a> * NEW: allow multiple genotype in the same virtual subpopulation split by%0a217,227c217,227%0a%3c 	* NEW: add combinedSplitter%0a%3c %0a%3c %0a%3c !! Version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a%3c 	* NEW: allow taggers to write pedigree files%0a%3c 	* NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a%3c 	* NEW: introduce pedigreeMating to mate according to a given pedigree%0a%3c 	* NEW: add infoTagger, sexTagger, affectionTagger%0a%3c 	* NEW: add pedigree information handling functions%0a%3c 	* CHG: add more options to functions in hapMapUtil.py%0a%3c 	* CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a---%0a> * NEW: add combinedSplitter%0a> %0a> %0a> !!version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a> * NEW: allow taggers to write pedigree files%0a> * NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a> * NEW: introduce pedigreeMating to mate according to a given pedigree%0a> * NEW: add infoTagger, sexTagger, affectionTagger%0a> * NEW: add pedigree information handling functions%0a> * CHG: add more options to functions in hapMapUtil.py%0a> * CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a229,230c229,230%0a%3c 	* BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a%3c 	* NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a---%0a> * BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a> * NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a233,236c233,236%0a%3c !! Version 0.8.2 - (Rev 1370) Nov 19, 2007%0a%3c 	* BUG: Fix saveFstat in simuUtil.py%0a%3c 	* NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a%3c 	* NEW: add heteroMating to allow allow different mating scheme used for different%0a---%0a> !!version 0.8.2 - (Rev 1370) Nov 19, 2007%0a> * BUG: Fix saveFstat in simuUtil.py%0a> * NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a> * NEW: add heteroMating to allow allow different mating scheme used for different%0a238,245c238,245%0a%3c 	* NEW: add selfMating mating scheme.%0a%3c 	* NEW: add various parent choosers.%0a%3c 	* NEW: add various offspring generators.%0a%3c 	* NEW: add null, duplicate, info, genotype, proportion splitters%0a%3c 	* NEW: add splitter interface to populations.%0a%3c %0a%3c !! Version 0.8.1 - (Rev 1254) Oct 05, 2007%0a%3c 	* NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0a---%0a> * NEW: add selfMating mating scheme.%0a> * NEW: add various parent choosers.%0a> * NEW: add various offspring generators.%0a> * NEW: add null, duplicate, info, genotype, proportion splitters%0a> * NEW: add splitter interface to populations.%0a> %0a> !!version 0.8.1 - (Rev 1254) Oct 05, 2007%0a> * NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0a247c247%0a%3c 	* BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a---%0a> * BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a249c249%0a%3c 	* BUG: Fix the handling of binary option in command line, and handling of short %0a---%0a> * BUG: Fix the handling of binary option in command line, and handling of short %0a251,252c251,252%0a%3c 	* NEW: Use a checkbox for binary options in the parameter dialogs.%0a%3c 	* NEW: make use of second to last inforFields passed to pyPenetrance %0a---%0a> * NEW: Use a checkbox for binary options in the parameter dialogs.%0a> * NEW: make use of second to last inforFields passed to pyPenetrance %0a255,257c255,257%0a%3c 	* BUG: Fix a few functions in hapMapUtil.py%0a%3c 	* BUG: stop displaying full path name in the title of the parameter dialog.%0a%3c 	* NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a---%0a> * BUG: Fix a few functions in hapMapUtil.py%0a> * BUG: stop displaying full path name in the title of the parameter dialog.%0a> * NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a259,268c259,268%0a%3c 	* NEW: Some documentation improvement.%0a%3c %0a%3c %0a%3c !! Version 0.8.0 - (Rev 1215) Aug 14, 2007%0a%3c 	* Reference manual overhaul%0a%3c 	* Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a%3c 	* NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a%3c %0a%3c !! Version 0.7.11 - (Rev 1133) July 26, 2007%0a%3c 	* NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a---%0a> * NEW: Some documentation improvement.%0a> %0a> %0a> !!version 0.8.0 - (Rev 1215) Aug 14, 2007%0a> * Reference manual overhaul%0a> * Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a> * NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a> %0a> !!version 0.7.11 - (Rev 1133) July 26, 2007%0a> * NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a270,274c270,274%0a%3c 	* NEW: add subPops parameter to intializers, working the same as subPop%0a%3c 	* NEW: extending pyIndOperator with handling of loci and infoFields%0a%3c 	* BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a%3c 	* BUG: fix scripts/simuViewPop.py%0a%3c 	* NEW: add optional option destructive=False to simulator::getPopulation, as%0a---%0a> * NEW: add subPops parameter to intializers, working the same as subPop%0a> * NEW: extending pyIndOperator with handling of loci and infoFields%0a> * BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a> * BUG: fix scripts/simuViewPop.py%0a> * NEW: add optional option destructive=False to simulator::getPopulation, as%0a276c276%0a%3c 	* NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a---%0a> * NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a278c278%0a%3c 	* NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a---%0a> * NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a280c280%0a%3c 	* BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a---%0a> * BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a282,283c282,283%0a%3c 	* NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a%3c 	* NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a---%0a> * NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a> * NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a287,296c287,296%0a%3c !! Version 0.7.10 - (Rev 987) May 20, 2007%0a%3c 	* BUG: fix a memory leak bug with LoadPopulation%0a%3c 	* BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a%3c 	* NEW: nuclearFamilySampler operator and function%0a%3c 	* NEW: add MATE_UniformDistribution number of offspring type%0a%3c 	* BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a%3c 	* BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a%3c 	* BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a%3c 	* BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a%3c 	* NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a---%0a> !!version 0.7.10 - (Rev 987) May 20, 2007%0a> * BUG: fix a memory leak bug with LoadPopulation%0a> * BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a> * NEW: nuclearFamilySampler operator and function%0a> * NEW: add MATE_UniformDistribution number of offspring type%0a> * BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a> * BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a> * BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a> * BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a> * NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a298,299c298,299%0a%3c 	* NEW: throw an exception when multiple selectors are applied at the same time.%0a%3c 	* NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a---%0a> * NEW: throw an exception when multiple selectors are applied at the same time.%0a> * NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a301c301%0a%3c 	* NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a---%0a> * NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a303,309c303,309%0a%3c 	* NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a%3c 	* NEW: swig 1.3.32 compatibility%0a%3c 	* NEW: add scripts/loadHapMap.py%0a%3c 	* NEW: add pyTagger operator, which can be used to trace trait values.%0a%3c 	* NEW: update comments, in preparation for the 0.8.0 release%0a%3c 	* NEW: disallow change of genotypic structure of populations in a simulator.%0a%3c 	* NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a---%0a> * NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a> * NEW: swig 1.3.32 compatibility%0a> * NEW: add scripts/loadHapMap.py%0a> * NEW: add pyTagger operator, which can be used to trace trait values.%0a> * NEW: update comments, in preparation for the 0.8.0 release%0a> * NEW: disallow change of genotypic structure of populations in a simulator.%0a> * NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a311c311%0a%3c 	* BUG: fix a bug when stat() tries to remove non-existings variables%0a---%0a> * BUG: fix a bug when stat() tries to remove non-existings variables%0a315,319c315,319%0a%3c !! Version 0.7.9 - (Rev 885) Apr 3, 2007%0a%3c 	* BUG (build): add solaris support. This OS does not have stdint.h.%0a%3c 	* BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a%3c 	* NEW: add SaveSolarFrqFile in simuUtil.py%0a%3c 	* NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a---%0a> !!version 0.7.9 - (Rev 885) Apr 3, 2007%0a> * BUG (build): add solaris support. This OS does not have stdint.h.%0a> * BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a> * NEW: add SaveSolarFrqFile in simuUtil.py%0a> * NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a321,322c321,322%0a%3c 	* NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a%3c 	* NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a---%0a> * NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a> * NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a324,327c324,327%0a%3c 	* BUG: fix a bug in the calculation of D'%0a%3c 	* NEW: add LD measurement delta^2%0a%3c 	* NEW: add LD_param parameter to have finer control over how LD is calculated%0a%3c 	* NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a---%0a> * BUG: fix a bug in the calculation of D'%0a> * NEW: add LD measurement delta^2%0a> * NEW: add LD_param parameter to have finer control over how LD is calculated%0a> * NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a329,348c329,348%0a%3c 	* CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a%3c 	* NEW: add association statistics (ChiSq, UC_U, CramerV)%0a%3c 	* BUG: fix passing of relMethod parameter of stat operator%0a%3c 	* CHG: NO_CONVERSION is no longer the default for rpy%0a%3c %0a%3c %0a%3c !! Version 0.7.8 - (Rev 833) Mar 2, 2007%0a%3c 	* BUG: fix broken user interactive input%0a%3c 	* BUG: fix help feature of tkinter dialog%0a%3c 	* NEW: bundle boost 1.33.1 with source package%0a%3c 	* BUG (build): fix a SConstruct bug with MSVC environment variables%0a%3c 	* NEW: add other LD measurements to simuLDDecay.py%0a%3c 	* NEW: optionally add header to QTDT ped file%0a%3c 	* BUG: fix the combine parameter of SaveQTDT%0a%3c %0a%3c %0a%3c !! Version 0.7.7 - (Rev 786) Feb 1, 2007%0a%3c 	* NEW (build): bring scons build system on par with python setup.py%0a%3c 	* NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a%3c 	* NEW (build): try really hard to search proper boost libraries. One usually%0a---%0a> * CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a> * NEW: add association statistics (ChiSq, UC_U, CramerV)%0a> * BUG: fix passing of relMethod parameter of stat operator%0a> * CHG: NO_CONVERSION is no longer the default for rpy%0a> %0a> %0a> !!version 0.7.8 - (Rev 833) Mar 2, 2007%0a> * BUG: fix broken user interactive input%0a> * BUG: fix help feature of tkinter dialog%0a> * NEW: bundle boost 1.33.1 with source package%0a> * BUG (build): fix a SConstruct bug with MSVC environment variables%0a> * NEW: add other LD measurements to simuLDDecay.py%0a> * NEW: optionally add header to QTDT ped file%0a> * BUG: fix the combine parameter of SaveQTDT%0a> %0a> %0a> !!version 0.7.7 - (Rev 786) Feb 1, 2007%0a> *NEW (build): bring scons build system on par with python setup.py%0a> *NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a> *NEW (build): try really hard to search proper boost libraries. One usually%0a350,352c350,352%0a%3c 	* NEW (build): prune files from source package%0a%3c 	* NEW: add ancestralGen to penetrance and qtrait operators%0a%3c 	* NEW: change pySelector and allow a second parameter gen for the fitness function%0a---%0a> *NEW (build): prune files from source package%0a> *NEW: add ancestralGen to penetrance and qtrait operators%0a> *NEW: change pySelector and allow a second parameter gen for the fitness function%0a354,360c354,361%0a%3c 	* CHG: individual comparison does not compare information fields%0a%3c 	* CHG: adjust individual representation (actually output genotype)%0a%3c 	* BUG: fix a bug in loading some files saved in binary module from standard modules%0a%3c 	* BUG: fix an affected sibpair sampler bug introduced in 0.7.5 MPI modules%0a%3c 	* NEW: add hasInfoField() function%0a%3c 	* NEW: MPI module pass 00, 01, 06 test scripts%0a%3c 	* NEW: Only head node can print to cout%0a---%0a> *CHG: individual comparison does not compare information fields%0a> *CHG: adjust individual representation (actually output genotype)%0a> *BUG: fix a bug in loading some files saved in binary module from standard modules%0a> *BUG: fix an affected sibpair sampler bug introduced in 0.7.5%0a> MPI modules:%0a> *NEW: add hasInfoField() function%0a> *NEW: MPI module pass 00, 01, 06 test scripts%0a> *NEW: Only head node can print to cout%0a363,375c364,376%0a%3c !! Version 0.7.6 - (Rev 674) Dec 25, 2006%0a%3c   -NEW: change file format for binary modules, resulting much faster save/load.%0a%3c   -NEW: fix adjustGenotype (efficiency)%0a%3c   -BUG: fix simulator::clone(), introduced in 0.7.5%0a%3c   -NEW: disable compression under windows due to a boost bug.%0a%3c   -BUG: make simuRPy works with the latest R and rpy.%0a%3c   -NEW: several new chapters in the user's guide.%0a%3c %0a%3c %0a%3c !! Version 0.7.5 - (Rev 576) Dec 8, 2006%0a%3c 	* NEW: experimental MPI modules.%0a%3c 	* BUG: None is treated as False now in Py_Object_As_Bool.%0a%3c 	* NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a---%0a> !!version 0.7.6 - (Rev 674) Dec 25, 2006%0a> *NEW: change file format for binary modules, resulting much faster save/load.%0a> *NEW: fix adjustGenotype (efficiency)%0a> *BUG: fix simulator::clone(), introduced in 0.7.5%0a> *NEW: disable compression under windows due to a boost bug.%0a> *BUG: make simuRPy works with the latest R and rpy.%0a> *NEW: several new chapters in the user's guide.%0a> %0a> %0a> !!version 0.7.5 - (Rev 576) Dec 8, 2006%0a> * NEW: experimental MPI modules.%0a> * BUG: None is treated as False now in Py_Object_As_Bool.%0a> * NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a377c378%0a%3c 	* NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a---%0a> * NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a379c380%0a%3c 	* NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a---%0a> * NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a382,383c383,384%0a%3c 	* NEW: add the missing simulator.clone() function%0a%3c 	* CHG: stop embedding zlib since the source does not work under windows.%0a---%0a> * NEW: add the missing simulator.clone() function%0a> * CHG: stop embedding zlib since the source does not work under windows.%0a387,389c388,390%0a%3c !! Version 0.7.4 - (Rev 518) Nov 5, 2006%0a%3c 	* BUG: fix simulator.population() function%0a%3c 	* NEW/CHG: add order parameter to population arr function series.%0a---%0a> !!version 0.7.4 - (Rev 518) Nov 5, 2006%0a> * BUG: fix simulator.population() function%0a> * NEW/CHG: add order parameter to population arr function series.%0a396c397%0a%3c 	* NEW: test/test_21_performance is added to keep track of performance%0a---%0a> * NEW: test/test_21_performance is added to keep track of performance%0a398,399c399,400%0a%3c 	* NEW: (minor) performance improvement of randomMating and maSelector.%0a%3c 	* NEW: significant performance improvement of mating schemes.%0a---%0a> * NEW: (minor) performance improvement of randomMating and maSelector.%0a> * NEW: significant performance improvement of mating schemes.%0a401c402%0a%3c 	* NEW: add instruction for using intel c++ compiler, which usually improve%0a---%0a> * NEW: add instruction for using intel c++ compiler, which usually improve%0a403,411c404,412%0a%3c 	* BUG: recombinator set sex in a wrong way.%0a%3c 	* NEW: experimental large pedigree sampling largePedigreeSample%0a%3c 	* NEW: experimental support for merlin/vc and merlin regression%0a%3c 	* CHG (internal): overhaul of ascertainment operators and file save stuff.%0a%3c 	* NEW: add 'useDefault' option to simuOpt paramter specification.%0a%3c %0a%3c %0a%3c !! Version 0.7.3 - (Rev 470) Oct 2, 2006%0a%3c 	* CHG: change the allele type of long module to unsigned short, since%0a---%0a> * BUG: recombinator set sex in a wrong way.%0a> * NEW: experimental large pedigree sampling largePedigreeSample%0a> * NEW: experimental support for merlin/vc and merlin regression%0a> * CHG (internal): overhaul of ascertainment operators and file save stuff.%0a> * NEW: add 'useDefault' option to simuOpt paramter specification.%0a> %0a> %0a> !!version 0.7.3 - (Rev 470) Oct 2, 2006%0a> * CHG: change the allele type of long module to unsigned short, since%0a413c414%0a%3c 	* NEW: add -c option to simuCluster.py to allow it to se command instead%0a---%0a> * NEW: add -c option to simuCluster.py to allow it to se command instead%0a415c416%0a%3c 	* NEW: add reference count debugging in simulator.evolve (require%0a---%0a> * NEW: add reference count debugging in simulator.evolve (require%0a417,419c418,420%0a%3c 	* BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a%3c 	* NEW: add pyMating operator%0a%3c 	* NEW: add population::individuals() function that can be used to iterate%0a---%0a> * BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a> * NEW: add pyMating operator%0a> * NEW: add population::individuals() function that can be used to iterate%0a421,427c422,428%0a%3c 	* NEW: add pyIndOperator%0a%3c %0a%3c %0a%3c !! Version 0.7.2 - (Rev 412) - Not publically released%0a%3c 	* CHG: remove demo and support for scipy's gplt package.%0a%3c 	* NEW: add infoFields parameter to population and operators%0a%3c 	* CHG: all populations must now explicitly state the information%0a---%0a> * NEW: add pyIndOperator%0a> %0a> %0a> !!version 0.7.2 - (Rev 412) - Not publically released%0a> * CHG: remove demo and support for scipy's gplt package.%0a> * NEW: add infoFields parameter to population and operators%0a> * CHG: all populations must now explicitly state the information%0a429c430%0a%3c 	* CHG: all qtrait and penetrance oeprators now use info fields of%0a---%0a> * CHG: all qtrait and penetrance oeprators now use info fields of%0a432c433%0a%3c 	* CHG: (Internal) selectors now use info field (fitness) rather than%0a---%0a> * CHG: (Internal) selectors now use info field (fitness) rather than%0a434c435%0a%3c 	* NEW: add --useDefault parameter to use default parameters instead of%0a---%0a> * NEW: add --useDefault parameter to use default parameters instead of%0a436c437%0a%3c 	* NEW: simuCluster.py now subst environmental variables, and stops if%0a---%0a> * NEW: simuCluster.py now subst environmental variables, and stops if%0a438c439%0a%3c 	* CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a---%0a> * CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a440,446c441,447%0a%3c 	* BUG: fix starting allele problem in simuCDCV.py%0a%3c %0a%3c %0a%3c !! Version 0.7.1 - (Rev 378) - Aug 20, 2006%0a%3c 	* BUG: Fix a bug in backward trajectory simulation%0a%3c 	* CHG: change the release/snapsot generating process%0a%3c 	* NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a---%0a> * BUG: fix starting allele problem in simuCDCV.py%0a> %0a> %0a> !!version 0.7.1 - (Rev 378) - Aug 20, 2006%0a> * BUG: Fix a bug in backward trajectory simulation%0a> * CHG: change the release/snapsot generating process%0a> * NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a448,449c449,450%0a%3c 	* BUG: fix a random number generator bug on 64 bit machines.%0a%3c 	* NEW: random number seed is generated in a much better way, and is%0a---%0a> * BUG: fix a random number generator bug on 64 bit machines.%0a> * NEW: random number seed is generated in a much better way, and is%0a451c452%0a%3c 	* NEW: fix analComplexDisease.py which was not up to date with %0a---%0a> * NEW: fix analComplexDisease.py which was not up to date with %0a454,467c455,468%0a%3c !! Version 0.7.0 - (Release 0.6.15, July, 2006)%0a%3c 	* Check all scripts and test cases%0a%3c 	* Check document%0a%3c 	* release%0a%3c %0a%3c !! Version 0.6.14 - (Rev 341) - June 06, 2006%0a%3c 	* CHG: user's guide and reference manual revision%0a%3c 	* NEW: add a local scons build system for developers%0a%3c 	* BUG: fix the variable update bug.%0a%3c 	* BUG: fix setRNG(seed) bug.%0a%3c 	* CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a%3c %0a%3c !! Version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a%3c 	* NEW: Add trajectory simulation functions follows those from selSim%0a---%0a> !!version 0.7.0 - (Release 0.6.15, July, 2006)%0a> * Check all scripts and test cases%0a> * Check document%0a> * release%0a> %0a> !!version 0.6.14 - (Rev 341) - June 06, 2006%0a> * CHG: user's guide and reference manual revision%0a> * NEW: add a local scons build system for developers%0a> * BUG: fix the variable update bug.%0a> * BUG: fix setRNG(seed) bug.%0a> * CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a> %0a> !!version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a> * NEW: Add trajectory simulation functions follows those from selSim%0a469c470%0a%3c 	* NEW: Add controlledMating that accept an generation only if allele%0a---%0a> * NEW: Add controlledMating that accept an generation only if allele%0a471,472c472,473%0a%3c 	* NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a%3c 	* NEW: implement trajectory simulation follows Slatkin 2001. This %0a---%0a> * NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a> * NEW: implement trajectory simulation follows Slatkin 2001. This %0a474c475%0a%3c 	* CHG: (internal change) abort the original template design. This %0a---%0a> * CHG: (internal change) abort the original template design. This %0a477,478c478,479%0a%3c 	* CHG: add separator to simuOpt's parameter specification.%0a%3c 	* NEW: add controlledRandomMating and controlledBinomialSelection which%0a---%0a> * CHG: add separator to simuOpt's parameter specification.%0a> * NEW: add controlledRandomMating and controlledBinomialSelection which%0a480,481c481,482%0a%3c 	* CHG: simuComplexDisease.py has been re-written.%0a%3c 	* NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a---%0a> * CHG: simuComplexDisease.py has been re-written.%0a> * NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a483,484c484,485%0a%3c 	* BUG: fixed a bug about s_shallowCopied flag of population.%0a%3c 	* CHG: Remove starting allele and let all allele start from 0. tests %0a---%0a> * BUG: fixed a bug about s_shallowCopied flag of population.%0a> * CHG: Remove starting allele and let all allele start from 0. tests %0a487c488%0a%3c 	* CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a---%0a> * CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a489c490%0a%3c 	* NEW: File format change that compress population genotype before it is%0a---%0a> * NEW: File format change that compress population genotype before it is%0a491c492%0a%3c 	* NEW: add compress=True option to savePopulation(). For a large file:%0a---%0a> * NEW: add compress=True option to savePopulation(). For a large file:%0a498c499%0a%3c 	* NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a---%0a> * NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a503,504c504,505%0a%3c !! Version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a%3c 	* CHG: 'not enough case/control' in caseControlSample now generates %0a---%0a> !!version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a> * CHG: 'not enough case/control' in caseControlSample now generates %0a506c507%0a%3c 	* CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a---%0a> * CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a508c509%0a%3c 	* NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a---%0a> * NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a510c511%0a%3c 	* NEW: the wrap files will be automatically generated if any of the source%0a---%0a> * NEW: the wrap files will be automatically generated if any of the source%0a512,513c513,514%0a%3c 	* NEW: simuUtil/SaveLinkage is improved in efficiency%0a%3c 	* CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a---%0a> * NEW: simuUtil/SaveLinkage is improved in efficiency%0a> * CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a515,518c516,519%0a%3c 	* CHG: (internal cleaning) fitness is implemented differently.%0a%3c 	* CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a%3c 	* CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a%3c 	* CHG: (internal) change the use of pointer to iterator, in preparation for%0a---%0a> * CHG: (internal cleaning) fitness is implemented differently.%0a> * CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a> * CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a> * CHG: (internal) change the use of pointer to iterator, in preparation for%0a520c521%0a%3c 	* NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a---%0a> * NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a522c523%0a%3c 	* CHG: carray can now read/write binary allele. However, it can no longer %0a---%0a> * CHG: carray can now read/write binary allele. However, it can no longer %0a526c527%0a%3c 	* NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a---%0a> * NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a529,534c530,535%0a%3c 	* NEW: you can now directly compare individuals and populations in python.%0a%3c 	* CHG: carray is no longer a standalone type. (You can not create it in python)%0a%3c 	* NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a%3c 	* NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a%3c 	* NEW: Complete test cases for all operators.%0a%3c 	* CHG: remove sep parameter of operators. Users need separator between output of%0a---%0a> * NEW: you can now directly compare individuals and populations in python.%0a> * CHG: carray is no longer a standalone type. (You can not create it in python)%0a> * NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a> * NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a> * NEW: Complete test cases for all operators.%0a> * CHG: remove sep parameter of operators. Users need separator between output of%0a536,544c537,545%0a%3c 	* NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a%3c 	* CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a%3c %0a%3c !! Version 0.6.11 - (Rev 119) - Jan 19, 2006%0a%3c 	* DOC: add examples of penetrance operators to the reference manual.%0a%3c 	* DOC: document using pyOperator to build pure-python operators%0a%3c 	* NEW: check return value of pyPenetrance function to be within [0,1]%0a%3c 	* NEW: add operator continueIf, in addition to terminateIf%0a%3c 	* NEW: add 's' behavior to operator pause, which will invoke an interactive%0a---%0a> * NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a> * CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a> %0a> !!version 0.6.11 - (Rev 119) - Jan 19, 2006%0a> * DOC: add examples of penetrance operators to the reference manual.%0a> * DOC: document using pyOperator to build pure-python operators%0a> * NEW: check return value of pyPenetrance function to be within [0,1]%0a> * NEW: add operator continueIf, in addition to terminateIf%0a> * NEW: add 's' behavior to operator pause, which will invoke an interactive%0a548,554c549,555%0a%3c 	* NEW: add test case test_opPause.py%0a%3c 	* NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a%3c 	* NEW: add subPop parameter to population::removeIndividual%0a%3c 	* DOC: add full member function of population object list to reference manual%0a%3c 	* DOC: add genotypic structure function list to reference manual%0a%3c 	* DOC: add individual function list to refernce manual%0a%3c 	* CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a---%0a> * TST: add test case test_opPause.py%0a> * NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a> * NEW: add subPop parameter to population::removeIndividual%0a> * DOC: add full member function of population object list to reference manual%0a> * DOC: add genotypic structure function list to reference manual%0a> * DOC: add individual function list to refernce manual%0a> * CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a556c557%0a%3c 	* NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a---%0a> * NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a559c560%0a%3c 	* NEW: pyOperator can now be a during-mating operator. Pass a python function%0a---%0a> * NEW: pyOperator can now be a during-mating operator. Pass a python function%0a561,562c562,563%0a%3c 	* BUG: fix another memory leak problem when an internal population is exposed%0a%3c 	* NEW: improve the efficiency of dynamic type finding of population and %0a---%0a> * BUG: fix another memory leak problem when an internal population is exposed%0a> * NEW: improve the efficiency of dynamic type finding of population and %0a565c566%0a%3c 	* NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a---%0a> * NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a568,573c569,574%0a%3c 	* NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a%3c 	* NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a%3c 	* DOC: add simuPOP coding convension to simuPOP reference manual%0a%3c 	* NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a%3c 	* NEW: give correct prompt for pause operator regarding exported population name%0a%3c 	* BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a---%0a> * NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a> * NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a> * DOC: add simuPOP coding convension to simuPOP reference manual%0a> * NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a> * NEW: give correct prompt for pause operator regarding exported population name%0a> * BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a577,578c578,579%0a%3c !! Version 0.6.10 (Rev90) - Dec, 20th, 2005%0a%3c 	* NEW: add recCount(loc) and recCount() to recombinator to track%0a---%0a> !!version 0.6.10 (Rev90) - Dec, 20th, 2005%0a> * NEW: add recCount(loc) and recCount() to recombinator to track%0a580c581%0a%3c 	* NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a---%0a> * NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a582,583c583,584%0a%3c 	* NEW: add atPloidy=[0] to pointMutator.%0a%3c 	* CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a---%0a> * NEW: add atPloidy=[0] to pointMutator.%0a> * CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a585c586%0a%3c 	* NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a---%0a> * NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a587,589c588,590%0a%3c 	* NEW: convert test_mutator.py to unittest framework.%0a%3c 	* NEW: add DBG_DEVEL for developer-level debug information.%0a%3c 	* CHG: Make adjustment to how genotype structure is accessed from individual and %0a---%0a> * TST: convert test_mutator.py to unittest framework.%0a> * NEW: add DBG_DEVEL for developer-level debug information.%0a> * CHG: Make adjustment to how genotype structure is accessed from individual and %0a592,594c593,595%0a%3c 	* BUG: fix a tiny bug about optimization mode reporting%0a%3c 	* NEW: test_population is better now, but still way to go.%0a%3c 	* CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a---%0a> * BUG: fix a tiny bug about optimization mode reporting%0a> * TST: test_population is better now, but still way to go.%0a> * CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a598,605c599,606%0a%3c 	* NEW: add more info to saved config file. (Add a command  line script)%0a%3c 	* CHG: simuOpt does not load wx automatically when --noDialog is used.%0a%3c 	* BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a%3c 	* BUG: fix a memory leak problem with PyObject->double conversion.%0a%3c 	* CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a%3c %0a%3c !! Version 0.6.9 (Rev71) - Nov, 19th,  2005%0a%3c 	* add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a---%0a> * NEW: add more info to saved config file. (Add a command  line script)%0a> * CHG: simuOpt does not load wx automatically when --noDialog is used.%0a> * BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a> * BUG: fix a memory leak problem with PyObject->double con!!version.%0a> * CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a> %0a> !!version 0.6.9 (Rev71) - Nov, 19th,  2005%0a> * add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a607,608c608,609%0a%3c 	* start to convert all test cases to PyUnit. This means better test cases and more%0a%3c     thorough testing. I expect that code 0.7.0 is a version with much less bugs due to%0a---%0a> * start to convert all test cases to PyUnit. This means better test cases and more%0a>     thorough testing. I expect that code 0.7.0 is a !!version with much less bugs due to%0a610,614c611,615%0a%3c 	* fix a bug in initializer (parameter proportion)%0a%3c 	* fix a bug in recombinator concerning direct chrom copy.%0a%3c 	* remove autoconf, Makefile.icc stuff to avoid confusion.%0a%3c 	* fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a%3c 	* add subversion  revision number to doc and binary releases for%0a---%0a> * fix a bug in initializer (parameter proportion)%0a> * fix a bug in recombinator concerning direct chrom copy.%0a> * remove autoconf, Makefile.icc stuff to avoid confusion.%0a> * fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a> * add sub!!version  revision number to doc and binary releases for%0a616c617%0a%3c 	* fix windows binary import problem caused by mingw/msvcrt. Details please see %0a---%0a> * fix windows binary import problem caused by mingw/msvcrt. Details please see %0a618c619%0a%3c 	* fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a---%0a> * fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a620,622c621,623%0a%3c 	* add parameter --resampleOnly and --reAnalyzeOnly%0a%3c 	* remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a%3c 	* add simuViewPop.py (module and command) that can load and view popularion%0a---%0a> * add parameter --resampleOnly and --reAnalyzeOnly%0a> * remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a> * add simuViewPop.py (module and command) that can load and view popularion%0a625,631c626,632%0a%3c !! Version 0.6.8 - Sep 21st, 2005%0a%3c 	* fix a reporting bug in simuCDCV.py%0a%3c 	* support sex chromosome and sex chromosome related mating, recombination issues.%0a%3c       -- sexChrom() in population::population(), %0a%3c       -- stop recombination between XY of male individual%0a%3c       -- determine sex in random mating by sex chromosome%0a%3c 	* add parameters atPloidy, sex to initializers. Now, you can %0a---%0a> !!version 0.6.8 - Sep 21st, 2005%0a> * fix a reporting bug in simuCDCV.py%0a> * support sex chromosome and sex chromosome related mating, recombination issues.%0a>     *- sexChrom() in population::population(), %0a>     *- stop recombination between XY of male individual%0a>     *- determine sex in random mating by sex chromosome%0a> * add parameters atPloidy, sex to initializers. Now, you can %0a634c635%0a%3c 	* add support for sex-specific recombination rate. (parameter maleIntensity,%0a---%0a> * add support for sex-specific recombination rate. (parameter maleIntensity,%0a636,641c637,642%0a%3c 	* modify some features of simuComplexDisease.py%0a%3c 	* release 0.6.8 and set up daily snapshots %0a%3c %0a%3c !! Version 0.6.7 - Aug, 1st, 2005%0a%3c 	* Add help() infor for the function version of operators and member functions.%0a%3c 	* use Walker's alias algorithm for weighted sampling. Random mating with %0a---%0a> * modify some features of simuComplexDisease.py%0a> * release 0.6.8 and set up daily snapshots %0a> %0a> !!version 0.6.7 - Aug, 1st, 2005%0a> * Add help() infor for the function !!version of operators and member functions.%0a> * use Walker's alias algorithm for weighted sampling. Random mating with %0a645,651c646,652%0a%3c 	* add compiler info to Welcome message. (to see if it matches that of Python.)%0a%3c 	* change the use of logfile in simuCDCV.py %0a%3c 	* fix a bug in operator InitByFreq.%0a%3c %0a%3c !! Version 0.6.6 - various GUI / wxPython improvements. Not released.%0a%3c 	* add wxGetParam. Will be used when wxPython is available.%0a%3c 	* add wxPython version of listVars. Much better than the text version %0a---%0a> * add compiler info to Welcome message. (to see if it matches that of Python.)%0a> * change the use of logfile in simuCDCV.py %0a> * fix a bug in operator InitByFreq.%0a> %0a> !!version 0.6.6 - various GUI / wxPython improvements. Not released.%0a> * add wxGetParam. Will be used when wxPython is available.%0a> * add wxPython !!version of listVars. Much better than the text !!version %0a653,658c654,659%0a%3c 	* add some demographic functions in simuUtil.py%0a%3c 	* use grid for tkinter box%0a%3c 	* add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a%3c 	* find an uncaptured out of memory exception.%0a%3c 	* simuCDCV.py is better, with log file.%0a%3c 	* stop using global variable gen. Add gen() function to individual population%0a---%0a> * add some demographic functions in simuUtil.py%0a> * use grid for tkinter box%0a> * add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a> * find an uncaptured out of memory exception.%0a> * simuCDCV.py is better, with log file.%0a> * stop using global variable gen. Add gen() function to individual population%0a661c662%0a%3c 	* Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a---%0a> * Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a663,670c664,671%0a%3c 	* Add tooltip to the wxPython version of getParam.%0a%3c %0a%3c !! Version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a%3c 	* separate user's guide and reference manual%0a%3c 	* streamline getParam, usage, help etc.%0a%3c 	* add scripts folder for common simupop templates%0a%3c 	* add quiet option to simuPOP to suppress initial input%0a%3c 	* add tk support for easy inputing of variables. This is %0a---%0a> * Add tooltip to the wxPython !!version of getParam.%0a> %0a> !!version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a> * separate user's guide and reference manual%0a> * streamline getParam, usage, help etc.%0a> * add scripts folder for common simupop templates%0a> * add quiet option to simuPOP to suppress initial input%0a> * add tk support for easy inputing of variables. This is %0a672c673%0a%3c 	* fix a bug in saving shared variables. Exam saved format. Full backward%0a---%0a> * fix a bug in saving shared variables. Exam saved format. Full backward%0a674,675c675,676%0a%3c 	* simuComplexDisease.py. It uses almost all features of simuPOP%0a%3c 	* remove headers support for object. They are not very useful and %0a---%0a> * simuComplexDisease.py. It uses almost all features of simuPOP%0a> * remove headers support for object. They are not very useful and %0a678,679c679,680%0a%3c !! Version 0.6.4 - efficiency and usability. Not released%0a%3c 	* savePopulation saves local variables as well. This is used to save special info like %0a---%0a> !!version 0.6.4 - efficiency and usability. Not released%0a> * savePopulation saves local variables as well. This is used to save special info like %0a681,682c682,683%0a%3c 	* Label save population with max allowed allele number.%0a%3c 	* merge some parameters through python code. Now, parameters like rate%0a---%0a> * Label save population with max allowed allele number.%0a> * merge some parameters through python code. Now, parameters like rate%0a684,687c685,688%0a%3c 	* caseControlSample can takes array cases/controls parameters.%0a%3c 	* optimized genoStructure access, fix a bug about transferring the structure%0a%3c 	* add LoadRandFam ( not easy :-)%0a%3c 	* add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a---%0a> * caseControlSample can takes array cases/controls parameters.%0a> * optimized genoStructure access, fix a bug about transferring the structure%0a> * add LoadRandFam ( not easy :-)%0a> * add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a689,696c690,697%0a%3c 	* more efficient handling of ancestral pops%0a%3c %0a%3c !! Version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a%3c 	* add simulator::getPopulation get a copy of population%0a%3c 	* add simuOpt to control simuPOP behavior, hide other modules%0a%3c 	* add pointMutator%0a%3c 	* change the meaning of rate in recombinator, add parameter intensity%0a%3c 	* IMPORTANT: population can contain multiple generations. %0a---%0a> * more efficient handling of ancestral pops%0a> %0a> !!version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a> * add simulator::getPopulation get a copy of population%0a> * add simuOpt to control simuPOP behavior, hide other modules%0a> * add pointMutator%0a> * change the meaning of rate in recombinator, add parameter intensity%0a> * IMPORTANT: population can contain multiple generations. %0a700,703c701,704%0a%3c 	* add SavePopulations and LoadPopulations function.%0a%3c 	* add stat(homoFreq and expHetero)%0a%3c 	* fix a small bug with end %3c 0 and step > 1%0a%3c 	* add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a---%0a> * add SavePopulations and LoadPopulations function.%0a> * add stat(homoFreq and expHetero)%0a> * fix a small bug with end %3c 0 and step > 1%0a> * add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a705,737c706,738%0a%3c 	* make duringMating oeprators re-order automatically%0a%3c 	* add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a%3c 	* add affected sibpair sampling scheme%0a%3c 	* export to linkage format (affected sibpair samples)%0a%3c 	* export to randfam format%0a%3c 	* test parentsTagger, successfully track pedigree info   %0a%3c %0a%3c !! Version 0.6.2 - better usage of vars  Mar, 23, 2005%0a%3c 	* variables are now population associated. (pop.evaluate(...)%0a%3c 	* add quantitative trait and penetrance support%0a%3c 	* add dryrun parameter to apply and evolve%0a%3c 	* dvars() function. (Automatic dictionary wrapper class)%0a%3c 	* add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a%3c 	* varPlotter becomes an operator.%0a%3c 	* add D, D' and r2 measures%0a%3c 	* add newSubPopSizeFunc option to Mating schemes%0a%3c 	* change haploFreq to count all haplotypes.%0a%3c 	* add multi-allele Fst, LD etc. (average)%0a%3c 	* fixes all memory leak and reference count problems %0a%3c 	* save/load auto format according to file extension.%0a%3c 	* fix a small bug of unclosed files.%0a%3c 	* finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a%3c 	* fix two bugs in AvgLD calculation and in recombinator.%0a%3c %0a%3c !! Version 0.6.1	* usability and real applications Feb, 12, 2005%0a%3c 	* add simuPOP_la library for long alleles.%0a%3c 	* add exposePop option to pyEval (better pure-python operator support)%0a%3c 	* better treatment for carray. (fix a bug)%0a%3c 	* more statistics: Fst, Rst, H_est, H_obs etc%0a%3c 	* read/write, FSTAT format%0a%3c 	* use simple string instead of list to store statements.%0a%3c 	* merge alleleCounter and popStat since alleleCounter may depend on popStat%0a%3c 	* add operator pause for presentation purpose%0a---%0a> * make duringMating oeprators re-order automatically%0a> * add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a> * add affected sibpair sampling scheme%0a> * export to linkage format (affected sibpair samples)%0a> * export to randfam format%0a> * test parentsTagger, successfully track pedigree info   %0a> %0a> !!version 0.6.2 - better usage of vars  Mar, 23, 2005%0a> * variables are now population associated. (pop.evaluate(...)%0a> * add quantitative trait and penetrance support%0a> * add dryrun parameter to apply and evolve%0a> * dvars() function. (Automatic dictionary wrapper class)%0a> * add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a> * varPlotter becomes an operator.%0a> * add D, D' and r2 measures%0a> * add newSubPopSizeFunc option to Mating schemes%0a> * change haploFreq to count all haplotypes.%0a> * add multi-allele Fst, LD etc. (average)%0a> * fixes all memory leak and reference count problems %0a> * save/load auto format according to file extension.%0a> * fix a small bug of unclosed files.%0a> * finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a> * fix two bugs in AvgLD calculation and in recombinator.%0a> %0a> !!version 0.6.1* usability and real applications Feb, 12, 2005%0a> * add simuPOP_la library for long alleles.%0a> * add exposePop option to pyEval (better pure-python operator support)%0a> * better treatment for carray. (fix a bug)%0a> * more statistics: Fst, Rst, H_est, H_obs etc%0a> * read/write, FSTAT format%0a> * use simple string instead of list to store statements.%0a> * merge alleleCounter and popStat since alleleCounter may depend on popStat%0a> * add operator pause for presentation purpose%0a739,764c740,765%0a%3c 	* Genomic control (use R/gap package, simple subpop vs subpop version)%0a%3c %0a%3c !! Version 0.6.0 - validation and distribution, Jan, 1st, 2005%0a%3c 	* bug fixes%0a%3c 	* better distribution process and binaries.%0a%3c 	* remove internal language and use Python expression only%0a%3c 	* more mutation models%0a%3c 	* some hybrid operators added%0a%3c 	* simuPOP website%0a%3c %0a%3c !! Version 0.5.9 - performance boost, dynamic population size  Dec. 12th, 2004%0a%3c 	* re-write Bernulli-trials and gain 10x performance boost%0a%3c 	* dynamic population size through newSubPopSizeExpr="".%0a%3c 	* re-write migration to allow migration between subset of subpopulations%0a%3c 	* ability to create new subpopulation through migration%0a%3c 	* tagging x-y location.%0a%3c 	* visualize migration%0a%3c %0a%3c !! Version 0.5.8 - selection Dec. 5nd, 2004%0a%3c 	* add selection. %0a%3c 	* better matings.%0a%3c 	* bug fixes%0a%3c 	* migration and selection examples%0a%3c %0a%3c !! Version 0.5.7 -  serialization Nov. 24, 2004%0a%3c 	* add serialization of simulator. Now I can save %0a---%0a> * Genomic control (use R/gap package, simple subpop vs subpop !!version)%0a> %0a> Version 0.6.0 - validation and distribution, Jan, 1st, 2005%0a> * bug fixes%0a> * better distribution process and binaries.%0a> * remove internal language and use Python expression only%0a> * more mutation models%0a> * some hybrid operators added%0a> * simuPOP website%0a> %0a> Version 0.5.9 - performance boost, dynamic population size  Dec. 12th, 2004%0a> * re-write Bernulli-trials and gain 10x performance boost%0a> * dynamic population size through newSubPopSizeExpr="".%0a> * re-write migration to allow migration between subset of subpopulations%0a> * ability to create new subpopulation through migration%0a> * tagging x-y location.%0a> * visualize migration%0a> %0a> Version 0.5.8 - selection Dec. 5nd, 2004%0a> * add selection. %0a> * better matings.%0a> * bug fixes%0a> * migration and selection examples%0a> %0a> !!version 0.5.7 -  serialization Nov. 24, 2004%0a> * add serialization of simulator. Now I can save %0a766c767%0a%3c 	* text, xml and binary formats are supported. XML support%0a---%0a> * text, xml and binary formats are supported. XML support%0a770,772c771,773%0a%3c !! Version 0.5.6 -  expression. Nov. 19, 2004%0a%3c 	* better shared variable interface %0a%3c 	* (IMPORTANT!) implement a C/Matlab like language to calculate%0a---%0a> !!version 0.5.6 -  expression. Nov. 19, 2004%0a> * better shared variable interface %0a> * (IMPORTANT!) implement a C/Matlab like language to calculate%0a775,776c776,777%0a%3c 	* add more functions (abs etc) to inline expression)%0a%3c 	* fixed some bugs.%0a---%0a> * add more functions (abs etc) to inline expression)%0a> * fixed some bugs.%0a778,779c779,780%0a%3c !! Version 0.5.5, - more clean up,  more examples. Nov. 10, 2004%0a%3c 	* clean the code. Use unsigned long when applicable. Elimilate all %0a---%0a> Version 0.5.5, - more clean up,  more examples. Nov. 10, 2004%0a> * clean the code. Use unsigned long when applicable. Elimilate all %0a781,785c782,786%0a%3c 	* add some more test cases to cover all user features.%0a%3c 	* Some real examples%0a%3c %0a%3c !! Version 0.5.4, Nov. 7, 2004 - clean the code. still working on the code base%0a%3c 	* return default value for SharedVariable::getVar(name, default)%0a---%0a> * add some more test cases to cover all user features.%0a> * Some real examples%0a> %0a> Version 0.5.4, Nov. 7, 2004 - clean the code. still working on the code base%0a> * return default value for SharedVariable::getVar(name, default)%0a787,788c788,789%0a%3c 	* shared variables can take string, double, array and dictionary.%0a%3c 	* varParser can now take all kind of shared variables, using%0a---%0a> * shared variables can take string, double, array and dictionary.%0a> * varParser can now take all kind of shared variables, using%0a790,791c791,792%0a%3c 	* DataProvider is separated from Operator and is put in utility.h%0a%3c 	* DataSource is separated from Visualizer so that other operators%0a---%0a> * DataProvider is separated from Operator and is put in utility.h%0a> * DataSource is separated from Visualizer so that other operators%0a793c794%0a%3c 	* VarDataSource is provided so Visualizer etc can visaulize/display%0a---%0a> * VarDataSource is provided so Visualizer etc can visaulize/display%0a796,798c797,799%0a%3c !! Version 0.5.3 Oct 10, 2004 -- some interesting new features%0a%3c 	* shared variables (operators can store and retrieve variables by name)%0a%3c 	* better written outputHelper. Now can print shared variables.%0a---%0a> Version 0.5.3 Oct 10, 2004 -- some interesting new features%0a> * shared variables (operators can store and retrieve variables by name)%0a> * better written outputHelper. Now can print shared variables.%0a800,803c801,804%0a%3c 	* add "memory file" to improve efficiency under certain circumstances.%0a%3c 	* overhaul of operator's filename parser (can take shared var now)%0a%3c 	* provide binary distribution for linux, mac and solaris.%0a%3c 	* create a batch file to build win32 binary. (Much easier to use)%0a---%0a> * add "memory file" to improve efficiency under certain circumstances.%0a> * overhaul of operator's filename parser (can take shared var now)%0a> * provide binary distribution for linux, mac and solaris.%0a> * create a batch file to build win32 binary. (Much easier to use)%0a806,809c807,810%0a%3c !! Version 0.5.2  -- windows port, smaller distribution, better help()%0a%3c 	* help(class/function) now uses doxygen generated document.%0a%3c 	* distribute tools like .emacs.python.el and swig.xsl%0a%3c 	* remove all unnecessary files from boost and gsl distribution%0a---%0a> Version 0.5.2*- windows port, smaller distribution, better help()%0a> * help(class/function) now uses doxygen generated document.%0a> * distribute tools like .emacs.python.el and swig.xsl%0a> * remove all unnecessary files from boost and gsl distribution%0a811c812%0a%3c 	* ported to windows. see INSTALL.win32 for details %0a---%0a> * ported to windows. see INSTALL.win32 for details %0a813c814%0a%3c 	* make DEBUG the default library (optimized will be used less frequently.)%0a---%0a> * make DEBUG the default library (optimized will be used less frequently.)%0a815,818c816,819%0a%3c !! Version 0.5.1%0a%3c 	* better suport of GSL. add setRNG()%0a%3c 	* better debug debug(code) instead of debug(level)%0a%3c 	* better macOS support%0a---%0a> Version 0.5.1%0a> * better suport of GSL. add setRNG()%0a> * better debug debug(code) instead of debug(level)%0a> * better macOS support%0a820,824c821,825%0a%3c !! Version 0.5%0a%3c 	* a working distribution with lots of test cases%0a%3c 	* ported to macOS, solaris%0a%3c %0a%3c !! Version 0.1 Friday 18, June 2004%0a---%0a> Version 0.5%0a> * a working distribution with lots of test cases%0a> * ported to macOS, solaris%0a> %0a> Version 0.1 Friday 18, June 2004%0a826,834c827,835%0a%3c 	* Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a%3c 	* change README and make it doxygen mainpage%0a%3c 	* create todo list and many other documents%0a%3c 	* implement exception classes with error message sent to Python%0a%3c 	* change most arrays to vector so that they can be accessed through python%0a%3c 	* find the right way to do keyword argument from python. Very useful.%0a%3c 	* Population basic structure is finished with basic operations.%0a%3c 	* Operator start-every-end-at is implemented.%0a%3c 	* genetic drifting sample program went fine.%0a---%0a> * Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a> * change README and make it doxygen mainpage%0a> * create todo list and many other documents%0a> * implement exception classes with error message sent to Python%0a> * change most arrays to vector so that they can be accessed through python%0a> * find the right way to do keyword argument from python. Very useful.%0a> * Population basic structure is finished with basic operations.%0a> * Operator start-every-end-at is implemented.%0a> * genetic drifting sample program went fine.%0a
host:1232293932=127.0.0.1
author:1232292363=
diff:1232292363:1232292122:=3,7c3,7%0a%3c !!version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a%3c * NEW: Allow populations in a simulator to have different genotype structure. %0a%3c * CHG: A simulator can no longer access genotypic structure information.%0a%3c * NEW: Add simulator::add to add new populations to a simulator.%0a%3c * CHG: Remove simulator::addInfoField and other functions because they can be%0a---%0a> version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a>   - NEW: Allow populations in a simulator to have different genotype structure. %0a>   - CHG: A simulator can no longer access genotypic structure information.%0a>   - NEW: Add simulator::add to add new populations to a simulator.%0a>   - CHG: Remove simulator::addInfoField and other functions because they can be%0a9c9%0a%3c * NEW: Allow the use of single form parameter in population::removeSubPops,%0a---%0a>   - NEW: Allow the use of single form parameter in population::removeSubPops,%0a11,16c11,16%0a%3c * BUG: Fix a bug in adding locus to a population without any locus.%0a%3c %0a%3c !!version 0.9.1 - (Rev 2330) Jan 13, 2009%0a%3c * NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a%3c * CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a%3c * CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a---%0a>   - BUG: Fix a bug in adding locus to a population without any locus.%0a> %0a> version 0.9.1 - (Rev 2330) Jan 13, 2009%0a>   - NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a>   - CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a>   - CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a18c18%0a%3c * CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a---%0a>   - CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a20,21c20,21%0a%3c * BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a%3c * CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a---%0a>   - BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a>   - CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a23,25c23,25%0a%3c * CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a%3c * CHG: Rename mating scheme binomialSelection to randomSelection.%0a%3c * CHG: Merge parameters convProb, convMode and convParam to convMode in%0a---%0a>   - CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a>   - CHG: Rename mating scheme binomialSelection to randomSelection.%0a>   - CHG: Merge parameters convProb, convMode and convParam to convMode in%0a27,30c27,30%0a%3c * BUG: Fix option shuffleOffspring in heteroMating().%0a%3c * CHG: Change the default output of parentsTagger when only one parent is passed.%0a%3c * CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a%3c * CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a---%0a>   - BUG: Fix option shuffleOffspring in heteroMating().%0a>   - CHG: Change the default output of parentsTagger when only one parent is passed.%0a>   - CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a>   - CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a32c32%0a%3c * NEW: Allow a demographic function to return a number if there is only one%0a---%0a>   - NEW: Allow a demographic function to return a number if there is only one%0a34c34%0a%3c * NEW: Allow pedigreeMating to set sex, affection status and some information%0a---%0a>   - NEW: Allow pedigreeMating to set sex, affection status and some information%0a36,37c36,37%0a%3c * NEW: Allow random parent(s) choosers to set name of information field fitness.%0a%3c * CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a---%0a>   - NEW: Allow random parent(s) choosers to set name of information field fitness.%0a>   - CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a39c39%0a%3c * NEW: Allow replicate numbers in a simulator to refer to the last several%0a---%0a>   - NEW: Allow replicate numbers in a simulator to refer to the last several%0a41c41%0a%3c * CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a---%0a>   - CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a43,44c43,44%0a%3c * NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a%3c * NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a---%0a>   - NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a>   - NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a46,57c46,57%0a%3c * NEW: Support other device types in varPlotter::saveAs.%0a%3c * NEW: dumper now supports virtual subpopulations.%0a%3c %0a%3c !!version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a%3c * CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a%3c * CHG: migrator now uses an information field "migrate_to".%0a%3c * CHG: Add function population::extract.%0a%3c * CHG: Remove parameter ancGen from population::clone().%0a%3c * NEW: Dump() also display information fields.%0a%3c * NEW: Expose population::pushAndDiscard(pop) as population::push().%0a%3c * NEW: Add parameter subPops to all operators.%0a%3c * CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a---%0a>   - NEW: Support other device types in varPlotter::saveAs.%0a>   - NEW: dumper now supports virtual subpopulations.%0a> %0a> version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a>   - CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a>   - CHG: migrator now uses an information field "migrate_to".%0a>   - CHG: Add function population::extract.%0a>   - CHG: Remove parameter ancGen from population::clone().%0a>   - NEW: Dump() also display information fields.%0a>   - NEW: Expose population::pushAndDiscard(pop) as population::push().%0a>   - NEW: Add parameter subPops to all operators.%0a>   - CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a60c60%0a%3c * CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a---%0a>   - CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a62,67c62,67%0a%3c * CHG: Remove population::removeEmptySubPops().%0a%3c * NEW: Add support for subpopulation names.%0a%3c * CHG: Remove intializer, spread and pyInit operators.%0a%3c * CHG: Add parameter initSex to initByFreq and initByValue.%0a%3c * NEW: Initializers now support virtual subpopulations.%0a%3c * CHG: Recombiantor no longer supports recombination by sex, %0a---%0a>   - CHG: Remove population::removeEmptySubPops().%0a>   - NEW: Add support for subpopulation names.%0a>   - CHG: Remove intializer, spread and pyInit operators.%0a>   - CHG: Add parameter initSex to initByFreq and initByValue.%0a>   - NEW: Initializers now support virtual subpopulations.%0a>   - CHG: Recombiantor no longer supports recombination by sex, %0a69,73c69,73%0a%3c * CHG: Recombinator now supports different types of chromosomes.%0a%3c * NEW: Add ops parameter to mating schemes.%0a%3c * NEW: add mitochondrialGenoTransmitter.%0a%3c * NEW: add population::updateInfoFieldsFrom.%0a%3c * NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a---%0a>   - CHG: Recombinator now supports different types of chromosomes.%0a>   - NEW: Add ops parameter to mating schemes.%0a>   - NEW: add mitochondrialGenoTransmitter.%0a>   - NEW: add population::updateInfoFieldsFrom.%0a>   - NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a76,83c76,83%0a%3c !!version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a%3c * DOC: Adjust reference output for simuPOP classes.%0a%3c * CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a%3c * CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a%3c * CHG: Remove the maxAllele parameter of population.%0a%3c * CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a%3c * CHG: Remove read support for XML and Binary formats.%0a%3c * CHG: Completely change the way sex chromosomes are handled, and add%0a---%0a> version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a>   - DOC: Adjust reference output for simuPOP classes.%0a>   - CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a>   - CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a>   - CHG: Remove the maxAllele parameter of population.%0a>   - CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a>   - CHG: Remove read support for XML and Binary formats.%0a>   - CHG: Completely change the way sex chromosomes are handled, and add%0a85,90c85,90%0a%3c * CHG: Rename class vsp to vspID.%0a%3c * CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a%3c * CHG: Change parameter of population::virtualSubPopName().%0a%3c * CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a%3c * CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a%3c * CHG: Make pedigree a subclass of population and move population::locateRelatives%0a---%0a>   - CHG: Rename class vsp to vspID.%0a>   - CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a>   - CHG: Change parameter of population::virtualSubPopName().%0a>   - CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a>   - CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a>   - CHG: Make pedigree a subclass of population and move population::locateRelatives%0a92c92%0a%3c * CHG: Temporarily disable all pedigree related features such as pedigree parent%0a---%0a>   - CHG: Temporarily disable all pedigree related features such as pedigree parent%0a94,96c94,96%0a%3c * CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a%3c * CHG: Replace population::mergePopulation by population::addIndFromPop.%0a%3c * CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a---%0a>   - CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a>   - CHG: Replace population::mergePopulation by population::addIndFromPop.%0a>   - CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a98,109c98,109%0a%3c * CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a%3c * CHG: Adjust interface to population::removeLoci.%0a%3c * CHG: Adjust interface to population::removeSubPops.%0a%3c * NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a%3c * CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a%3c * NEW: Add simuProgress class to simuUtl.%0a%3c * CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a%3c * NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a%3c * CHG: Remove operator terminator and continueIf.%0a%3c * CHG: Reset file format number. No longer support previous file formats.%0a%3c * NEW: add simulator::populations().%0a%3c * NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a---%0a>   - CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a>   - CHG: Adjust interface to population::removeLoci.%0a>   - CHG: Adjust interface to population::removeSubPops.%0a>   - NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a>   - CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a>   - NEW: Add simuProgress class to simuUtl.%0a>   - CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a>   - NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a>   - CHG: Remove operator terminator and continueIf.%0a>   - CHG: Reset file format number. No longer support previous file formats.%0a>   - NEW: add simulator::populations().%0a>   - NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a111c111%0a%3c * CHG: Replace simulator::getPopulation by simulator::population and%0a---%0a>   - CHG: Replace simulator::getPopulation by simulator::population and%0a114,120c114,120%0a%3c !!version 0.8.8 - (Rev 1787) Oct 24, 2008%0a%3c * CHG: Remove the replicate group feature.%0a%3c * NEW: Allow mapSelector to work for all ploidy.%0a%3c * DOC: Add keyword applicability to indicate applicability of operators.%0a%3c * DOC: Document applicability of mating schemes.%0a%3c * DOC: Fix bibtex references of user's guide and reference manual.%0a%3c * CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a---%0a> version 0.8.8 - (Rev 1787) Oct 24, 2008%0a>   - CHG: Remove the replicate group feature.%0a>   - NEW: Allow mapSelector to work for all ploidy.%0a>   - DOC: Add keyword applicability to indicate applicability of operators.%0a>   - DOC: Document applicability of mating schemes.%0a>   - DOC: Fix bibtex references of user's guide and reference manual.%0a>   - CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a122c122%0a%3c * NEW: add individual::genotype (previously called arrGenotype) and%0a---%0a>   - NEW: add individual::genotype (previously called arrGenotype) and%0a124c124%0a%3c * CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a---%0a>   - CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a126c126%0a%3c * CHG: population arrGenotype are marked obsolete and will be removed%0a---%0a>   - CHG: population arrGenotype are marked obsolete and will be removed%0a128,129c128,129%0a%3c * NEW: add population::genotype and population::setGenoytpe.%0a%3c * BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a---%0a>   - NEW: add population::genotype and population::setGenoytpe.%0a>   - BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a131,135c131,135%0a%3c * NEW: Support Python 2.6.%0a%3c %0a%3c !!version 0.8.7 - (Rev 1755) Aug 29, 2008%0a%3c * NEW: allow the use of a list to specify a virtual subpopulation.%0a%3c * NEW: change the return type of allele() so that no boolean value (True or False)%0a---%0a>   - NEW: Support Python 2.6.%0a> %0a> version 0.8.7 - (Rev 1755) Aug 29, 2008%0a>   - NEW: allow the use of a list to specify a virtual subpopulation.%0a>   - NEW: change the return type of allele() so that no boolean value (True or False)%0a137,139c137,139%0a%3c * DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a%3c * BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a%3c * BUG: Fix a bug when calculating expected heterozygosity with increased%0a---%0a>   - DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a>   - BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a>   - BUG: Fix a bug when calculating expected heterozygosity with increased%0a141c141%0a%3c * BUG: Fix a bug in controlled random mating where number of affected alleles%0a---%0a>   - BUG: Fix a bug in controlled random mating where number of affected alleles%0a143c143%0a%3c * CHG: Only write (compressed if possible) in text format. simuPOP can still%0a---%0a>   - CHG: Only write (compressed if possible) in text format. simuPOP can still%0a145c145%0a%3c * BUG: Fix a bug that is related to the calculation of Fst in populations with%0a---%0a>   - BUG: Fix a bug that is related to the calculation of Fst in populations with%0a147,151c147,151%0a%3c * BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a%3c * BUG: Fix a bug that prevents simuPOP from compressing population files.%0a%3c * NEW: Make boost 1.36.0 the default built-in boost !!version.%0a%3c * BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a%3c * NEW: Stop distributing zlib1.dll by building zlib from source under%0a---%0a>   - BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a>   - BUG: Fix a bug that prevents simuPOP from compressing population files.%0a>   - NEW: Make boost 1.36.0 the default built-in boost version.%0a>   - BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a>   - NEW: Stop distributing zlib1.dll by building zlib from source under%0a154,156c154,156%0a%3c !!version 0.8.6 - (Rev 1666) Jun 20, 2008%0a%3c * NEW: Polish command line arguments output in a configuration file.%0a%3c * NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a---%0a> version 0.8.6 - (Rev 1666) Jun 20, 2008%0a>   - NEW: Polish command line arguments output in a configuration file.%0a>   - NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a158,164c158,164%0a%3c * BUG: Fix a minor simuOpt::saveConfigFile bug%0a%3c * BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a%3c * BUG: fix a bug that is related to reference count of loaded lists.%0a%3c * CHG: allow sample size > population size (give a warning rather than error)%0a%3c * CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a%3c * NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a%3c * NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a---%0a>   - BUG: Fix a minor simuOpt::saveConfigFile bug%0a>   - BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a>   - BUG: fix a bug that is related to reference count of loaded lists.%0a>   - CHG: allow sample size > population size (give a warning rather than error)%0a>   - CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a>   - NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a>   - NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a166,171c166,171%0a%3c * CHG: polish tkInter and wxPython parameter input dialog.%0a%3c * CHG: Remove parameter order from information field related functions.%0a%3c * BUG: Fix a information field + migration bug.%0a%3c * NEW: add operation resizeSubPops.%0a%3c * BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a%3c * NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a---%0a>   - CHG: polish tkInter and wxPython parameter input dialog.%0a>   - CHG: Remove parameter order from information field related functions.%0a>   - BUG: Fix a information field + migration bug.%0a>   - NEW: add operation resizeSubPops.%0a>   - BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a>   - NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a173c173%0a%3c * BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a---%0a>   - BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a175c175%0a%3c * CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a---%0a>   - CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a177c177%0a%3c * NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a---%0a>   - NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a179c179%0a%3c * NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a---%0a>   - NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a182,184c182,184%0a%3c * NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a%3c * NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a%3c * NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a---%0a>   - NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a>   - NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a>   - NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a188,190c188,190%0a%3c !!version 0.8.5 - (Rev 1488) Apr 3, 2008%0a%3c * BUG: fix a bug that prevents a cloned simulator from evolving again.%0a%3c * NEW: add parameter numMale and sexMode to all offspring generator and%0a---%0a> version 0.8.5 - (Rev 1488) Apr 3, 2008%0a>   - BUG: fix a bug that prevents a cloned simulator from evolving again.%0a>   - NEW: add parameter numMale and sexMode to all offspring generator and%0a192,194c192,194%0a%3c * NEW: add gene con!!version to recombinator, using parameter convMode, convProb and convParam.%0a%3c * NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a%3c * NEW: add random parent chooser without replacement and/or with alpha individuals,%0a---%0a>   - NEW: add gene conversion to recombinator, using parameter convMode, convProb and convParam.%0a>   - NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a>   - NEW: add random parent chooser without replacement and/or with alpha individuals,%0a197c197%0a%3c * NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a---%0a>   - NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a199,206c199,206%0a%3c * CHG: make the subPop parameter of population() function obsolete.%0a%3c * CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a%3c %0a%3c %0a%3c !!version 0.8.4 - (Rev 1456) Mar 8, 2008%0a%3c * NEW: add support for other posix systems like HP-UX%0a%3c * NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a%3c * NEW: add two operators infoEval and infoExec that can be used to manipulate%0a---%0a>   - CHG: make the subPop parameter of population() function obsolete.%0a>   - CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a> %0a> %0a> version 0.8.4 - (Rev 1456) Mar 8, 2008%0a>   - NEW: add support for other posix systems like HP-UX%0a>   - NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a>   - NEW: add two operators infoEval and infoExec that can be used to manipulate%0a208c208%0a%3c * NEW: operator stator popSize=True also calculates virtual subpop size using%0a---%0a>   - NEW: operator stator popSize=True also calculates virtual subpop size using%0a210,211c210,211%0a%3c * BUG: fix a bug in the re-initialization of pyParentsChooser.%0a%3c * CHG: inheritTagger will inherit the first, instead of the second, information%0a---%0a>   - BUG: fix a bug in the re-initialization of pyParentsChooser.%0a>   - CHG: inheritTagger will inherit the first, instead of the second, information%0a213c213%0a%3c * CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a---%0a>   - CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a215c215%0a%3c * NEW: allow multiple genotype in the same virtual subpopulation split by%0a---%0a>   - NEW: allow multiple genotype in the same virtual subpopulation split by%0a217,227c217,227%0a%3c * NEW: add combinedSplitter%0a%3c %0a%3c %0a%3c !!version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a%3c * NEW: allow taggers to write pedigree files%0a%3c * NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a%3c * NEW: introduce pedigreeMating to mate according to a given pedigree%0a%3c * NEW: add infoTagger, sexTagger, affectionTagger%0a%3c * NEW: add pedigree information handling functions%0a%3c * CHG: add more options to functions in hapMapUtil.py%0a%3c * CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a---%0a>   - NEW: add combinedSplitter%0a> %0a> %0a> version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a>   - NEW: allow taggers to write pedigree files%0a>   - NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a>   - NEW: introduce pedigreeMating to mate according to a given pedigree%0a>   - NEW: add infoTagger, sexTagger, affectionTagger%0a>   - NEW: add pedigree information handling functions%0a>   - CHG: add more options to functions in hapMapUtil.py%0a>   - CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a229,230c229,230%0a%3c * BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a%3c * NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a---%0a>   - BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a>   - NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a233,236c233,236%0a%3c !!version 0.8.2 - (Rev 1370) Nov 19, 2007%0a%3c * BUG: Fix saveFstat in simuUtil.py%0a%3c * NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a%3c * NEW: add heteroMating to allow allow different mating scheme used for different%0a---%0a> version 0.8.2 - (Rev 1370) Nov 19, 2007%0a>   - BUG: Fix saveFstat in simuUtil.py%0a>   - NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a>   - NEW: add heteroMating to allow allow different mating scheme used for different%0a238,245c238,245%0a%3c * NEW: add selfMating mating scheme.%0a%3c * NEW: add various parent choosers.%0a%3c * NEW: add various offspring generators.%0a%3c * NEW: add null, duplicate, info, genotype, proportion splitters%0a%3c * NEW: add splitter interface to populations.%0a%3c %0a%3c !!version 0.8.1 - (Rev 1254) Oct 05, 2007%0a%3c * NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0a---%0a>   - NEW: add selfMating mating scheme.%0a>   - NEW: add various parent choosers.%0a>   - NEW: add various offspring generators.%0a>   - NEW: add null, duplicate, info, genotype, proportion splitters%0a>   - NEW: add splitter interface to populations.%0a> %0a> version 0.8.1 - (Rev 1254) Oct 05, 2007%0a>   - NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0a247c247%0a%3c * BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a---%0a>   - BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a249c249%0a%3c * BUG: Fix the handling of binary option in command line, and handling of short %0a---%0a>   - BUG: Fix the handling of binary option in command line, and handling of short %0a251,252c251,252%0a%3c * NEW: Use a checkbox for binary options in the parameter dialogs.%0a%3c * NEW: make use of second to last inforFields passed to pyPenetrance %0a---%0a>   - NEW: Use a checkbox for binary options in the parameter dialogs.%0a>   - NEW: make use of second to last inforFields passed to pyPenetrance %0a255,257c255,257%0a%3c * BUG: Fix a few functions in hapMapUtil.py%0a%3c * BUG: stop displaying full path name in the title of the parameter dialog.%0a%3c * NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a---%0a>   - BUG: Fix a few functions in hapMapUtil.py%0a>   - BUG: stop displaying full path name in the title of the parameter dialog.%0a>   - NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a259,268c259,268%0a%3c * NEW: Some documentation improvement.%0a%3c %0a%3c %0a%3c !!version 0.8.0 - (Rev 1215) Aug 14, 2007%0a%3c * Reference manual overhaul%0a%3c * Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a%3c * NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a%3c %0a%3c !!version 0.7.11 - (Rev 1133) July 26, 2007%0a%3c * NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a---%0a>   - NEW: Some documentation improvement.%0a> %0a> %0a> version 0.8.0 - (Rev 1215) Aug 14, 2007%0a>   - Reference manual overhaul%0a>   - Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a>   - NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a> %0a> version 0.7.11 - (Rev 1133) July 26, 2007%0a>   - NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a270,274c270,274%0a%3c * NEW: add subPops parameter to intializers, working the same as subPop%0a%3c * NEW: extending pyIndOperator with handling of loci and infoFields%0a%3c * BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a%3c * BUG: fix scripts/simuViewPop.py%0a%3c * NEW: add optional option destructive=False to simulator::getPopulation, as%0a---%0a>   - NEW: add subPops parameter to intializers, working the same as subPop%0a>   - NEW: extending pyIndOperator with handling of loci and infoFields%0a>   - BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a>   - BUG: fix scripts/simuViewPop.py%0a>   - NEW: add optional option destructive=False to simulator::getPopulation, as%0a276c276%0a%3c * NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a---%0a>   - NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a278c278%0a%3c * NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a---%0a>   - NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a280c280%0a%3c * BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a---%0a>   - BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a282,283c282,283%0a%3c * NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a%3c * NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a---%0a>   - NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a>   - NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a287,296c287,296%0a%3c !!version 0.7.10 - (Rev 987) May 20, 2007%0a%3c * BUG: fix a memory leak bug with LoadPopulation%0a%3c * BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a%3c * NEW: nuclearFamilySampler operator and function%0a%3c * NEW: add MATE_UniformDistribution number of offspring type%0a%3c * BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a%3c * BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a%3c * BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a%3c * BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a%3c * NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a---%0a> version 0.7.10 - (Rev 987) May 20, 2007%0a>   - BUG: fix a memory leak bug with LoadPopulation%0a>   - BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a>   - NEW: nuclearFamilySampler operator and function%0a>   - NEW: add MATE_UniformDistribution number of offspring type%0a>   - BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a>   - BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a>   - BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a>   - BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a>   - NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a298,299c298,299%0a%3c * NEW: throw an exception when multiple selectors are applied at the same time.%0a%3c * NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a---%0a>   - NEW: throw an exception when multiple selectors are applied at the same time.%0a>   - NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a301c301%0a%3c * NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a---%0a>   - NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a303,309c303,309%0a%3c * NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a%3c * NEW: swig 1.3.32 compatibility%0a%3c * NEW: add scripts/loadHapMap.py%0a%3c * NEW: add pyTagger operator, which can be used to trace trait values.%0a%3c * NEW: update comments, in preparation for the 0.8.0 release%0a%3c * NEW: disallow change of genotypic structure of populations in a simulator.%0a%3c * NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a---%0a>   - NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a>   - NEW: swig 1.3.32 compatibility%0a>   - NEW: add scripts/loadHapMap.py%0a>   - NEW: add pyTagger operator, which can be used to trace trait values.%0a>   - NEW: update comments, in preparation for the 0.8.0 release%0a>   - NEW: disallow change of genotypic structure of populations in a simulator.%0a>   - NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a311c311%0a%3c * BUG: fix a bug when stat() tries to remove non-existings variables%0a---%0a>   - BUG: fix a bug when stat() tries to remove non-existings variables%0a315,319c315,319%0a%3c !!version 0.7.9 - (Rev 885) Apr 3, 2007%0a%3c * BUG (build): add solaris support. This OS does not have stdint.h.%0a%3c * BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a%3c * NEW: add SaveSolarFrqFile in simuUtil.py%0a%3c * NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a---%0a> version 0.7.9 - (Rev 885) Apr 3, 2007%0a>   - BUG (build): add solaris support. This OS does not have stdint.h.%0a>   - BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a>   - NEW: add SaveSolarFrqFile in simuUtil.py%0a>   - NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a321,322c321,322%0a%3c * NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a%3c * NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a---%0a>   - NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a>   - NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a324,327c324,327%0a%3c * BUG: fix a bug in the calculation of D'%0a%3c * NEW: add LD measurement delta^2%0a%3c * NEW: add LD_param parameter to have finer control over how LD is calculated%0a%3c * NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a---%0a>   - BUG: fix a bug in the calculation of D'%0a>   - NEW: add LD measurement delta^2%0a>   - NEW: add LD_param parameter to have finer control over how LD is calculated%0a>   - NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a329,348c329,348%0a%3c * CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a%3c * NEW: add association statistics (ChiSq, UC_U, CramerV)%0a%3c * BUG: fix passing of relMethod parameter of stat operator%0a%3c * CHG: NO_CONVERSION is no longer the default for rpy%0a%3c %0a%3c %0a%3c !!version 0.7.8 - (Rev 833) Mar 2, 2007%0a%3c * BUG: fix broken user interactive input%0a%3c * BUG: fix help feature of tkinter dialog%0a%3c * NEW: bundle boost 1.33.1 with source package%0a%3c * BUG (build): fix a SConstruct bug with MSVC environment variables%0a%3c * NEW: add other LD measurements to simuLDDecay.py%0a%3c * NEW: optionally add header to QTDT ped file%0a%3c * BUG: fix the combine parameter of SaveQTDT%0a%3c %0a%3c %0a%3c !!version 0.7.7 - (Rev 786) Feb 1, 2007%0a%3c *NEW (build): bring scons build system on par with python setup.py%0a%3c *NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a%3c *NEW (build): try really hard to search proper boost libraries. One usually%0a---%0a>   - CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a>   - NEW: add association statistics (ChiSq, UC_U, CramerV)%0a>   - BUG: fix passing of relMethod parameter of stat operator%0a>   - CHG: NO_CONVERSION is no longer the default for rpy%0a> %0a> %0a> version 0.7.8 - (Rev 833) Mar 2, 2007%0a>   - BUG: fix broken user interactive input%0a>   - BUG: fix help feature of tkinter dialog%0a>   - NEW: bundle boost 1.33.1 with source package%0a>   - BUG (build): fix a SConstruct bug with MSVC environment variables%0a>   - NEW: add other LD measurements to simuLDDecay.py%0a>   - NEW: optionally add header to QTDT ped file%0a>   - BUG: fix the combine parameter of SaveQTDT%0a> %0a> %0a> version 0.7.7 - (Rev 786) Feb 1, 2007%0a>   -NEW (build): bring scons build system on par with python setup.py%0a>   -NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a>   -NEW (build): try really hard to search proper boost libraries. One usually%0a350,352c350,352%0a%3c *NEW (build): prune files from source package%0a%3c *NEW: add ancestralGen to penetrance and qtrait operators%0a%3c *NEW: change pySelector and allow a second parameter gen for the fitness function%0a---%0a>   -NEW (build): prune files from source package%0a>   -NEW: add ancestralGen to penetrance and qtrait operators%0a>   -NEW: change pySelector and allow a second parameter gen for the fitness function%0a354,357c354,357%0a%3c *CHG: individual comparison does not compare information fields%0a%3c *CHG: adjust individual representation (actually output genotype)%0a%3c *BUG: fix a bug in loading some files saved in binary module from standard modules%0a%3c *BUG: fix an affected sibpair sampler bug introduced in 0.7.5%0a---%0a>   -CHG: individual comparison does not compare information fields%0a>   -CHG: adjust individual representation (actually output genotype)%0a>   -BUG: fix a bug in loading some files saved in binary module from standard modules%0a>   -BUG: fix an affected sibpair sampler bug introduced in 0.7.5%0a359,361c359,361%0a%3c *NEW: add hasInfoField() function%0a%3c *NEW: MPI module pass 00, 01, 06 test scripts%0a%3c *NEW: Only head node can print to cout%0a---%0a>   -NEW: add hasInfoField() function%0a>   -NEW: MPI module pass 00, 01, 06 test scripts%0a>   -NEW: Only head node can print to cout%0a364,376c364,376%0a%3c !!version 0.7.6 - (Rev 674) Dec 25, 2006%0a%3c *NEW: change file format for binary modules, resulting much faster save/load.%0a%3c *NEW: fix adjustGenotype (efficiency)%0a%3c *BUG: fix simulator::clone(), introduced in 0.7.5%0a%3c *NEW: disable compression under windows due to a boost bug.%0a%3c *BUG: make simuRPy works with the latest R and rpy.%0a%3c *NEW: several new chapters in the user's guide.%0a%3c %0a%3c %0a%3c !!version 0.7.5 - (Rev 576) Dec 8, 2006%0a%3c * NEW: experimental MPI modules.%0a%3c * BUG: None is treated as False now in Py_Object_As_Bool.%0a%3c * NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a---%0a> version 0.7.6 - (Rev 674) Dec 25, 2006%0a>   -NEW: change file format for binary modules, resulting much faster save/load.%0a>   -NEW: fix adjustGenotype (efficiency)%0a>   -BUG: fix simulator::clone(), introduced in 0.7.5%0a>   -NEW: disable compression under windows due to a boost bug.%0a>   -BUG: make simuRPy works with the latest R and rpy.%0a>   -NEW: several new chapters in the user's guide.%0a> %0a> %0a> version 0.7.5 - (Rev 576) Dec 8, 2006%0a>   - NEW: experimental MPI modules.%0a>   - BUG: None is treated as False now in Py_Object_As_Bool.%0a>   - NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a378c378%0a%3c * NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a---%0a>   - NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a380c380%0a%3c * NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a---%0a>   - NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a383,384c383,384%0a%3c * NEW: add the missing simulator.clone() function%0a%3c * CHG: stop embedding zlib since the source does not work under windows.%0a---%0a>   - NEW: add the missing simulator.clone() function%0a>   - CHG: stop embedding zlib since the source does not work under windows.%0a388,390c388,390%0a%3c !!version 0.7.4 - (Rev 518) Nov 5, 2006%0a%3c * BUG: fix simulator.population() function%0a%3c * NEW/CHG: add order parameter to population arr function series.%0a---%0a> version 0.7.4 - (Rev 518) Nov 5, 2006%0a>   - BUG: fix simulator.population() function%0a>   - NEW/CHG: add order parameter to population arr function series.%0a397c397%0a%3c * NEW: test/test_21_performance is added to keep track of performance%0a---%0a>   - NEW: test/test_21_performance is added to keep track of performance%0a399,400c399,400%0a%3c * NEW: (minor) performance improvement of randomMating and maSelector.%0a%3c * NEW: significant performance improvement of mating schemes.%0a---%0a>   - NEW: (minor) performance improvement of randomMating and maSelector.%0a>   - NEW: significant performance improvement of mating schemes.%0a402c402%0a%3c * NEW: add instruction for using intel c++ compiler, which usually improve%0a---%0a>   - NEW: add instruction for using intel c++ compiler, which usually improve%0a404,412c404,412%0a%3c * BUG: recombinator set sex in a wrong way.%0a%3c * NEW: experimental large pedigree sampling largePedigreeSample%0a%3c * NEW: experimental support for merlin/vc and merlin regression%0a%3c * CHG (internal): overhaul of ascertainment operators and file save stuff.%0a%3c * NEW: add 'useDefault' option to simuOpt paramter specification.%0a%3c %0a%3c %0a%3c !!version 0.7.3 - (Rev 470) Oct 2, 2006%0a%3c * CHG: change the allele type of long module to unsigned short, since%0a---%0a>   - BUG: recombinator set sex in a wrong way.%0a>   - NEW: experimental large pedigree sampling largePedigreeSample%0a>   - NEW: experimental support for merlin/vc and merlin regression%0a>   - CHG (internal): overhaul of ascertainment operators and file save stuff.%0a>   - NEW: add 'useDefault' option to simuOpt paramter specification.%0a> %0a> %0a> version 0.7.3 - (Rev 470) Oct 2, 2006%0a>   - CHG: change the allele type of long module to unsigned short, since%0a414c414%0a%3c * NEW: add -c option to simuCluster.py to allow it to se command instead%0a---%0a>   - NEW: add -c option to simuCluster.py to allow it to se command instead%0a416c416%0a%3c * NEW: add reference count debugging in simulator.evolve (require%0a---%0a>   - NEW: add reference count debugging in simulator.evolve (require%0a418,420c418,420%0a%3c * BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a%3c * NEW: add pyMating operator%0a%3c * NEW: add population::individuals() function that can be used to iterate%0a---%0a>   - BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a>   - NEW: add pyMating operator%0a>   - NEW: add population::individuals() function that can be used to iterate%0a422,428c422,428%0a%3c * NEW: add pyIndOperator%0a%3c %0a%3c %0a%3c !!version 0.7.2 - (Rev 412) - Not publically released%0a%3c * CHG: remove demo and support for scipy's gplt package.%0a%3c * NEW: add infoFields parameter to population and operators%0a%3c * CHG: all populations must now explicitly state the information%0a---%0a>   - NEW: add pyIndOperator%0a> %0a> %0a> version 0.7.2 - (Rev 412) - Not publically released%0a>   - CHG: remove demo and support for scipy's gplt package.%0a>   - NEW: add infoFields parameter to population and operators%0a>   - CHG: all populations must now explicitly state the information%0a430c430%0a%3c * CHG: all qtrait and penetrance oeprators now use info fields of%0a---%0a>   - CHG: all qtrait and penetrance oeprators now use info fields of%0a433c433%0a%3c * CHG: (Internal) selectors now use info field (fitness) rather than%0a---%0a>   - CHG: (Internal) selectors now use info field (fitness) rather than%0a435c435%0a%3c * NEW: add --useDefault parameter to use default parameters instead of%0a---%0a>   - NEW: add --useDefault parameter to use default parameters instead of%0a437c437%0a%3c * NEW: simuCluster.py now subst environmental variables, and stops if%0a---%0a>   - NEW: simuCluster.py now subst environmental variables, and stops if%0a439c439%0a%3c * CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a---%0a>   - CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a441,447c441,447%0a%3c * BUG: fix starting allele problem in simuCDCV.py%0a%3c %0a%3c %0a%3c !!version 0.7.1 - (Rev 378) - Aug 20, 2006%0a%3c * BUG: Fix a bug in backward trajectory simulation%0a%3c * CHG: change the release/snapsot generating process%0a%3c * NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a---%0a>   - BUG: fix starting allele problem in simuCDCV.py%0a> %0a> %0a> version 0.7.1 - (Rev 378) - Aug 20, 2006%0a>   - BUG: Fix a bug in backward trajectory simulation%0a>   - CHG: change the release/snapsot generating process%0a>   - NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a449,450c449,450%0a%3c * BUG: fix a random number generator bug on 64 bit machines.%0a%3c * NEW: random number seed is generated in a much better way, and is%0a---%0a>   - BUG: fix a random number generator bug on 64 bit machines.%0a>   - NEW: random number seed is generated in a much better way, and is%0a452c452%0a%3c * NEW: fix analComplexDisease.py which was not up to date with %0a---%0a>   - NEW: fix analComplexDisease.py which was not up to date with %0a455,468c455,468%0a%3c !!version 0.7.0 - (Release 0.6.15, July, 2006)%0a%3c * Check all scripts and test cases%0a%3c * Check document%0a%3c * release%0a%3c %0a%3c !!version 0.6.14 - (Rev 341) - June 06, 2006%0a%3c * CHG: user's guide and reference manual revision%0a%3c * NEW: add a local scons build system for developers%0a%3c * BUG: fix the variable update bug.%0a%3c * BUG: fix setRNG(seed) bug.%0a%3c * CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a%3c %0a%3c !!version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a%3c * NEW: Add trajectory simulation functions follows those from selSim%0a---%0a> version 0.7.0 - (Release 0.6.15, July, 2006)%0a>   - Check all scripts and test cases%0a>   - Check document%0a>   - release%0a> %0a> version 0.6.14 - (Rev 341) - June 06, 2006%0a>   - CHG: user's guide and reference manual revision%0a>   - NEW: add a local scons build system for developers%0a>   - BUG: fix the variable update bug.%0a>   - BUG: fix setRNG(seed) bug.%0a>   - CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a> %0a> version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a>   - NEW: Add trajectory simulation functions follows those from selSim%0a470c470%0a%3c * NEW: Add controlledMating that accept an generation only if allele%0a---%0a>   - NEW: Add controlledMating that accept an generation only if allele%0a472,473c472,473%0a%3c * NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a%3c * NEW: implement trajectory simulation follows Slatkin 2001. This %0a---%0a>   - NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a>   - NEW: implement trajectory simulation follows Slatkin 2001. This %0a475c475%0a%3c * CHG: (internal change) abort the original template design. This %0a---%0a>   - CHG: (internal change) abort the original template design. This %0a478,479c478,479%0a%3c * CHG: add separator to simuOpt's parameter specification.%0a%3c * NEW: add controlledRandomMating and controlledBinomialSelection which%0a---%0a>   - CHG: add separator to simuOpt's parameter specification.%0a>   - NEW: add controlledRandomMating and controlledBinomialSelection which%0a481,482c481,482%0a%3c * CHG: simuComplexDisease.py has been re-written.%0a%3c * NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a---%0a>   - CHG: simuComplexDisease.py has been re-written.%0a>   - NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a484,485c484,485%0a%3c * BUG: fixed a bug about s_shallowCopied flag of population.%0a%3c * CHG: Remove starting allele and let all allele start from 0. tests %0a---%0a>   - BUG: fixed a bug about s_shallowCopied flag of population.%0a>   - CHG: Remove starting allele and let all allele start from 0. tests %0a488c488%0a%3c * CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a---%0a>   - CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a490c490%0a%3c * NEW: File format change that compress population genotype before it is%0a---%0a>   - NEW: File format change that compress population genotype before it is%0a492c492%0a%3c * NEW: add compress=True option to savePopulation(). For a large file:%0a---%0a>   - NEW: add compress=True option to savePopulation(). For a large file:%0a499c499%0a%3c * NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a---%0a>   - NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a504,505c504,505%0a%3c !!version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a%3c * CHG: 'not enough case/control' in caseControlSample now generates %0a---%0a> version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a>   - CHG: 'not enough case/control' in caseControlSample now generates %0a507c507%0a%3c * CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a---%0a>   - CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a509c509%0a%3c * NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a---%0a>   - NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a511c511%0a%3c * NEW: the wrap files will be automatically generated if any of the source%0a---%0a>   - NEW: the wrap files will be automatically generated if any of the source%0a513,514c513,514%0a%3c * NEW: simuUtil/SaveLinkage is improved in efficiency%0a%3c * CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a---%0a>   - NEW: simuUtil/SaveLinkage is improved in efficiency%0a>   - CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a516,519c516,519%0a%3c * CHG: (internal cleaning) fitness is implemented differently.%0a%3c * CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a%3c * CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a%3c * CHG: (internal) change the use of pointer to iterator, in preparation for%0a---%0a>   - CHG: (internal cleaning) fitness is implemented differently.%0a>   - CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a>   - CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a>   - CHG: (internal) change the use of pointer to iterator, in preparation for%0a521c521%0a%3c * NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a---%0a>   - NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a523c523%0a%3c * CHG: carray can now read/write binary allele. However, it can no longer %0a---%0a>   - CHG: carray can now read/write binary allele. However, it can no longer %0a527c527%0a%3c * NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a---%0a>   - NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a530,535c530,535%0a%3c * NEW: you can now directly compare individuals and populations in python.%0a%3c * CHG: carray is no longer a standalone type. (You can not create it in python)%0a%3c * NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a%3c * NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a%3c * NEW: Complete test cases for all operators.%0a%3c * CHG: remove sep parameter of operators. Users need separator between output of%0a---%0a>   - NEW: you can now directly compare individuals and populations in python.%0a>   - CHG: carray is no longer a standalone type. (You can not create it in python)%0a>   - NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a>   - NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a>   - NEW: Complete test cases for all operators.%0a>   - CHG: remove sep parameter of operators. Users need separator between output of%0a537,545c537,545%0a%3c * NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a%3c * CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a%3c %0a%3c !!version 0.6.11 - (Rev 119) - Jan 19, 2006%0a%3c * DOC: add examples of penetrance operators to the reference manual.%0a%3c * DOC: document using pyOperator to build pure-python operators%0a%3c * NEW: check return value of pyPenetrance function to be within [0,1]%0a%3c * NEW: add operator continueIf, in addition to terminateIf%0a%3c * NEW: add 's' behavior to operator pause, which will invoke an interactive%0a---%0a>   - NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a>   - CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a> %0a> version 0.6.11 - (Rev 119) - Jan 19, 2006%0a>   - DOC: add examples of penetrance operators to the reference manual.%0a>   - DOC: document using pyOperator to build pure-python operators%0a>   - NEW: check return value of pyPenetrance function to be within [0,1]%0a>   - NEW: add operator continueIf, in addition to terminateIf%0a>   - NEW: add 's' behavior to operator pause, which will invoke an interactive%0a549,555c549,555%0a%3c * TST: add test case test_opPause.py%0a%3c * NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a%3c * NEW: add subPop parameter to population::removeIndividual%0a%3c * DOC: add full member function of population object list to reference manual%0a%3c * DOC: add genotypic structure function list to reference manual%0a%3c * DOC: add individual function list to refernce manual%0a%3c * CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a---%0a>   - TST: add test case test_opPause.py%0a>   - NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a>   - NEW: add subPop parameter to population::removeIndividual%0a>   - DOC: add full member function of population object list to reference manual%0a>   - DOC: add genotypic structure function list to reference manual%0a>   - DOC: add individual function list to refernce manual%0a>   - CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a557c557%0a%3c * NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a---%0a>   - NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a560c560%0a%3c * NEW: pyOperator can now be a during-mating operator. Pass a python function%0a---%0a>   - NEW: pyOperator can now be a during-mating operator. Pass a python function%0a562,563c562,563%0a%3c * BUG: fix another memory leak problem when an internal population is exposed%0a%3c * NEW: improve the efficiency of dynamic type finding of population and %0a---%0a>   - BUG: fix another memory leak problem when an internal population is exposed%0a>   - NEW: improve the efficiency of dynamic type finding of population and %0a566c566%0a%3c * NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a---%0a>   - NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a569,574c569,574%0a%3c * NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a%3c * NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a%3c * DOC: add simuPOP coding convension to simuPOP reference manual%0a%3c * NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a%3c * NEW: give correct prompt for pause operator regarding exported population name%0a%3c * BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a---%0a>   - NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a>   - NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a>   - DOC: add simuPOP coding convension to simuPOP reference manual%0a>   - NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a>   - NEW: give correct prompt for pause operator regarding exported population name%0a>   - BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a578,579c578,579%0a%3c !!version 0.6.10 (Rev90) - Dec, 20th, 2005%0a%3c * NEW: add recCount(loc) and recCount() to recombinator to track%0a---%0a> version 0.6.10 (Rev90) - Dec, 20th, 2005%0a>   - NEW: add recCount(loc) and recCount() to recombinator to track%0a581c581%0a%3c * NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a---%0a>   - NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a583,584c583,584%0a%3c * NEW: add atPloidy=[0] to pointMutator.%0a%3c * CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a---%0a>   - NEW: add atPloidy=[0] to pointMutator.%0a>   - CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a586c586%0a%3c * NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a---%0a>   - NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a588,590c588,590%0a%3c * TST: convert test_mutator.py to unittest framework.%0a%3c * NEW: add DBG_DEVEL for developer-level debug information.%0a%3c * CHG: Make adjustment to how genotype structure is accessed from individual and %0a---%0a>   - TST: convert test_mutator.py to unittest framework.%0a>   - NEW: add DBG_DEVEL for developer-level debug information.%0a>   - CHG: Make adjustment to how genotype structure is accessed from individual and %0a593,595c593,595%0a%3c * BUG: fix a tiny bug about optimization mode reporting%0a%3c * TST: test_population is better now, but still way to go.%0a%3c * CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a---%0a>   - BUG: fix a tiny bug about optimization mode reporting%0a>   - TST: test_population is better now, but still way to go.%0a>   - CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a599,606c599,606%0a%3c * NEW: add more info to saved config file. (Add a command  line script)%0a%3c * CHG: simuOpt does not load wx automatically when --noDialog is used.%0a%3c * BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a%3c * BUG: fix a memory leak problem with PyObject->double con!!version.%0a%3c * CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a%3c %0a%3c !!version 0.6.9 (Rev71) - Nov, 19th,  2005%0a%3c * add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a---%0a>   - NEW: add more info to saved config file. (Add a command  line script)%0a>   - CHG: simuOpt does not load wx automatically when --noDialog is used.%0a>   - BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a>   - BUG: fix a memory leak problem with PyObject->double conversion.%0a>   - CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a> %0a> version 0.6.9 (Rev71) - Nov, 19th,  2005%0a>   - add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a608,609c608,609%0a%3c * start to convert all test cases to PyUnit. This means better test cases and more%0a%3c     thorough testing. I expect that code 0.7.0 is a !!version with much less bugs due to%0a---%0a>   - start to convert all test cases to PyUnit. This means better test cases and more%0a>     thorough testing. I expect that code 0.7.0 is a version with much less bugs due to%0a611,615c611,615%0a%3c * fix a bug in initializer (parameter proportion)%0a%3c * fix a bug in recombinator concerning direct chrom copy.%0a%3c * remove autoconf, Makefile.icc stuff to avoid confusion.%0a%3c * fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a%3c * add sub!!version  revision number to doc and binary releases for%0a---%0a>   - fix a bug in initializer (parameter proportion)%0a>   - fix a bug in recombinator concerning direct chrom copy.%0a>   - remove autoconf, Makefile.icc stuff to avoid confusion.%0a>   - fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a>   - add subversion  revision number to doc and binary releases for%0a617c617%0a%3c * fix windows binary import problem caused by mingw/msvcrt. Details please see %0a---%0a>   - fix windows binary import problem caused by mingw/msvcrt. Details please see %0a619c619%0a%3c * fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a---%0a>   - fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a621,623c621,623%0a%3c * add parameter --resampleOnly and --reAnalyzeOnly%0a%3c * remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a%3c * add simuViewPop.py (module and command) that can load and view popularion%0a---%0a>   - add parameter --resampleOnly and --reAnalyzeOnly%0a>   - remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a>   - add simuViewPop.py (module and command) that can load and view popularion%0a626,632c626,632%0a%3c !!version 0.6.8 - Sep 21st, 2005%0a%3c * fix a reporting bug in simuCDCV.py%0a%3c * support sex chromosome and sex chromosome related mating, recombination issues.%0a%3c     *- sexChrom() in population::population(), %0a%3c     *- stop recombination between XY of male individual%0a%3c     *- determine sex in random mating by sex chromosome%0a%3c * add parameters atPloidy, sex to initializers. Now, you can %0a---%0a> version 0.6.8 - Sep 21st, 2005%0a>   - fix a reporting bug in simuCDCV.py%0a>   - support sex chromosome and sex chromosome related mating, recombination issues.%0a>       -- sexChrom() in population::population(), %0a>       -- stop recombination between XY of male individual%0a>       -- determine sex in random mating by sex chromosome%0a>   - add parameters atPloidy, sex to initializers. Now, you can %0a635c635%0a%3c * add support for sex-specific recombination rate. (parameter maleIntensity,%0a---%0a>   - add support for sex-specific recombination rate. (parameter maleIntensity,%0a637,642c637,642%0a%3c * modify some features of simuComplexDisease.py%0a%3c * release 0.6.8 and set up daily snapshots %0a%3c %0a%3c !!version 0.6.7 - Aug, 1st, 2005%0a%3c * Add help() infor for the function !!version of operators and member functions.%0a%3c * use Walker's alias algorithm for weighted sampling. Random mating with %0a---%0a>   - modify some features of simuComplexDisease.py%0a>   - release 0.6.8 and set up daily snapshots %0a> %0a> version 0.6.7 - Aug, 1st, 2005%0a>   - Add help() infor for the function version of operators and member functions.%0a>   - use Walker's alias algorithm for weighted sampling. Random mating with %0a646,652c646,652%0a%3c * add compiler info to Welcome message. (to see if it matches that of Python.)%0a%3c * change the use of logfile in simuCDCV.py %0a%3c * fix a bug in operator InitByFreq.%0a%3c %0a%3c !!version 0.6.6 - various GUI / wxPython improvements. Not released.%0a%3c * add wxGetParam. Will be used when wxPython is available.%0a%3c * add wxPython !!version of listVars. Much better than the text !!version %0a---%0a>   - add compiler info to Welcome message. (to see if it matches that of Python.)%0a>   - change the use of logfile in simuCDCV.py %0a>   - fix a bug in operator InitByFreq.%0a> %0a> version 0.6.6 - various GUI / wxPython improvements. Not released.%0a>   - add wxGetParam. Will be used when wxPython is available.%0a>   - add wxPython version of listVars. Much better than the text version %0a654,659c654,659%0a%3c * add some demographic functions in simuUtil.py%0a%3c * use grid for tkinter box%0a%3c * add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a%3c * find an uncaptured out of memory exception.%0a%3c * simuCDCV.py is better, with log file.%0a%3c * stop using global variable gen. Add gen() function to individual population%0a---%0a>   - add some demographic functions in simuUtil.py%0a>   - use grid for tkinter box%0a>   - add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a>   - find an uncaptured out of memory exception.%0a>   - simuCDCV.py is better, with log file.%0a>   - stop using global variable gen. Add gen() function to individual population%0a662c662%0a%3c * Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a---%0a>   - Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a664,671c664,671%0a%3c * Add tooltip to the wxPython !!version of getParam.%0a%3c %0a%3c !!version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a%3c * separate user's guide and reference manual%0a%3c * streamline getParam, usage, help etc.%0a%3c * add scripts folder for common simupop templates%0a%3c * add quiet option to simuPOP to suppress initial input%0a%3c * add tk support for easy inputing of variables. This is %0a---%0a>   - Add tooltip to the wxPython version of getParam.%0a> %0a> version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a>   - separate user's guide and reference manual%0a>   - streamline getParam, usage, help etc.%0a>   - add scripts folder for common simupop templates%0a>   - add quiet option to simuPOP to suppress initial input%0a>   - add tk support for easy inputing of variables. This is %0a673c673%0a%3c * fix a bug in saving shared variables. Exam saved format. Full backward%0a---%0a>   - fix a bug in saving shared variables. Exam saved format. Full backward%0a675,676c675,676%0a%3c * simuComplexDisease.py. It uses almost all features of simuPOP%0a%3c * remove headers support for object. They are not very useful and %0a---%0a>   - simuComplexDisease.py. It uses almost all features of simuPOP%0a>   - remove headers support for object. They are not very useful and %0a679,680c679,680%0a%3c !!version 0.6.4 - efficiency and usability. Not released%0a%3c * savePopulation saves local variables as well. This is used to save special info like %0a---%0a> version 0.6.4 - efficiency and usability. Not released%0a>   - savePopulation saves local variables as well. This is used to save special info like %0a682,683c682,683%0a%3c * Label save population with max allowed allele number.%0a%3c * merge some parameters through python code. Now, parameters like rate%0a---%0a>   - Label save population with max allowed allele number.%0a>   - merge some parameters through python code. Now, parameters like rate%0a685,688c685,688%0a%3c * caseControlSample can takes array cases/controls parameters.%0a%3c * optimized genoStructure access, fix a bug about transferring the structure%0a%3c * add LoadRandFam ( not easy :-)%0a%3c * add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a---%0a>   - caseControlSample can takes array cases/controls parameters.%0a>   - optimized genoStructure access, fix a bug about transferring the structure%0a>   - add LoadRandFam ( not easy :-)%0a>   - add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a690,697c690,697%0a%3c * more efficient handling of ancestral pops%0a%3c %0a%3c !!version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a%3c * add simulator::getPopulation get a copy of population%0a%3c * add simuOpt to control simuPOP behavior, hide other modules%0a%3c * add pointMutator%0a%3c * change the meaning of rate in recombinator, add parameter intensity%0a%3c * IMPORTANT: population can contain multiple generations. %0a---%0a>   - more efficient handling of ancestral pops%0a> %0a> version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a>   - add simulator::getPopulation get a copy of population%0a>   - add simuOpt to control simuPOP behavior, hide other modules%0a>   - add pointMutator%0a>   - change the meaning of rate in recombinator, add parameter intensity%0a>   - IMPORTANT: population can contain multiple generations. %0a701,704c701,704%0a%3c * add SavePopulations and LoadPopulations function.%0a%3c * add stat(homoFreq and expHetero)%0a%3c * fix a small bug with end %3c 0 and step > 1%0a%3c * add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a---%0a>   - add SavePopulations and LoadPopulations function.%0a>   - add stat(homoFreq and expHetero)%0a>   - fix a small bug with end %3c 0 and step > 1%0a>   - add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a706,738c706,738%0a%3c * make duringMating oeprators re-order automatically%0a%3c * add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a%3c * add affected sibpair sampling scheme%0a%3c * export to linkage format (affected sibpair samples)%0a%3c * export to randfam format%0a%3c * test parentsTagger, successfully track pedigree info   %0a%3c %0a%3c !!version 0.6.2 - better usage of vars  Mar, 23, 2005%0a%3c * variables are now population associated. (pop.evaluate(...)%0a%3c * add quantitative trait and penetrance support%0a%3c * add dryrun parameter to apply and evolve%0a%3c * dvars() function. (Automatic dictionary wrapper class)%0a%3c * add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a%3c * varPlotter becomes an operator.%0a%3c * add D, D' and r2 measures%0a%3c * add newSubPopSizeFunc option to Mating schemes%0a%3c * change haploFreq to count all haplotypes.%0a%3c * add multi-allele Fst, LD etc. (average)%0a%3c * fixes all memory leak and reference count problems %0a%3c * save/load auto format according to file extension.%0a%3c * fix a small bug of unclosed files.%0a%3c * finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a%3c * fix two bugs in AvgLD calculation and in recombinator.%0a%3c %0a%3c !!version 0.6.1* usability and real applications Feb, 12, 2005%0a%3c * add simuPOP_la library for long alleles.%0a%3c * add exposePop option to pyEval (better pure-python operator support)%0a%3c * better treatment for carray. (fix a bug)%0a%3c * more statistics: Fst, Rst, H_est, H_obs etc%0a%3c * read/write, FSTAT format%0a%3c * use simple string instead of list to store statements.%0a%3c * merge alleleCounter and popStat since alleleCounter may depend on popStat%0a%3c * add operator pause for presentation purpose%0a---%0a>   - make duringMating oeprators re-order automatically%0a>   - add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a>   - add affected sibpair sampling scheme%0a>   - export to linkage format (affected sibpair samples)%0a>   - export to randfam format%0a>   - test parentsTagger, successfully track pedigree info   %0a> %0a> version 0.6.2 - better usage of vars  Mar, 23, 2005%0a>   - variables are now population associated. (pop.evaluate(...)%0a>   - add quantitative trait and penetrance support%0a>   - add dryrun parameter to apply and evolve%0a>   - dvars() function. (Automatic dictionary wrapper class)%0a>   - add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a>   - varPlotter becomes an operator.%0a>   - add D, D' and r2 measures%0a>   - add newSubPopSizeFunc option to Mating schemes%0a>   - change haploFreq to count all haplotypes.%0a>   - add multi-allele Fst, LD etc. (average)%0a>   - fixes all memory leak and reference count problems %0a>   - save/load auto format according to file extension.%0a>   - fix a small bug of unclosed files.%0a>   - finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a>   - fix two bugs in AvgLD calculation and in recombinator.%0a> %0a> version 0.6.1  - usability and real applications Feb, 12, 2005%0a>   - add simuPOP_la library for long alleles.%0a>   - add exposePop option to pyEval (better pure-python operator support)%0a>   - better treatment for carray. (fix a bug)%0a>   - more statistics: Fst, Rst, H_est, H_obs etc%0a>   - read/write, FSTAT format%0a>   - use simple string instead of list to store statements.%0a>   - merge alleleCounter and popStat since alleleCounter may depend on popStat%0a>   - add operator pause for presentation purpose%0a740,741c740,741%0a%3c * Genomic control (use R/gap package, simple subpop vs subpop !!version)%0a%3c %0a---%0a>   - Genomic control (use R/gap package, simple subpop vs subpop version)%0a> %0a743,749c743,749%0a%3c * bug fixes%0a%3c * better distribution process and binaries.%0a%3c * remove internal language and use Python expression only%0a%3c * more mutation models%0a%3c * some hybrid operators added%0a%3c * simuPOP website%0a%3c %0a---%0a>   - bug fixes%0a>   - better distribution process and binaries.%0a>   - remove internal language and use Python expression only%0a>   - more mutation models%0a>   - some hybrid operators added%0a>   - simuPOP website%0a> %0a751,757c751,757%0a%3c * re-write Bernulli-trials and gain 10x performance boost%0a%3c * dynamic population size through newSubPopSizeExpr="".%0a%3c * re-write migration to allow migration between subset of subpopulations%0a%3c * ability to create new subpopulation through migration%0a%3c * tagging x-y location.%0a%3c * visualize migration%0a%3c %0a---%0a>   - re-write Bernulli-trials and gain 10x performance boost%0a>   - dynamic population size through newSubPopSizeExpr="".%0a>   - re-write migration to allow migration between subset of subpopulations%0a>   - ability to create new subpopulation through migration%0a>   - tagging x-y location.%0a>   - visualize migration%0a> %0a759,765c759,765%0a%3c * add selection. %0a%3c * better matings.%0a%3c * bug fixes%0a%3c * migration and selection examples%0a%3c %0a%3c !!version 0.5.7 -  serialization Nov. 24, 2004%0a%3c * add serialization of simulator. Now I can save %0a---%0a>   - add selection. %0a>   - better matings.%0a>   - bug fixes%0a>   - migration and selection examples%0a> %0a> version 0.5.7 -  serialization Nov. 24, 2004%0a>   - add serialization of simulator. Now I can save %0a767c767%0a%3c * text, xml and binary formats are supported. XML support%0a---%0a>   - text, xml and binary formats are supported. XML support%0a771,773c771,773%0a%3c !!version 0.5.6 -  expression. Nov. 19, 2004%0a%3c * better shared variable interface %0a%3c * (IMPORTANT!) implement a C/Matlab like language to calculate%0a---%0a> version 0.5.6 -  expression. Nov. 19, 2004%0a>   - better shared variable interface %0a>   - (IMPORTANT!) implement a C/Matlab like language to calculate%0a776,777c776,777%0a%3c * add more functions (abs etc) to inline expression)%0a%3c * fixed some bugs.%0a---%0a>   - add more functions (abs etc) to inline expression)%0a>   - fixed some bugs.%0a780c780%0a%3c * clean the code. Use unsigned long when applicable. Elimilate all %0a---%0a>   - clean the code. Use unsigned long when applicable. Elimilate all %0a782,784c782,784%0a%3c * add some more test cases to cover all user features.%0a%3c * Some real examples%0a%3c %0a---%0a>   - add some more test cases to cover all user features.%0a>   - Some real examples%0a> %0a786c786%0a%3c * return default value for SharedVariable::getVar(name, default)%0a---%0a>   - return default value for SharedVariable::getVar(name, default)%0a788,789c788,789%0a%3c * shared variables can take string, double, array and dictionary.%0a%3c * varParser can now take all kind of shared variables, using%0a---%0a>   - shared variables can take string, double, array and dictionary.%0a>   - varParser can now take all kind of shared variables, using%0a791,792c791,792%0a%3c * DataProvider is separated from Operator and is put in utility.h%0a%3c * DataSource is separated from Visualizer so that other operators%0a---%0a>   - DataProvider is separated from Operator and is put in utility.h%0a>   - DataSource is separated from Visualizer so that other operators%0a794c794%0a%3c * VarDataSource is provided so Visualizer etc can visaulize/display%0a---%0a>   - VarDataSource is provided so Visualizer etc can visaulize/display%0a798,799c798,799%0a%3c * shared variables (operators can store and retrieve variables by name)%0a%3c * better written outputHelper. Now can print shared variables.%0a---%0a>   - shared variables (operators can store and retrieve variables by name)%0a>   - better written outputHelper. Now can print shared variables.%0a801,804c801,804%0a%3c * add "memory file" to improve efficiency under certain circumstances.%0a%3c * overhaul of operator's filename parser (can take shared var now)%0a%3c * provide binary distribution for linux, mac and solaris.%0a%3c * create a batch file to build win32 binary. (Much easier to use)%0a---%0a>   - add "memory file" to improve efficiency under certain circumstances.%0a>   - overhaul of operator's filename parser (can take shared var now)%0a>   - provide binary distribution for linux, mac and solaris.%0a>   - create a batch file to build win32 binary. (Much easier to use)%0a807,810c807,810%0a%3c Version 0.5.2*- windows port, smaller distribution, better help()%0a%3c * help(class/function) now uses doxygen generated document.%0a%3c * distribute tools like .emacs.python.el and swig.xsl%0a%3c * remove all unnecessary files from boost and gsl distribution%0a---%0a> Version 0.5.2  -- windows port, smaller distribution, better help()%0a>   - help(class/function) now uses doxygen generated document.%0a>   - distribute tools like .emacs.python.el and swig.xsl%0a>   - remove all unnecessary files from boost and gsl distribution%0a812c812%0a%3c * ported to windows. see INSTALL.win32 for details %0a---%0a>   - ported to windows. see INSTALL.win32 for details %0a814c814%0a%3c * make DEBUG the default library (optimized will be used less frequently.)%0a---%0a>   - make DEBUG the default library (optimized will be used less frequently.)%0a817,819c817,819%0a%3c * better suport of GSL. add setRNG()%0a%3c * better debug debug(code) instead of debug(level)%0a%3c * better macOS support%0a---%0a>   - better suport of GSL. add setRNG()%0a>   - better debug debug(code) instead of debug(level)%0a>   - better macOS support%0a822,824c822,824%0a%3c * a working distribution with lots of test cases%0a%3c * ported to macOS, solaris%0a%3c %0a---%0a>   - a working distribution with lots of test cases%0a>   - ported to macOS, solaris%0a> %0a827,835c827,835%0a%3c * Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a%3c * change README and make it doxygen mainpage%0a%3c * create todo list and many other documents%0a%3c * implement exception classes with error message sent to Python%0a%3c * change most arrays to vector so that they can be accessed through python%0a%3c * find the right way to do keyword argument from python. Very useful.%0a%3c * Population basic structure is finished with basic operations.%0a%3c * Operator start-every-end-at is implemented.%0a%3c * genetic drifting sample program went fine.%0a---%0a>   - Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a>   - change README and make it doxygen mainpage%0a>   - create todo list and many other documents%0a>   - implement exception classes with error message sent to Python%0a>   - change most arrays to vector so that they can be accessed through python%0a>   - find the right way to do keyword argument from python. Very useful.%0a>   - Population basic structure is finished with basic operations.%0a>   - Operator start-every-end-at is implemented.%0a>   - genetic drifting sample program went fine.%0a
host:1232292363=127.0.0.1
author:1232292122=
diff:1232292122:1232171321:=1,837c1%0a%3c ChangeLog of simuPOP%0a%3c %0a%3c version 0.9.2 - Not released, available at https://simupop.svn.sourceforge.net/svnroot/simupop/trunk%0a%3c   - NEW: Allow populations in a simulator to have different genotype structure. %0a%3c   - CHG: A simulator can no longer access genotypic structure information.%0a%3c   - NEW: Add simulator::add to add new populations to a simulator.%0a%3c   - CHG: Remove simulator::addInfoField and other functions because they can be%0a%3c 		applied to individual populations.%0a%3c   - NEW: Allow the use of single form parameter in population::removeSubPops,%0a%3c 		removeIndividuals, addLoci, removeLoci and resize.%0a%3c   - BUG: Fix a bug in adding locus to a population without any locus.%0a%3c %0a%3c version 0.9.1 - (Rev 2330) Jan 13, 2009%0a%3c   - NEW: Improve allele iterator so that stat(alleleFreq) can handle chromosome x and y.%0a%3c   - CHG: Raise an error when there is no male or female in a diploid parents chooser.%0a%3c   - CHG: Remove parameter newSubPopSizeExpr and rename newSubPopSize to subPopSize,%0a%3c 		and newSubPopSizeFunc to subPopSizeFunc.%0a%3c   - CHG: Merge parameters subPopSize and subPopSizeFunc. This parameter can now%0a%3c 		take both a list and a function.%0a%3c   - BUG: Fix population load/save under windows, add simulator equality test (__cmp__).%0a%3c   - CHG: Merge parameters numOffspringFunc, numOffspringParam and mode to numOffspring%0a%3c         in offspringGenerator.%0a%3c   - CHG: Merge parameter sexParam to sexMode in offspringGenerator.%0a%3c   - CHG: Rename mating scheme binomialSelection to randomSelection.%0a%3c   - CHG: Merge parameters convProb, convMode and convParam to convMode in%0a%3c 		recombinator.%0a%3c   - BUG: Fix option shuffleOffspring in heteroMating().%0a%3c   - CHG: Change the default output of parentsTagger when only one parent is passed.%0a%3c   - CHG: Remove parameter numParents from offspringGenerator and parent choosers.%0a%3c   - CHG: Rename pyMating to homoMating. Remove unused parameters subPop and weight%0a%3c 		from heteroMating.%0a%3c   - NEW: Allow a demographic function to return a number if there is only one%0a%3c 		subpopulation.%0a%3c   - NEW: Allow pedigreeMating to set sex, affection status and some information%0a%3c 		fields from the pedigree object.%0a%3c   - NEW: Allow random parent(s) choosers to set name of information field fitness.%0a%3c   - CHG: Change interface for pedigree::locateRelatives. Rename setIndexOfRelatives%0a%3c 		to traceRelatives.%0a%3c   - NEW: Allow replicate numbers in a simulator to refer to the last several%0a%3c         _active_ populations.%0a%3c   - CHG: Merge parameter output and outputExpr and use '!expr' for the expression%0a%3c         case.%0a%3c   - NEW: Allow parameter baseOperator::at to take a single number in addition to a list.%0a%3c   - NEW: Disallow parameter alias locus to parameter loci in penetrance,%0a%3c 		selection and quantitative trait operators. Allow loci to accept a number.%0a%3c   - NEW: Support other device types in varPlotter::saveAs.%0a%3c   - NEW: dumper now supports virtual subpopulations.%0a%3c %0a%3c version 0.9.0 - (Rev 2130) Dec 15, 2008 (tagged, but not publically released)%0a%3c   - CHG: add population::setSubPopByIndInfo to allow flexible migration.%0a%3c   - CHG: migrator now uses an information field "migrate_to".%0a%3c   - CHG: Add function population::extract.%0a%3c   - CHG: Remove parameter ancGen from population::clone().%0a%3c   - NEW: Dump() also display information fields.%0a%3c   - NEW: Expose population::pushAndDiscard(pop) as population::push().%0a%3c   - NEW: Add parameter subPops to all operators.%0a%3c   - CHG: Move operators pySubset(), randomSample(), caseControlSample()%0a%3c 		and affectedSibpairSample from simuPOP core to simuUtil.py.%0a%3c 		Remove src/sampler.*.%0a%3c   - CHG: Remove infoTagger, sexTagger and affectionTagger and will%0a%3c 		replace them by pedigreeTagger.%0a%3c   - CHG: Remove population::removeEmptySubPops().%0a%3c   - NEW: Add support for subpopulation names.%0a%3c   - CHG: Remove intializer, spread and pyInit operators.%0a%3c   - CHG: Add parameter initSex to initByFreq and initByValue.%0a%3c   - NEW: Initializers now support virtual subpopulations.%0a%3c   - CHG: Recombiantor no longer supports recombination by sex, %0a%3c 		and haplodiploid chromosomes.%0a%3c   - CHG: Recombinator now supports different types of chromosomes.%0a%3c   - NEW: Add ops parameter to mating schemes.%0a%3c   - NEW: add mitochondrialGenoTransmitter.%0a%3c   - NEW: add population::updateInfoFieldsFrom.%0a%3c   - NEW: Add two examples in doc/cookbook, demonstrating the use of customized%0a%3c 		genotype transmitters and mitochondrialGenoTransmitter.%0a%3c %0a%3c version 0.8.9 - (Rev 1948) Nov 18, 2008 (tagged, but not publically released)%0a%3c   - DOC: Adjust reference output for simuPOP classes.%0a%3c   - CHG: Rename genoStruTrait::haplodiploid to isHaplodiploid.%0a%3c   - CHG: Rename genoStruTrait::sexChrom to hasSexChrom.%0a%3c   - CHG: Remove the maxAllele parameter of population.%0a%3c   - CHG: Remove outputHelper operator, which has been replaced by pyOutput.%0a%3c   - CHG: Remove read support for XML and Binary formats.%0a%3c   - CHG: Completely change the way sex chromosomes are handled, and add%0a%3c 		initial support for customized chromosome.%0a%3c   - CHG: Rename class vsp to vspID.%0a%3c   - CHG: Merge population::subPopSize and population::virtualSubPopSize.%0a%3c   - CHG: Change parameter of population::virtualSubPopName().%0a%3c   - CHG: Merge population::individuals(sp) and population::individuals(sp, vsp).%0a%3c   - CHG: Remove genoStruTrait::maxAllele(). Use MaxAllele() instead.%0a%3c   - CHG: Make pedigree a subclass of population and move population::locateRelatives%0a%3c         and population::setRelativeIndex to this class.%0a%3c   - CHG: Temporarily disable all pedigree related features such as pedigree parent%0a%3c         chooser, pedigree mating scheme, and all samplers.%0a%3c   - CHG: Rename population::useAncestralPop to population::useAncestralGen.%0a%3c   - CHG: Replace population::mergePopulation by population::addIndFromPop.%0a%3c   - CHG: Replace population::mergePopulationByLoci by population::addChromFromPop%0a%3c 		and population::addLociFromPop.%0a%3c   - CHG: Remove removeEmptySubPops parameter from population::mergeSubPops.%0a%3c   - CHG: Adjust interface to population::removeLoci.%0a%3c   - CHG: Adjust interface to population::removeSubPops.%0a%3c   - NEW: Allow indInfo, setInfo etc to access virtual subpopulation.%0a%3c   - CHG: Merge parameter virtualSubPop with subPop in mating schemes.%0a%3c   - NEW: Add simuProgress class to simuUtl.%0a%3c   - CHG: Remove simulator::applyOpToStoppedReps and simulator::stopIfOneRepStops%0a%3c   - NEW: Add StopEvolution exception and add simulator::stopIfOneRepStops to terminators.%0a%3c   - CHG: Remove operator terminator and continueIf.%0a%3c   - CHG: Reset file format number. No longer support previous file formats.%0a%3c   - NEW: add simulator::populations().%0a%3c   - NEW: Allow the use of multiple replicates for an operator. Remove REP_ALL (now []),%0a%3c 		and REP_LAST (now -1).%0a%3c   - CHG: Replace simulator::getPopulation by simulator::population and%0a%3c 		simulator::extract.%0a%3c %0a%3c version 0.8.8 - (Rev 1787) Oct 24, 2008%0a%3c   - CHG: Remove the replicate group feature.%0a%3c   - NEW: Allow mapSelector to work for all ploidy.%0a%3c   - DOC: Add keyword applicability to indicate applicability of operators.%0a%3c   - DOC: Document applicability of mating schemes.%0a%3c   - DOC: Fix bibtex references of user's guide and reference manual.%0a%3c   - CHG: indiviudal::arrGenotype, individual::arrInfo are marked obsolete%0a%3c 		and will be removed later.%0a%3c   - NEW: add individual::genotype (previously called arrGenotype) and%0a%3c 		individual::arrGenotype.%0a%3c   - CHG: genoStruTrait::arrLociPos is marked obsolete and will be removed%0a%3c 		later.%0a%3c   - CHG: population arrGenotype are marked obsolete and will be removed%0a%3c 		later.%0a%3c   - NEW: add population::genotype and population::setGenoytpe.%0a%3c   - BUG: Fix a bug in simuRPy.py that prevents varPlotter from plotting%0a%3c 		images.%0a%3c   - NEW: Support Python 2.6.%0a%3c %0a%3c version 0.8.7 - (Rev 1755) Aug 29, 2008%0a%3c   - NEW: allow the use of a list to specify a virtual subpopulation.%0a%3c   - NEW: change the return type of allele() so that no boolean value (True or False)%0a%3c 		will be returned from the binary modules.%0a%3c   - DOC: Correct documentation about variables related to genotype and heterozygote frequency.%0a%3c   - BUG: Fix a bug when a zero-sized virtual subpopulation has weight -1.%0a%3c   - BUG: Fix a bug when calculating expected heterozygosity with increased%0a%3c 		number of subpopulations.%0a%3c   - BUG: Fix a bug in controlled random mating where number of affected alleles%0a%3c 		are calculated from current instead of offspring populations.%0a%3c   - CHG: Only write (compressed if possible) in text format. simuPOP can still%0a%3c 		read binary and xml formats.%0a%3c   - BUG: Fix a bug that is related to the calculation of Fst in populations with%0a%3c 		unordered individuals.%0a%3c   - BUG: Fix activation and deactivation of combinedVirtualSplitter.%0a%3c   - BUG: Fix a bug that prevents simuPOP from compressing population files.%0a%3c   - NEW: Make boost 1.36.0 the default built-in boost version.%0a%3c   - BUG: Fix a carray genotype slice assignment bug under windows and python2.5.%0a%3c   - NEW: Stop distributing zlib1.dll by building zlib from source under%0a%3c 		windows.%0a%3c %0a%3c version 0.8.6 - (Rev 1666) Jun 20, 2008%0a%3c   - NEW: Polish command line arguments output in a configuration file.%0a%3c   - NEW: add a function ForwardFreqTrajetory to simulate trajectory of varying%0a%3c 		population size and selection pressure.%0a%3c   - BUG: Fix a minor simuOpt::saveConfigFile bug%0a%3c   - BUG: reveal RNG::randMultinomial and RNG::randMultinomialVar%0a%3c   - BUG: fix a bug that is related to reference count of loaded lists.%0a%3c   - CHG: allow sample size > population size (give a warning rather than error)%0a%3c   - CHG: allow recombination rate > 0.5 (adjust to 0.5 and issue a warning)%0a%3c   - NEW: allow longarg names in option jump and jumpIfFalse in simuOpt.py%0a%3c   - NEW: load fine-scale recombinate rate and set variable genDist in loaded%0a%3c 		HapMap populations. (loadHapMap.py)%0a%3c   - CHG: polish tkInter and wxPython parameter input dialog.%0a%3c   - CHG: Remove parameter order from information field related functions.%0a%3c   - BUG: Fix a information field + migration bug.%0a%3c   - NEW: add operation resizeSubPops.%0a%3c   - BUG: Fix a NuclearfamilySample bug regarding parameter minAffected.%0a%3c   - NEW: separate sex initialization from initByFreq, initByValue and pyInit%0a%3c 		and add a new operator initSex.%0a%3c   - BUG: Fix a iterator bug that affects populations with ancestralDepth > 1 %0a%3c 		during evolution.%0a%3c   - CHG: Remove subpopulation specific virtual subpopulation. This is no longer%0a%3c 		needed with combined virtual splitter.%0a%3c   - NEW: Add population::ancestor(ind, gen) and population::ancestor(ind, subPop, gen)%0a%3c 		to access an individual in an ancestory generation directly.%0a%3c   - NEW: support virtual subpopulation in fromSubPop parameter of a migrator.%0a%3c 		This allows sex-specific migraton and more complicated migration%0a%3c 		schemes.%0a%3c   - NEW: add functions population::locateRelatives and population::setIndexesOfRelatives%0a%3c   - NEW: add functions individual::indInfo(idx) and individual::indInfo(name)%0a%3c   - NEW: add a new parent chooser infoParentsChooser and a new mating scheme%0a%3c 		consanguineousMating, along with an example doc/cookbook/Mating_consanguineous.py.%0a%3c %0a%3c %0a%3c version 0.8.5 - (Rev 1488) Apr 3, 2008%0a%3c   - BUG: fix a bug that prevents a cloned simulator from evolving again.%0a%3c   - NEW: add parameter numMale and sexMode to all offspring generator and%0a%3c 		mating schemes, to control the sex of offspring exactly.%0a%3c   - NEW: add gene conversion to recombinator, using parameter convMode, convProb and convParam.%0a%3c   - NEW: add convenience functions GenoStruTrait::distLeft and GenoStruTrait::lociLeft.%0a%3c   - NEW: add random parent chooser without replacement and/or with alpha individuals,%0a%3c 		haplodiploidOffspringGenerator, monogamousMating, polygamousMating, alphaMating,%0a%3c 		and haplodiploidMating mating schemes.%0a%3c   - NEW: add haplodiploid option to GenoStructure. Recombinator now handles such%0a%3c 		populations correctly.%0a%3c   - CHG: make the subPop parameter of population() function obsolete.%0a%3c   - CHG: add parameter gen, and make parameter end in simulator::evolve obsolete.%0a%3c %0a%3c %0a%3c version 0.8.4 - (Rev 1456) Mar 8, 2008%0a%3c   - NEW: add support for other posix systems like HP-UX%0a%3c   - NEW: automatically download HapMap data in loadHapMap.py and simuAdmixture.py.%0a%3c   - NEW: add two operators infoEval and infoExec that can be used to manipulate%0a%3c 	information fields during evolution.%0a%3c   - NEW: operator stator popSize=True also calculates virtual subpop size using%0a%3c 		variable virtualPopSize.%0a%3c   - BUG: fix a bug in the re-initialization of pyParentsChooser.%0a%3c   - CHG: inheritTagger will inherit the first, instead of the second, information%0a%3c 		field from mother in TAG_Maternal mode.%0a%3c   - CHG: population::numVirtualSubPop() returns 0 instead 1 when there is no%0a%3c 		virtual subpopulation.%0a%3c   - NEW: allow multiple genotype in the same virtual subpopulation split by%0a%3c 		genotypeSplitter%0a%3c   - NEW: add combinedSplitter%0a%3c %0a%3c %0a%3c version 0.8.3 - (Rev 1412) Jan 17, 2008 %0a%3c   - NEW: allow taggers to write pedigree files%0a%3c   - NEW: introduce pedigreeParentsChooser to choose parents according to a given pedigree%0a%3c   - NEW: introduce pedigreeMating to mate according to a given pedigree%0a%3c   - NEW: add infoTagger, sexTagger, affectionTagger%0a%3c   - NEW: add pedigree information handling functions%0a%3c   - CHG: add more options to functions in hapMapUtil.py%0a%3c   - CHG: remove MPI related setup, build and source code (revert to r1393 to retrieve the%0a%3c 		MPI related code).%0a%3c   - BUG: Fix a bug of setting individual visibility of populations loaded from disk file.%0a%3c   - NEW: improve the efficiency of MergePopulations and MergePopulationsByLoci when%0a%3c 		a lot of populaitons are involved.%0a%3c %0a%3c version 0.8.2 - (Rev 1370) Nov 19, 2007%0a%3c   - BUG: Fix saveFstat in simuUtil.py%0a%3c   - NEW/CHG: rewrite pyMating, which now accepts a parents chooser, and an offspring generator.%0a%3c   - NEW: add heteroMating to allow allow different mating scheme used for different%0a%3c 		subpopulations, or proportions of individuals%0a%3c   - NEW: add selfMating mating scheme.%0a%3c   - NEW: add various parent choosers.%0a%3c   - NEW: add various offspring generators.%0a%3c   - NEW: add null, duplicate, info, genotype, proportion splitters%0a%3c   - NEW: add splitter interface to populations.%0a%3c %0a%3c version 0.8.1 - (Rev 1254) Oct 05, 2007%0a%3c   - NEW: Allow len(pops) == 1 in MergePopulationsByLoci(pops) and%0a%3c 	MergePopulations(pops)%0a%3c   - BUG: Use /dev/urandom for unix users. os.path.isfile('/dev/urandom') %0a%3c 		returns false even if this file does exist.%0a%3c   - BUG: Fix the handling of binary option in command line, and handling of short %0a%3c 		arguments.%0a%3c   - NEW: Use a checkbox for binary options in the parameter dialogs.%0a%3c   - NEW: make use of second to last inforFields passed to pyPenetrance %0a%3c 		and pySelector to pass specified information fields to user-defined%0a%3c 		functions.%0a%3c   - BUG: Fix a few functions in hapMapUtil.py%0a%3c   - BUG: stop displaying full path name in the title of the parameter dialog.%0a%3c   - NEW: add chromName(), chromNames(), chromByName() to genotypic structure, and%0a%3c 		chromNames parameter to population constructor.%0a%3c   - NEW: Some documentation improvement.%0a%3c %0a%3c %0a%3c version 0.8.0 - (Rev 1215) Aug 14, 2007%0a%3c   - Reference manual overhaul%0a%3c   - Rename outputHelper to pyOutput, and alleleType to AlleleType for consistency.%0a%3c   - NEW: Respect environmental variable GSL_RNG_TYPE for the choice of RNG%0a%3c %0a%3c version 0.7.11 - (Rev 1133) July 26, 2007%0a%3c   - NEW: add subPop(s) parameters to selectors, allowing different selection pressure %0a%3c 		in different subpopulations%0a%3c   - NEW: add subPops parameter to intializers, working the same as subPop%0a%3c   - NEW: extending pyIndOperator with handling of loci and infoFields%0a%3c   - BUG: fix a crash of postOps in dryrun mode by applying operator in the order given.%0a%3c   - BUG: fix scripts/simuViewPop.py%0a%3c   - NEW: add optional option destructive=False to simulator::getPopulation, as%0a%3c 		a way to retrieve a population more efficiently.%0a%3c   - NEW: rewrite pyMigrator to allow for changing migration rates, and more subtle%0a%3c 		control of migration using individual genotype.%0a%3c   - NEW: rename parameter atLoci to loci for all mutators (atLoci becomes obsolete, but is%0a%3c 		still usable)%0a%3c   - BUG: fix a mutator crash when locus index difference exceeds the range of integer,%0a%3c 		for cases, for example, with 10k loci and 100k individuals.%0a%3c   - NEW: add src/hapMapUtil.py to add some utility functions to handle HapMap data%0a%3c   - NEW: add parameter byChromosome to population::mergePopulationByLoci and%0a%3c 		MergePopulationsByLoci to allow chromosome to chromosome merge.%0a%3c %0a%3c %0a%3c version 0.7.10 - (Rev 987) May 20, 2007%0a%3c   - BUG: fix a memory leak bug with LoadPopulation%0a%3c   - BUG: fix a newPopByIndID bug where keepAncestralPops is not respected.%0a%3c   - NEW: nuclearFamilySampler operator and function%0a%3c   - NEW: add MATE_UniformDistribution number of offspring type%0a%3c   - BUG: fix a useAncestralGen bug in largePedigreeSample (Does not affect output).%0a%3c   - BUG: fix a typo in function SaveLinkage, I really need to test these functions as well.%0a%3c   - BUG: fix a SWIG option bug that prevents help messages of member functions to display.%0a%3c   - BUG: fix a memory leak bug with stat operator during allele frequency calculation%0a%3c   - NEW: make sure alleleFreq[x][0] and alleleFreq[x][1] exist, even if there is no%0a%3c 	    allele 1. This is avoid trouble in  binary form. (maybe not a good idea).%0a%3c   - NEW: throw an exception when multiple selectors are applied at the same time.%0a%3c   - NEW: add population::mergePopulation, population::mergePopulationByLoci, %0a%3c 		MergePopulations, MergePopulationsByLoci, population::resize%0a%3c   - NEW: add population::insertLoci, population::insertLocus, population::appendLoci, %0a%3c 		population::appendLocus%0a%3c   - NEW: add genoStruTrait::locusByName, genoStruTrait::lociByName%0a%3c   - NEW: swig 1.3.32 compatibility%0a%3c   - NEW: add scripts/loadHapMap.py%0a%3c   - NEW: add pyTagger operator, which can be used to trace trait values.%0a%3c   - NEW: update comments, in preparation for the 0.8.0 release%0a%3c   - NEW: disallow change of genotypic structure of populations in a simulator.%0a%3c   - NEW: add simulator::addInfoField, simulator::addInfoFields, simulator::setAncestralDepth%0a%3c 		and related tests and documents.%0a%3c   - BUG: fix a bug when stat() tries to remove non-existings variables%0a%3c 		caused by population split.%0a%3c %0a%3c %0a%3c version 0.7.9 - (Rev 885) Apr 3, 2007%0a%3c   - BUG (build): add solaris support. This OS does not have stdint.h.%0a%3c   - BUG (build): add support for python 2.5 on 64 bit machines (new Py_ssize_t type for python2.5)%0a%3c   - NEW: add SaveSolarFrqFile in simuUtil.py%0a%3c   - NEW: separate SaveQTDT in SaveMerlinDatFile, SaveMerlinMapFile and SaveMerlinPedFile%0a%3c 		SaveQTDT now calls these three functions.%0a%3c   - NEW: rewrite newPopByIndID and speed up sample generation considerably.%0a%3c   - NEW: add scripts/simuHWE.py that demonstrate the temorary deviation from HWE in a%0a%3c 		population with unequal male and female allele frequencies, from Yaji Xu.%0a%3c   - BUG: fix a bug in the calculation of D'%0a%3c   - NEW: add LD measurement delta^2%0a%3c   - NEW: add LD_param parameter to have finer control over how LD is calculated%0a%3c   - NEW: add exphetero_param, Fst_param, alleleFreq_param etc to have better%0a%3c 	    control over the calculation of these statistics.%0a%3c   - CHG: midValues of LD is replaced by LD_param={'midValues':True}%0a%3c   - NEW: add association statistics (ChiSq, UC_U, CramerV)%0a%3c   - BUG: fix passing of relMethod parameter of stat operator%0a%3c   - CHG: NO_CONVERSION is no longer the default for rpy%0a%3c %0a%3c %0a%3c version 0.7.8 - (Rev 833) Mar 2, 2007%0a%3c   - BUG: fix broken user interactive input%0a%3c   - BUG: fix help feature of tkinter dialog%0a%3c   - NEW: bundle boost 1.33.1 with source package%0a%3c   - BUG (build): fix a SConstruct bug with MSVC environment variables%0a%3c   - NEW: add other LD measurements to simuLDDecay.py%0a%3c   - NEW: optionally add header to QTDT ped file%0a%3c   - BUG: fix the combine parameter of SaveQTDT%0a%3c %0a%3c %0a%3c version 0.7.7 - (Rev 786) Feb 1, 2007%0a%3c   -NEW (build): bring scons build system on par with python setup.py%0a%3c   -NEW (build): scons build now accepts options prefix, include-dirs and library-dirs%0a%3c   -NEW (build): try really hard to search proper boost libraries. One usually%0a%3c     does not have to specify boost inc and lib paths to build simuPOP.%0a%3c   -NEW (build): prune files from source package%0a%3c   -NEW: add ancestralGen to penetrance and qtrait operators%0a%3c   -NEW: change pySelector and allow a second parameter gen for the fitness function%0a%3c         This allows varying selection pressure.%0a%3c   -CHG: individual comparison does not compare information fields%0a%3c   -CHG: adjust individual representation (actually output genotype)%0a%3c   -BUG: fix a bug in loading some files saved in binary module from standard modules%0a%3c   -BUG: fix an affected sibpair sampler bug introduced in 0.7.5%0a%3c MPI modules:%0a%3c   -NEW: add hasInfoField() function%0a%3c   -NEW: MPI module pass 00, 01, 06 test scripts%0a%3c   -NEW: Only head node can print to cout%0a%3c   %0a%3c %0a%3c version 0.7.6 - (Rev 674) Dec 25, 2006%0a%3c   -NEW: change file format for binary modules, resulting much faster save/load.%0a%3c   -NEW: fix adjustGenotype (efficiency)%0a%3c   -BUG: fix simulator::clone(), introduced in 0.7.5%0a%3c   -NEW: disable compression under windows due to a boost bug.%0a%3c   -BUG: make simuRPy works with the latest R and rpy.%0a%3c   -NEW: several new chapters in the user's guide.%0a%3c %0a%3c %0a%3c version 0.7.5 - (Rev 576) Dec 8, 2006%0a%3c   - NEW: experimental MPI modules.%0a%3c   - BUG: None is treated as False now in Py_Object_As_Bool.%0a%3c   - NEW: (internal) Optimize binary allele handling. Copying of alleles are now%0a%3c 		faster than regular alleles.%0a%3c   - NEW (internal): Optimize BernulliTrials and recombination. Recombination%0a%3c 		under certain conditions is 1/3 faster now.%0a%3c   - NEW (internal): Using vector%3cbool> instead of dynamic_bitset for BernulliTrials%0a%3c 	    cache internal point for performance purposes. This also fixes a windows%0a%3c 		dynamic_bitset related bug (never figure out what was wrong).%0a%3c   - NEW: add the missing simulator.clone() function%0a%3c   - CHG: stop embedding zlib since the source does not work under windows.%0a%3c 		The installation process is changed as well.%0a%3c %0a%3c %0a%3c version 0.7.4 - (Rev 518) Nov 5, 2006%0a%3c   - BUG: fix simulator.population() function%0a%3c   - NEW/CHG: add order parameter to population arr function series.%0a%3c 	Changed functions are:%0a%3c 		C++ level: population::genoBegin(true), genoBegin(sp, true)%0a%3c 			population::infoBegin(idx, order), infoBegin(idx, subPop, order)%0a%3c 		Python level: population::arrGenotype(True), arrGenotype(sp, True)%0a%3c 			population::indInfo(idx, order), indInfo(idx, subPop, order)%0a%3c 			population::arrIndInfo(order), arrIndInfo(subPop, order)%0a%3c   - NEW: test/test_21_performance is added to keep track of performance%0a%3c 	improvements.%0a%3c   - NEW: (minor) performance improvement of randomMating and maSelector.%0a%3c   - NEW: significant performance improvement of mating schemes.%0a%3c 	controlled randomMating: typically 150s => 90s%0a%3c   - NEW: add instruction for using intel c++ compiler, which usually improve%0a%3c    performance by 20%25 to 30%25.		%0a%3c   - BUG: recombinator set sex in a wrong way.%0a%3c   - NEW: experimental large pedigree sampling largePedigreeSample%0a%3c   - NEW: experimental support for merlin/vc and merlin regression%0a%3c   - CHG (internal): overhaul of ascertainment operators and file save stuff.%0a%3c   - NEW: add 'useDefault' option to simuOpt paramter specification.%0a%3c %0a%3c %0a%3c version 0.7.3 - (Rev 470) Oct 2, 2006%0a%3c   - CHG: change the allele type of long module to unsigned short, since%0a%3c 		2^16 seems to be enough even for long allele cases.%0a%3c   - NEW: add -c option to simuCluster.py to allow it to se command instead%0a%3c 		of the default qaub%0a%3c   - NEW: add reference count debugging in simulator.evolve (require%0a%3c 		specially built python.)%0a%3c   - BUG: fix memory leaks in stator, util.cpp (pyExec) and simuPOP_common.i%0a%3c   - NEW: add pyMating operator%0a%3c   - NEW: add population::individuals() function that can be used to iterate%0a%3c 		through all individuals (or in a subpopulation).%0a%3c   - NEW: add pyIndOperator%0a%3c %0a%3c %0a%3c version 0.7.2 - (Rev 412) - Not publically released%0a%3c   - CHG: remove demo and support for scipy's gplt package.%0a%3c   - NEW: add infoFields parameter to population and operators%0a%3c   - CHG: all populations must now explicitly state the information%0a%3c 		fields for each individual.%0a%3c   - CHG: all qtrait and penetrance oeprators now use info fields of%0a%3c 		individuals (they use variable before). penetrance field is%0a%3c 		optional.%0a%3c   - CHG: (Internal) selectors now use info field (fitness) rather than%0a%3c 		using its own population variable.%0a%3c   - NEW: add --useDefault parameter to use default parameters instead of%0a%3c 		reading from stdin, if they can not be obtained from other methods.%0a%3c   - NEW: simuCluster.py now subst environmental variables, and stops if%0a%3c 		there is remaining $ in the script.%0a%3c   - CHG: make 'configName' and 'prompt' of simuOpt options obsolete, use%0a%3c 		'label' instead.%0a%3c   - BUG: fix starting allele problem in simuCDCV.py%0a%3c %0a%3c %0a%3c version 0.7.1 - (Rev 378) - Aug 20, 2006%0a%3c   - BUG: Fix a bug in backward trajectory simulation%0a%3c   - CHG: change the release/snapsot generating process%0a%3c   - NEW: add script/simuCluster.py which assists submission of jobs on cluster%0a%3c 		machines.%0a%3c   - BUG: fix a random number generator bug on 64 bit machines.%0a%3c   - NEW: random number seed is generated in a much better way, and is%0a%3c 		retrievable.%0a%3c   - NEW: fix analComplexDisease.py which was not up to date with %0a%3c 		simuComplexDisease.py%0a%3c %0a%3c version 0.7.0 - (Release 0.6.15, July, 2006)%0a%3c   - Check all scripts and test cases%0a%3c   - Check document%0a%3c   - release%0a%3c %0a%3c version 0.6.14 - (Rev 341) - June 06, 2006%0a%3c   - CHG: user's guide and reference manual revision%0a%3c   - NEW: add a local scons build system for developers%0a%3c   - BUG: fix the variable update bug.%0a%3c   - BUG: fix setRNG(seed) bug.%0a%3c   - CHG: rename setRNG() to SetRNG(), and listAllRNG() to ListAllRNG()%0a%3c %0a%3c version 0.6.13 - (Rev 278) - Apr. 20, 2006%0a%3c   - NEW: Add trajectory simulation functions follows those from selSim%0a%3c          and geneArtisan.%0a%3c   - NEW: Add controlledMating that accept an generation only if allele%0a%3c          frequency at specified locus/loci fail in specified range.%0a%3c   - NEW: add test case for controlledMating. (No doc is avaiable yet.)%0a%3c   - NEW: implement trajectory simulation follows Slatkin 2001. This %0a%3c          works better than methods from both selSim and geneArtisan.%0a%3c   - CHG: (internal change) abort the original template design. This %0a%3c          will make the source less flexible but can dramatically improve%0a%3c          development time.%0a%3c   - CHG: add separator to simuOpt's parameter specification.%0a%3c   - NEW: add controlledRandomMating and controlledBinomialSelection which%0a%3c          implement a quicker alternative to controlledMating. %0a%3c   - CHG: simuComplexDisease.py has been re-written.%0a%3c   - NEW: add TurnOnDebugWithName(name) and the ability to set SIMUDEBUG%0a%3c          to turn on certain debug mode.%0a%3c   - BUG: fixed a bug about s_shallowCopied flag of population.%0a%3c   - CHG: Remove starting allele and let all allele start from 0. tests %0a%3c          and scripts have been modified. These changes can make binary%0a%3c          and other modules behave the same.%0a%3c   - CHG: (internal change) upgrade to boost 1.33.1. This allows me to use%0a%3c          boost::iostream for instant file compression.%0a%3c   - NEW: File format change that compress population genotype before it is%0a%3c          saved. This will greatly reduce the file size of saved populations.%0a%3c   - NEW: add compress=True option to savePopulation(). For a large file:%0a%3c          Before: txt: 496M, 58s load, 24s write%0a%3c 		         xml: 169M, 19s load, ? write%0a%3c 		 Now:    txt: 66M,  25s load, 125s save%0a%3c 		         bin: 51M,  10s load, 70s write%0a%3c 		 Since load operation tends to happen more often than save,%0a%3c 		 this increased write time seems to be acceptable.%0a%3c   - NEW: let simuPOP handles file.txt.gz extensions directly. Using .gz will%0a%3c          be equilivalent to compress=True (although compress=True does not%0a%3c          add .gz extension to the filename supplied. )%0a%3c 				 %0a%3c %0a%3c version 0.6.12 - (Rev 186) - Feb 18, 2006 %0a%3c   - CHG: 'not enough case/control' in caseControlSample now generates %0a%3c          a warning message, rather than exception.%0a%3c   - CHG: set the default sample saveAs format to 'auto', instead of 'bin'%0a%3c          'bin' was used before 'auto' was introduced%0a%3c   - NEW: the format parameter of loadPopulation, loadSimulator are obsolete.%0a%3c          File type will be automatically determined.%0a%3c   - NEW: the wrap files will be automatically generated if any of the source%0a%3c          files is modified. This is useful mostly for svn users.%0a%3c   - NEW: simuUtil/SaveLinkage is improved in efficiency%0a%3c   - CHG: simuUtil/SaveLinkage: if pre is True, the output is filename.pre%0a%3c          instead of filename.ped, which will be used when pre is False.%0a%3c   - CHG: (internal cleaning) fitness is implemented differently.%0a%3c   - CHG: (internal cleaning) randomMating sex determination no longer use bt. %0a%3c   - CHG: (internal cleaning) isMale class is replaced by a less fancier solution.%0a%3c   - CHG: (internal) change the use of pointer to iterator, in preparation for%0a%3c          compact presentation of binary alleles.%0a%3c   - NEW: add a compilable (imcomplete) binary library. All alleles are 0 or 1%0a%3c          and are stored internally as bits to save spaces.%0a%3c   - CHG: carray can now read/write binary allele. However, it can no longer %0a%3c          be a standalone type. It should always be only a reference to a %0a%3c          piece of memory. This simplifies the design since we do not have to%0a%3c          worry about extending, slicing etc.%0a%3c   - NEW: (important) addition of ba, baop modules for binary allele. Extensive%0a%3c          tests are needed but it is in working status now, including the arrGenotype%0a%3c          function series.%0a%3c   - NEW: you can now directly compare individuals and populations in python.%0a%3c   - CHG: carray is no longer a standalone type. (You can not create it in python)%0a%3c   - NEW: under DBG_MATING, size of each family is outputed as pop.dvars().famSizes%0a%3c   - NEW: initByFreq now recognize binary library and set 0,1 instead of 1,2,...%0a%3c   - NEW: Complete test cases for all operators.%0a%3c   - CHG: remove sep parameter of operators. Users need separator between output of%0a%3c          operators can use a output() operator manually. (sep is originally a bad idea.)%0a%3c   - NEW: (internal) Adapt the interface file and swig commands to SWIG 1.3.28.%0a%3c   - CHG: simuComplexDisease.py uses binary modules for SNP markers.%0a%3c %0a%3c version 0.6.11 - (Rev 119) - Jan 19, 2006%0a%3c   - DOC: add examples of penetrance operators to the reference manual.%0a%3c   - DOC: document using pyOperator to build pure-python operators%0a%3c   - NEW: check return value of pyPenetrance function to be within [0,1]%0a%3c   - NEW: add operator continueIf, in addition to terminateIf%0a%3c   - NEW: add 's' behavior to operator pause, which will invoke an interactive%0a%3c          python shell. Current population is by default exposed to the main %0a%3c          dictionary as variable 'pop. This can be controled by parameter %0a%3c          exposePop and popName.%0a%3c   - TST: add test case test_opPause.py%0a%3c   - NEW: add name parameter to population::exposeInfo and population::exposeAffectedness%0a%3c   - NEW: add subPop parameter to population::removeIndividual%0a%3c   - DOC: add full member function of population object list to reference manual%0a%3c   - DOC: add genotypic structure function list to reference manual%0a%3c   - DOC: add individual function list to refernce manual%0a%3c   - CHG: rename basicPentrance, basicSelector and basicQuanTrait to %0a%3c          mapPenetrance etc%0a%3c   - NEW: add multi-locus support to mapPenetrance, maPenetrance (and selector,%0a%3c          quantrait) except for locus, you can specify loci, and a longer map %0a%3c          or array of values.%0a%3c   - NEW: pyOperator can now be a during-mating operator. Pass a python function%0a%3c          func(pop, offspring, dad, mom, param) and set stage=DuringMating will do.%0a%3c   - BUG: fix another memory leak problem when an internal population is exposed%0a%3c   - NEW: improve the efficiency of dynamic type finding of population and %0a%3c          individual Decent performance boost for pyOperator, especially to %0a%3c          the DuringMating mode.%0a%3c   - NEW: use the new swig -external-runtime feature to generate swigpyrun.h, %0a%3c          this allows me to relocate some utility functions from the interface %0a%3c          file to utility.h%0a%3c   - NEW: let simuCDCV.py also trace and display the change of total allele frequency.%0a%3c   - NEW: add passOffspringOnly to pyOperator to speed up duringMating pyOperator.%0a%3c   - DOC: add simuPOP coding convension to simuPOP reference manual%0a%3c   - NEW: add simuOpt.valueOr, valueNot and valueAnd to simuOpt.py%0a%3c   - NEW: give correct prompt for pause operator regarding exported population name%0a%3c   - BUG: fix a bug in affectedSibpairSample, which will generate the wrong %0a%3c          sample if an operator is used a second time (So AffectedSibpairSample%0a%3c          is not affected).%0a%3c %0a%3c version 0.6.10 (Rev90) - Dec, 20th, 2005%0a%3c   - NEW: add recCount(loc) and recCount() to recombinator to track%0a%3c          the number of recombination event.%0a%3c   - NEW: add mutationCount(loc) and mutationCounts() to muators to track%0a%3c          the number of mutation event.%0a%3c   - NEW: add atPloidy=[0] to pointMutator.%0a%3c   - CHG: replace lociDist and locusDist by lociPos and locusPos. This kind of term %0a%3c          change should be done as soon as possible.%0a%3c   - NEW: add simuRecHotSpot.py which is used to generate SNP sample that can be used%0a%3c          to estimate recombination rate between markers.%0a%3c   - TST: convert test_mutator.py to unittest framework.%0a%3c   - NEW: add DBG_DEVEL for developer-level debug information.%0a%3c   - CHG: Make adjustment to how genotype structure is accessed from individual and %0a%3c          limit the number of subpopulations to 2^31. Save 8 bytes (24->16) for each%0a%3c          individual without noticable performance penalty. %0a%3c   - BUG: fix a tiny bug about optimization mode reporting%0a%3c   - TST: test_population is better now, but still way to go.%0a%3c   - CHG: separate simuComplexDisease.py into simuComplexDisease.py and %0a%3c          analComplexDisease.py. The first script will run simulation and generate%0a%3c          a population saved in binary format. The second script will run the old%0a%3c          analyses (apply penetrance function, plot figures, apply genehunter etc.)%0a%3c   - NEW: add more info to saved config file. (Add a command  line script)%0a%3c   - CHG: simuOpt does not load wx automatically when --noDialog is used.%0a%3c   - BUG: fix a memory leak problem with genotype structure introduced in 0.6.9.%0a%3c   - BUG: fix a memory leak problem with PyObject->double conversion.%0a%3c   - CHG: change listVars to ListVars for naming consistency. (Captal for standalone function)%0a%3c %0a%3c version 0.6.9 (Rev71) - Nov, 19th,  2005%0a%3c   - add pyOperator, the ultimate hybrid operator, this will considerably simplify many%0a%3c     coomplicated tasks %0a%3c   - start to convert all test cases to PyUnit. This means better test cases and more%0a%3c     thorough testing. I expect that code 0.7.0 is a version with much less bugs due to%0a%3c     this change. %0a%3c   - fix a bug in initializer (parameter proportion)%0a%3c   - fix a bug in recombinator concerning direct chrom copy.%0a%3c   - remove autoconf, Makefile.icc stuff to avoid confusion.%0a%3c   - fix a bug in migrator/MigrByCounts, which is introduced in 0.6.8%0a%3c   - add subversion  revision number to doc and binary releases for%0a%3c     better tracking of changes.%0a%3c   - fix windows binary import problem caused by mingw/msvcrt. Details please see %0a%3c     INSTALL.%0a%3c   - fix a bug in AffectedSibpairSample with countOnly parameter. (Not able to%0a%3c     handle None return.)%0a%3c   - add parameter --resampleOnly and --reAnalyzeOnly%0a%3c   - remove --optimzied --optimized etc from sys.argv after processing in simuOpt.py%0a%3c   - add simuViewPop.py (module and command) that can load and view popularion%0a%3c     property, calculate statistics etc.%0a%3c %0a%3c version 0.6.8 - Sep 21st, 2005%0a%3c   - fix a reporting bug in simuCDCV.py%0a%3c   - support sex chromosome and sex chromosome related mating, recombination issues.%0a%3c       -- sexChrom() in population::population(), %0a%3c       -- stop recombination between XY of male individual%0a%3c       -- determine sex in random mating by sex chromosome%0a%3c   - add parameters atPloidy, sex to initializers. Now, you can %0a%3c     initialize individuals at ploidy level and control assignment of sex.%0a%3c     Now, with so many options, these initializers are overly complicated.%0a%3c   - add support for sex-specific recombination rate. (parameter maleIntensity,%0a%3c     maleRate, and maleAfterLoci.)%0a%3c   - modify some features of simuComplexDisease.py%0a%3c   - release 0.6.8 and set up daily snapshots %0a%3c %0a%3c version 0.6.7 - Aug, 1st, 2005%0a%3c   - Add help() infor for the function version of operators and member functions.%0a%3c   - use Walker's alias algorithm for weighted sampling. Random mating with %0a%3c     selection should be only slightly slower than without selection. The performance%0a%3c     of simuCDCV.py increased by 15%25 using this algorithm. This method will use%0a%3c     a lot of RAM when population size is large (8*N bytes).%0a%3c   - add compiler info to Welcome message. (to see if it matches that of Python.)%0a%3c   - change the use of logfile in simuCDCV.py %0a%3c   - fix a bug in operator InitByFreq.%0a%3c %0a%3c version 0.6.6 - various GUI / wxPython improvements. Not released.%0a%3c   - add wxGetParam. Will be used when wxPython is available.%0a%3c   - add wxPython version of listVars. Much better than the text version %0a%3c     when wxPython is available.%0a%3c   - add some demographic functions in simuUtil.py%0a%3c   - use grid for tkinter box%0a%3c   - add migrIslandRates() and migrStepstoneRates() in simuUtil.py%0a%3c   - find an uncaptured out of memory exception.%0a%3c   - simuCDCV.py is better, with log file.%0a%3c   - stop using global variable gen. Add gen() function to individual population%0a%3c     and "gen" to local variable space. (Avoid using modular level global variable)%0a%3c     If this breaks anything, please let me know.%0a%3c   - Change penetrance from 1,1-s,1-2s to 1,1-s/2,1-s in simuComplexDisease.py and %0a%3c     simuCDCV.py. This is more natural.%0a%3c   - Add tooltip to the wxPython version of getParam.%0a%3c %0a%3c version 0.6.5 - userfriendliness (simuPOP scripts). May 1st, 2005%0a%3c   - separate user's guide and reference manual%0a%3c   - streamline getParam, usage, help etc.%0a%3c   - add scripts folder for common simupop templates%0a%3c   - add quiet option to simuPOP to suppress initial input%0a%3c   - add tk support for easy inputing of variables. This is %0a%3c     a major enhancement for userfriendliness. A first glimpse of a GUI%0a%3c   - fix a bug in saving shared variables. Exam saved format. Full backward%0a%3c     compatibility should start from here.%0a%3c   - simuComplexDisease.py. It uses almost all features of simuPOP%0a%3c   - remove headers support for object. They are not very useful and %0a%3c     hard to use.%0a%3c %0a%3c version 0.6.4 - efficiency and usability. Not released%0a%3c   - savePopulation saves local variables as well. This is used to save special info like %0a%3c     disease susceptibility loci. %0a%3c   - Label save population with max allowed allele number.%0a%3c   - merge some parameters through python code. Now, parameters like rate%0a%3c     can be either a number or an array. Same is true for value, indRange.%0a%3c   - caseControlSample can takes array cases/controls parameters.%0a%3c   - optimized genoStructure access, fix a bug about transferring the structure%0a%3c   - add LoadRandFam ( not easy :-)%0a%3c   - add parameters loci, chrom, indRange, subPop to dumper() and Dump()%0a%3c     Dump() is finally useful now.%0a%3c   - more efficient handling of ancestral pops%0a%3c %0a%3c version 0.6.3 -  Ancestral populations  Apr. 5, 2005%0a%3c   - add simulator::getPopulation get a copy of population%0a%3c   - add simuOpt to control simuPOP behavior, hide other modules%0a%3c   - add pointMutator%0a%3c   - change the meaning of rate in recombinator, add parameter intensity%0a%3c   - IMPORTANT: population can contain multiple generations. %0a%3c     add: population.pushAndDiscard (CPPONLY), Lots of work.%0a%3c       parameter ancestry for population.__init__%0a%3c       parameter ancestry for dumper%0a%3c   - add SavePopulations and LoadPopulations function.%0a%3c   - add stat(homoFreq and expHetero)%0a%3c   - fix a small bug with end %3c 0 and step > 1%0a%3c   - add splitSubPop(ByProportion), mergeSubPops member functions, operators %0a%3c       and functions.%0a%3c   - make duringMating oeprators re-order automatically%0a%3c   - add numOffspringsFunc, mode=MATE_NumOffsprings, MATE_GeometricDistribution etc%0a%3c   - add affected sibpair sampling scheme%0a%3c   - export to linkage format (affected sibpair samples)%0a%3c   - export to randfam format%0a%3c   - test parentsTagger, successfully track pedigree info   %0a%3c %0a%3c version 0.6.2 - better usage of vars  Mar, 23, 2005%0a%3c   - variables are now population associated. (pop.evaluate(...)%0a%3c   - add quantitative trait and penetrance support%0a%3c   - add dryrun parameter to apply and evolve%0a%3c   - dvars() function. (Automatic dictionary wrapper class)%0a%3c   - add more flexibility to initializers. (indRanges, subPop, atLoci etc)%0a%3c   - varPlotter becomes an operator.%0a%3c   - add D, D' and r2 measures%0a%3c   - add newSubPopSizeFunc option to Mating schemes%0a%3c   - change haploFreq to count all haplotypes.%0a%3c   - add multi-allele Fst, LD etc. (average)%0a%3c   - fixes all memory leak and reference count problems %0a%3c   - save/load auto format according to file extension.%0a%3c   - fix a small bug of unclosed files.%0a%3c   - finsh LoadSimulatorFromFiles (uses in pair with savePopulation operator)%0a%3c   - fix two bugs in AvgLD calculation and in recombinator.%0a%3c %0a%3c version 0.6.1  - usability and real applications Feb, 12, 2005%0a%3c   - add simuPOP_la library for long alleles.%0a%3c   - add exposePop option to pyEval (better pure-python operator support)%0a%3c   - better treatment for carray. (fix a bug)%0a%3c   - more statistics: Fst, Rst, H_est, H_obs etc%0a%3c   - read/write, FSTAT format%0a%3c   - use simple string instead of list to store statements.%0a%3c   - merge alleleCounter and popStat since alleleCounter may depend on popStat%0a%3c   - add operator pause for presentation purpose%0a%3c     new operator is called 'basicStat'%0a%3c   - Genomic control (use R/gap package, simple subpop vs subpop version)%0a%3c %0a%3c Version 0.6.0 - validation and distribution, Jan, 1st, 2005%0a%3c   - bug fixes%0a%3c   - better distribution process and binaries.%0a%3c   - remove internal language and use Python expression only%0a%3c   - more mutation models%0a%3c   - some hybrid operators added%0a%3c   - simuPOP website%0a%3c %0a%3c Version 0.5.9 - performance boost, dynamic population size  Dec. 12th, 2004%0a%3c   - re-write Bernulli-trials and gain 10x performance boost%0a%3c   - dynamic population size through newSubPopSizeExpr="".%0a%3c   - re-write migration to allow migration between subset of subpopulations%0a%3c   - ability to create new subpopulation through migration%0a%3c   - tagging x-y location.%0a%3c   - visualize migration%0a%3c %0a%3c Version 0.5.8 - selection Dec. 5nd, 2004%0a%3c   - add selection. %0a%3c   - better matings.%0a%3c   - bug fixes%0a%3c   - migration and selection examples%0a%3c %0a%3c version 0.5.7 -  serialization Nov. 24, 2004%0a%3c   - add serialization of simulator. Now I can save %0a%3c     population/simulator into a file and load it later.%0a%3c   - text, xml and binary formats are supported. XML support%0a%3c     is especially useful since the data can then be easily%0a%3c     loaded into other applications.%0a%3c %0a%3c version 0.5.6 -  expression. Nov. 19, 2004%0a%3c   - better shared variable interface %0a%3c   - (IMPORTANT!) implement a C/Matlab like language to calculate%0a%3c     statistics. Terminator has been re-written. Many applicaitons%0a%3c     are expected to be done easily.%0a%3c   - add more functions (abs etc) to inline expression)%0a%3c   - fixed some bugs.%0a%3c     %0a%3c Version 0.5.5, - more clean up,  more examples. Nov. 10, 2004%0a%3c   - clean the code. Use unsigned long when applicable. Elimilate all %0a%3c     compiling warnings.%0a%3c   - add some more test cases to cover all user features.%0a%3c   - Some real examples%0a%3c %0a%3c Version 0.5.4, Nov. 7, 2004 - clean the code. still working on the code base%0a%3c   - return default value for SharedVariable::getVar(name, default)%0a%3c     and display warning when in debug mode.%0a%3c   - shared variables can take string, double, array and dictionary.%0a%3c   - varParser can now take all kind of shared variables, using%0a%3c     %25str, %25double, %25array[index], %25dictionary{key}%0a%3c   - DataProvider is separated from Operator and is put in utility.h%0a%3c   - DataSource is separated from Visualizer so that other operators%0a%3c     can also use such sources.%0a%3c   - VarDataSource is provided so Visualizer etc can visaulize/display%0a%3c     shared variables directly.%0a%3c %0a%3c Version 0.5.3 Oct 10, 2004 -- some interesting new features%0a%3c   - shared variables (operators can store and retrieve variables by name)%0a%3c   - better written outputHelper. Now can print shared variables.%0a%3c     for example %25(gen)+%25shvar%0a%3c   - add "memory file" to improve efficiency under certain circumstances.%0a%3c   - overhaul of operator's filename parser (can take shared var now)%0a%3c   - provide binary distribution for linux, mac and solaris.%0a%3c   - create a batch file to build win32 binary. (Much easier to use)%0a%3c     distribute win32 binary. %0a%3c    %0a%3c Version 0.5.2  -- windows port, smaller distribution, better help()%0a%3c   - help(class/function) now uses doxygen generated document.%0a%3c   - distribute tools like .emacs.python.el and swig.xsl%0a%3c   - remove all unnecessary files from boost and gsl distribution%0a%3c     this is done by some perl scripts testing the usefulness of each file.%0a%3c   - ported to windows. see INSTALL.win32 for details %0a%3c     fixed two windows specific bugs.%0a%3c   - make DEBUG the default library (optimized will be used less frequently.)%0a%3c    %0a%3c Version 0.5.1%0a%3c   - better suport of GSL. add setRNG()%0a%3c   - better debug debug(code) instead of debug(level)%0a%3c   - better macOS support%0a%3c       %0a%3c Version 0.5%0a%3c   - a working distribution with lots of test cases%0a%3c   - ported to macOS, solaris%0a%3c %0a%3c Version 0.1 Friday 18, June 2004%0a%3c   %0a%3c   - Customize doxygen and direct output to http://bp6.stat.rice.edu:8080/simuPOP%0a%3c   - change README and make it doxygen mainpage%0a%3c   - create todo list and many other documents%0a%3c   - implement exception classes with error message sent to Python%0a%3c   - change most arrays to vector so that they can be accessed through python%0a%3c   - find the right way to do keyword argument from python. Very useful.%0a%3c   - Population basic structure is finished with basic operations.%0a%3c   - Operator start-every-end-at is implemented.%0a%3c   - genetic drifting sample program went fine.%0a%3c    %0a%3c %0a---%0a> (:includeSite http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/ChangeLog border=0 scroll=no width=100%25 height=600:)%0a\ No newline at end of file%0a
host:1232292122=127.0.0.1
author:1232171321=
diff:1232171321:1232171070:=
host:1232171321=127.0.0.1
author:1232171070=
diff:1232171070:1232171070:=1d0%0a%3c (:includeSite http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/ChangeLog border=0 scroll=no width=100%25 height=600:)%0a\ No newline at end of file%0a
host:1232171070=127.0.0.1
