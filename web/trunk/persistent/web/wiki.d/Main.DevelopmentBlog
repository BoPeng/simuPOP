version=pmwiki-2.1.27 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.6) Gecko/2009011913 Firefox/3.0.6 (.NET CLR 3.5.30729)
author=
csum=
ctime=1235234709
host=127.0.0.1
name=Main.DevelopmentBlog
rev=9
targets=
text=(:redirect [[Main.DevelopmentStories]]:)
time=1235238728
title=Unofficial stories about the development of simuPOP
author:1235238481=
diff:1235238481:1235238427:=73c73%0a%3c (:cell:) binary%0a---%0a> (:cell:) short%0a83d82%0a%3c (:cellnr:) Gcc%0a94,95c93%0a%3c (:cellnr:) Gcc%0a%3c (:cell:) long%0a---%0a> (:cell:) short%0a104a103%0a> %0a
host:1235238481=127.0.0.1
author:1235238427=
diff:1235238427:1235237337:=1d0%0a%3c (:title Unofficial stories about the development of simuPOP:)%0a57,63c56,60%0a%3c (:cell colspan=2:) &nbsp;%0a%3c (:cell align=center colspan=3:) N=10k%0a%3c (:cell align=center colspan=3:) N=100k%0a%3c (:cell align=center colspan=3:) N=1000k%0a%3c (:cellnr:) &nbsp;%0a%3c (:cell:) &nbsp;%0a%3c (:cell:) plain%0a---%0a> (:cell:) &nbsp%0a> (:cell colspan=3:) N=10000%0a> (:cell colspan=3:) N=100000%0a> (:cell colspan=3:) N=100000%0a> (:cellnr:) plain%0a72,73c69%0a%3c (:cellnr:) Gcc%0a%3c (:cell:) short%0a---%0a> (:cellnr:) a2%0a75d70%0a%3c (:cell:) b2%0a77c72%0a%3c (:cell:) a2%0a---%0a> (:cellnr:) a2%0a80c75%0a%3c (:cell:) a2%0a---%0a> (:cellnr:) a2%0a83,136d77%0a%3c (:cell:) short%0a%3c (:cell:) b2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:cell:) a2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:cell:) a2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:cell:) short%0a%3c (:cell:) b2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:cell:) a2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:cell:) a2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c %0a%3c (:cellnr:) Icc%0a%3c (:cell:) binary%0a%3c (:cell:) 0.34%0a%3c (:cell:) 0.41%0a%3c (:cell:) 0.63%0a%3c (:cell:) 4.78%0a%3c (:cell:) 7.83%0a%3c (:cell:) 9.07%0a%3c (:cell:) 97.84%0a%3c (:cell:) 121.65%0a%3c (:cell:) 160.67%0a%3c (:cellnr:) Icc%0a%3c (:cell:) short%0a%3c (:cell:) 0.32%0a%3c (:cell:) 0.38%0a%3c (:cell:) 0.57%0a%3c (:cell:) 4.21%0a%3c (:cell:) 7.83%0a%3c (:cell:) 9.07%0a%3c (:cell:) 97.84%0a%3c (:cell:) 121.65%0a%3c (:cell:) 160.67%0a%3c (:cellnr:) Icc%0a%3c (:cell:) long%0a%3c (:cell:) 0.32%0a%3c (:cell:) 0.38%0a%3c (:cell:) 0.57%0a%3c (:cell:) 4.21%0a%3c (:cell:) 7.83%0a%3c (:cell:) 9.07%0a%3c (:cell:) 97.84%0a%3c (:cell:) 121.65%0a%3c (:cell:) 160.67%0a140d80%0a%3c %0a
host:1235238427=127.0.0.1
author:1235237337=
diff:1235237337:1235237095:=55,80c55,56%0a%3c (:table border=1 cellpadding=5 cellspacing=0:)%0a%3c (:cell:) &nbsp%0a%3c (:cell colspan=3:) N=10000%0a%3c (:cell colspan=3:) N=100000%0a%3c (:cell colspan=3:) N=100000%0a%3c (:cellnr:) plain%0a%3c (:cell:) with selection%0a%3c (:cell:) with migration%0a%3c (:cell:) plain%0a%3c (:cell:) with selection%0a%3c (:cell:) with migration%0a%3c (:cell:) plain%0a%3c (:cell:) with selection%0a%3c (:cell:) with migration%0a%3c (:cellnr:) a2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:cellnr:) a2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:cellnr:) a2%0a%3c (:cell:) b2%0a%3c (:cell:) c2%0a%3c (:tableend:)%0a%3c %0a%3c %0a---%0a> %0a> %0a
host:1235237337=127.0.0.1
author:1235237095=
diff:1235237095:1235236711:=29,30c29%0a%3c -> Note that some modules could not be compiled by icc.%0a%3c %0a---%0a> %0a42,56c41%0a%3c -> if scons is installed.%0a%3c %0a%3c There are a lot more remarks than gcc and I cannot really fix them all. Anyway, simuPOP is compiled OK. All simuPOP tests and examples in the [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/doc/userGuide.pdf | simuPOP user's guide]] run smoothly.%0a%3c %0a%3c Does icc really help the performance of simuPOP? I do not have time for a thorough test so I run%0a%3c %0a%3c -> [@%0a%3c > cd simuPOP/test%0a%3c > python test_21_performance.py TestPerformance.TestRandomMating%0a%3c @]%0a%3c %0a%3c for both icc compiled and gcc compiled simuPOP (both for Python 2.6). Here is the result:%0a%3c %0a%3c %0a%3c %0a---%0a> -> if scons is installed.%0a\ No newline at end of file%0a
host:1235237095=127.0.0.1
author:1235236711=
diff:1235236711:1235236356:=11,41c11,17%0a%3c * Install icc. I uses a separate user account and install icc locally to that user so that it will not mess up with my current development environment. I use csh and set a @@~/.cshrc@@ file as follows:%0a%3c %0a%3c -> [@%0a%3c source /my/home/intel/Compiler/11.0/081/bin/iccvars.csh intel64%0a%3c setenv PATH /my/home/Python26/bin:${PATH}%0a%3c @]%0a%3c %0a%3c * Download Python 2.6 source code, and compile as follows%0a%3c %0a%3c -> [@%0a%3c > tar zxf Python-2.6.tgz%0a%3c > cd Python-2.6%0a%3c > setenv CC icc%0a%3c > setenv CXX icc%0a%3c > ./configure --prefix=/my/home/Python26%0a%3c > make%0a%3c > make install%0a%3c @]%0a%3c %0a%3c * (Optinal) download and install scons.%0a%3c %0a%3c * Then, I check up a clean copy of simuPOP, and compile simuPOP as usual:%0a%3c %0a%3c -> [@%0a%3c > python setup.py install%0a%3c @]%0a%3c -> or%0a%3c -> [@%0a%3c > scons install%0a%3c @]%0a%3c -> if scons is installed.%0a\ No newline at end of file%0a---%0a> * Install icc. I uses a separate user account and install icc locally to that user so that it will not mess up with my current development environment.%0a> %0a> * Download Python 2.6 source code.%0a> %0a> [=%0a> > blah%0a> =]%0a
host:1235236711=127.0.0.1
author:1235236356=
diff:1235236356:1235236350:=
host:1235236356=127.0.0.1
author:1235236350=
diff:1235236350:1235234709:=1,17c1,2%0a%3c !!! How to compile simuPOP with intel icc. (Feb, 21, 2009)%0a%3c %0a%3c simuPOP uses Visual C++ 2003 (win32, Python 2.4 and 2.5), Visual C++ Express 2008 (win32, Python 2.6), and GCC/G++ for all other platforms (MacOS, Linux, Solaris). These compilers are chosen because they are the compilers used for the official Python distributions.%0a%3c %0a%3c Intel icc is usually quoted to generate code that runs 20%25 to 30%25 faster than gcc compiled programs. I tried icc before, using a simuPOP version around 0.6.0 so I am interested to see whether or not simuPOP 0.9.2 can be compiled with icc.%0a%3c %0a%3c Here are the steps:%0a%3c %0a%3c * Download icc from Intel ICC website. The linux non-commercial version is free, and is the version I use.%0a%3c %0a%3c * Install icc. I uses a separate user account and install icc locally to that user so that it will not mess up with my current development environment.%0a%3c %0a%3c * Download Python 2.6 source code.%0a%3c %0a%3c [=%0a%3c > blah%0a%3c =]%0a---%0a> !!! How to compile simuPOP with intel icc.%0a> %0a
host:1235236350=127.0.0.1
author:1235234709=
diff:1235234709:1235234709:=1,2d0%0a%3c !!! How to compile simuPOP with intel icc.%0a%3c %0a
host:1235234709=127.0.0.1
