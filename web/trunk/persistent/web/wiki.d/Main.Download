version=pmwiki-2.1.27 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7 (.NET CLR 3.5.30729)
author=
csum=
ctime=1232170187
host=127.0.0.1
name=Main.Download
rev=75
targets=Main.MailingList
text=(:title Download and installation:)%0a(:toc:)%0a%25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | http://simupop.sourceforge.net/images/download_now.jpg]]%0a%0a%0a!! Availability%0a%0asimuPOP is distributed under [[http://www.gnu.org/licenses/gpl.html | '''a GPL license''']]. simuPOP is available on any platform where Python is available, and is currently tested under Windows (Windows 2000 and later), both 32 and 64 bit versions of Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a%0a!! Download%0a%0asimuPOP is hosted on [[http://www.sourceforge.net]]. All download files are avaiable from the [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]] page of the simuPOP project. Please download the latest simuPOP binary that matches your python distribution. For example, if you have enthough Python 2.5 installed, you should download simupop-x.x.x-py25-win32.exe. The installation procedure is platform dependent and should be familiar to you. %0a%0a!! Prerequisite and recommended tools%0a%0aPython (required)%0a%0a-> simuPOP works as a python library so a working version of python is required. Python is widely available on Linux/Mac systems but not for windows. For windows systems, you can use an [[http://www.python.org | official Python distribution]], or [[http://www.activestate.com/Products/ActivePython/ | ActiveState python]].%0a%0a->To test if you have python installed, open a terminal (or command window) and type in the command%0a%0a-->@@> python@@%0a%0a->You may need to type full path name (e.f. @@c:\python24\python@@) or add path to your @@$PATH@@, which is platform specific.%0a%0aR and RPy (optional)%0a%0a-> Owing to the ''glue language'’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using [[http://www.r-project.org/ | R]] and a Python module [[http://rpy.sourceforge.net/ | RPy]]. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy if your are familiar with R.%0a%0a-> %25red%25Note%25%25: You may have to compile rpy from source or install a lower version of Python or R if you cannot find an binary version of rpy for a particular combination of Python and R.%0a%0awxPython (optional)%0a%0a-> Although simuPOP uses the standard tkInter GUI toolkit when a graphical user interface is needed, it can make use of a [[http://www.wxpython.org/ | wxPython]] toolkit if it is available. wxPython is recommended because it generally produces nicer and more user-friendly dialogs and some functions can only use wxPython.%0a%0a%0a!! simuPOP installers (binary versions)%0a%0aInstallers for some specific combination of architecture (32 or 64 bit), operating systems (windows, Linux, Solaris or MacOS) and Python (2.4, 2.5, etc) are provided. If there is a binary package for your system, installation should be pretty straightforward.%0a%0a%25lfloat height=30%25 http://simupop.sourceforge.net/images/oswindows.gif%0aWindows binaries%0a%0a->Standard windows installers (32bit) are provided for Python 2.4, 2.5 and 2.6 versions. Windows 2000, XP and Vista systems are supported. If you have a version of Python installed on your system, you should be able to simply [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]], double click and install.%0a%0a->Due to the lack of testing environment, simuPOP is not tested under the 64bit version of the Windows Vista system. Please make sure that you test simuPOP before you use simuPOP under this system. Please report any problem (or success story) to the simuPOP [[Main/mailing list]].%0a%0a%25lfloat height=30%25 http://simupop.sourceforge.net/images/oslinux.png%0aLinux binaries%0a%0a-> Because there are so many different Linux flavors, it is generally recommended that you compile simuPOP from source. A compiled ''.tar.gz'' file for the RHEL5 (x86_64) operating systems is provided, more or less for testing purposes. To install this file, you will need to%0a%0a-->@@> tar -zxf simuPOP-XXX.tar.gz@@%0a%0a->and you can see directories like%0a%0a	usr/lib64/python2.4/site-packages%0a	usr/share/simuPOP%0a	usr/share/simuPOP/doc%0a	usr/share/simuPOP/test%0a%0a-> Copy python modules under site-packages to an appropriate directory, which is usually the python library directory. On a *nix system, it is something similar to @@/usr/lib/python/lib64/site-packages@@. You can copy the 'share' directory to any directory you like.%0a%0a-> If you do not have write permission to system python library directory, you can unpack simuPOP to a local directory and set environment variable @@PYTHONPATH@@ to the local site-packages directory.%0a%0a%25lfloat height=30%25 http://simupop.sourceforge.net/images/osmac.gif%0aMac OS X binaries%0a%0a-> A compiled ''.tar.gz'' file is provided so that you can uncompress to the Python site package directory or your user's directory. This binary is in Mac Universal format and supports both the PPC/x86 version of mac.%0a%0a%25lfloat height=30%25 http://simupop.sourceforge.net/images/ossolaris.gif%0aSolaris binaries%0a%0a-> A compiled ''.tar.gz'' file is provided for the Solaris 10 (SPARC) operating system. You can uncompress it to the Python site package directory or your user's directory. It should be straightforward to compile simuPOP from source on this system.%0a%0a!! Build simuPOP from source%0a%0aThe source code of each simuPOP release is available in ''.zip'' and ''.tgz'' formats. It is usually as easy as running%0a%0a->[@%0a> tar zxf simuPOP-x.x.x.tar.gz%0a> cd simuPOP-x.x.x%0a> python setup.py install%0a@]%0a%0ato build and install simuPOP.%0a%0aIt is not uncommon that you do not have write permission to the Python site library directory. In this case, you can install simuPOP to some local directory where you have write permission. If you are building simuPOP from source, you can use the @@prefix@@ option of the @@setup.py@@ script. For example,%0a%0a->@@> python setup.py install --prefix=/home/me/PythonModules@@%0a%0aor%0a%0a->@@> scons install prefix=/home/me/PythonModules@@%0a%0aif you use scons to build simuPOP.%0a%0aPython will build and install simuPOP to a local directory such as @@/home/me/PythonModules/python2.x/lib/site-packages@@. You then need to tell Python where to look for simuPOP modules, using environment variable @@PYTHONPATH@@. For linux bash, the syntax is%0a%0a->[@%0a> PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages%0a> export PYTHONPATH%0a@]%0a%0aYou may want to put these lines to your shell configuration file such as @@$HOME/.bashrc@@.%0a%0a!! Troubleshooting%0a%0a'''1. I installed simuPOP successfully under a windows system, but got an error message @@ImportError: DLL Load failed@@ when I import simuPOP.'''%0a%0aPlease download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]]. A similar problem exists for previous versions of simuPOP and windows, please refer to a [[http://mail.python.org/pipermail/python-list/2005-February/305172.html | list message]] for details.%0a%0a%0a'''2. I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@'''.%0a%0aYou may need to use some command like%0a->[@%0a> python setup.py config --include-dirs=/usr/include/linux install%0a@]%0aif zlib.h is not in standard directories.%0a%0a'''3. What compiler should I use on my mac?'''%0a%0aYou can install Xcode from [[http://developer.apple.com/tools/download/ | here]]...%0a%0a'''4. How can I use Intel i++?'''%0a%0aBecause Python has to be compiled with the same compiler as simuPOP, you will have to build python by yourself as well. I assume that you do not want to override system python, so here is what you need to do%0a%0a* Download and intall intel C++ compiler.%0a%0a* Download python source. Run, for example (assume you are running csh),%0a->[@%0a> tar zxf Python-2.4.3.tgz%0a> cd Python-2.4.3%0a> setenv CC icc %0a> setenv CXX icpc%0a> ./configure --with-cxx=icpc --prefix=/home/username/Python24%0a> make%0a> make install%0a@]%0a%0a* Build and install simuPOP%0a->[@%0a> cd simuPOP%0a> /home/username/Python24/bin/python setup.py install%0a@]%0a%0asimuPOP modules will be put under /home/username/Python24/lib(or lib64)/site-packages.%0a%0a'''5. Can I compile simuPOP using mingw under windows?'''%0a%0aThe problem with cygwin is that it has its own gcc, zlib and boost and it is tricky to not use them. Using a system without cygwin, you can%0a%0a* download mingw.exe, choose g++ and install, add c:/mingw/bin to $PATH%0a* download zlib, unpack to c:\zlib%0a* (Optional) download and install boost, using commands like:%0a->[@%0a> cd \boost\boost-1_36_0\tools\build\jam_src%0a> build.bat%0a@]%0a%0a->Copy bjam.exe to c:\boost\boost-1_36_0, and%0a%0a->[@%0a> cd \boost\boost-1_36_0%0a> bjam.exe -j4 "-sBUILD=debug release %3ccxxflags>-fPIC" "-sTOOLS=mingw" \%0a    -sNO_COMPRESSION=0 -sNO_BZIP2=1 -sNO_ZLIB=0 -sZLIB_INCLUDE=c:/zlib/include \%0a    -sZLIB_LIBRARY=c:/zlib/lib -sZLIB_BINARY=zdll --prefix=c:/boost \%0a    --with-iostreams --with-serialization --with=regex install%0a@]%0a* download python, install to c:\python24, add c:\python24 to $PATH%0a* download and unpack simuPOP source to c:\simuPOP%0a* if needed, download swig, unpack to c:\swigwin and add c:\swigwin to $PATH%0a* from the simuPOP directory, do%0a%0a->[@%0a> python setup.py bdist_wininst%0a@]%0a%0asetup.py looks in the win32 directory for boost and zlib libraries. If you would like to link to your versions of them, remove this directory and add @@--library-dirs@@ option to point to your libraries.%0a%0a%25red%25NOTE%25%25: for python2.4, you can get error saying %0a->[@%0aimport error: DSLL load failed: The specified procedure could not be found%0a@]%0aThis is because of a compatibility problem of mingw32/msvcrt and msv/msvcrt71. Please see http://jove.prohosting.com/iwave/ipython/issues.html for details. My fix is go to python24/Lib/distutils/cygwinccompiler.py, at line 139, change    %0a%0a->@@self.dll_libraries = []@@%0a%0ato%0a%0a->@@self.dll_libraries = ['msvcrt', 'python' + ''.join(sys.winver.split('.'))]@@%0a%0aand comment out the following if/else block. This will force simuPOP to use msvcrt, not msvcrt70 or msvcrt71 with msvc.%0a%0a'''6. When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...'''%0a%0aTry to locate @@libR.so@@ manually. If you cannot find it, you will need to reinstall R with option @@--enable-R-shlib@@ at the @@./configure@@ step.%0a
time=1236819286
title=Download and installation
author:1236819286=
diff:1236819286:1236819248:=176d175%0a%3c %0a180d178%0a%3c %0a
host:1236819286=127.0.0.1
author:1236819248=
diff:1236819248:1236818737:=162d161%0a%3c %0a164d162%0a%3c %0a
host:1236819248=127.0.0.1
author:1236818737=
diff:1236818737:1236818611:=122,123c122,123%0a%3c '''3. What compiler should I use on my mac?'''%0a%3c %0a---%0a> '''What compiler should I use on my mac?'''%0a> %0a126,127c126,127%0a%3c '''4. How can I use Intel i++?'''%0a%3c %0a---%0a> '''3. How can I use Intel i++?'''%0a> %0a151,152c151,152%0a%3c '''5. Can I compile simuPOP using mingw under windows?'''%0a%3c %0a---%0a> '''4. Can I compile simuPOP using mingw under windows?'''%0a> %0a193,194c193,194%0a%3c '''6. When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...'''%0a%3c %0a---%0a> '''5. When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...'''%0a> %0a
host:1236818737=127.0.0.1
author:1236818611=
diff:1236818611:1236818547:=109,110c109,110%0a%3c '''1. I installed simuPOP successfully under a windows system, but got an error message @@ImportError: DLL Load failed@@ when I import simuPOP.'''%0a%3c %0a---%0a> '''I installed simuPOP successfully under a windows system, but got an error message @@ImportError: DLL Load failed@@ when I import simuPOP.'''%0a> %0a114,115c114,115%0a%3c '''2. I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@'''.%0a%3c %0a---%0a> '''I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@'''.%0a> %0a126,127c126,127%0a%3c '''3. How can I use Intel i++?'''%0a%3c %0a---%0a> '''How can I use Intel i++?'''%0a> %0a151,152c151,152%0a%3c '''4. Can I compile simuPOP using mingw under windows?'''%0a%3c %0a---%0a> '''Can I compile simuPOP using mingw under windows?'''%0a> %0a193,194c193,194%0a%3c '''5. When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...'''%0a%3c %0a---%0a> '''When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...'''%0a> %0a
host:1236818611=127.0.0.1
author:1236818547=
diff:1236818547:1236818478:=155,157c155,157%0a%3c * download mingw.exe, choose g++ and install, add c:/mingw/bin to $PATH%0a%3c * download zlib, unpack to c:\zlib%0a%3c * (Optional) download and install boost, using commands like:%0a---%0a> # download mingw.exe, choose g++ and install, add c:/mingw/bin to $PATH%0a> # download zlib, unpack to c:\zlib%0a> # (Optional) download and install boost, using commands like:%0a170,173c170,173%0a%3c * download python, install to c:\python24, add c:\python24 to $PATH%0a%3c * download and unpack simuPOP source to c:\simuPOP%0a%3c * if needed, download swig, unpack to c:\swigwin and add c:\swigwin to $PATH%0a%3c * from the simuPOP directory, do%0a---%0a> # download python, install to c:\python24, add c:\python24 to $PATH%0a> # download and unpack simuPOP source to c:\simuPOP%0a> # if needed, download swig, unpack to c:\swigwin and add c:\swigwin to $PATH%0a> # from the simuPOP directory, do%0a193,195c193,195%0a%3c '''When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...'''%0a%3c %0a%3c Try to locate @@libR.so@@ manually. If you cannot find it, you will need to reinstall R with option @@--enable-R-shlib@@ at the @@./configure@@ step.%0a---%0a> * When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...%0a> %0a> -> Try to locate @@libR.so@@ manually. If you cannot find it, you will need to reinstall R with option @@--enable-R-shlib@@ at the @@./configure@@ step.%0a
host:1236818547=127.0.0.1
author:1236818478=
diff:1236818478:1236818451:=162c162%0a%3c ->Copy bjam.exe to c:\boost\boost-1_36_0, and%0a---%0a> Copy bjam.exe to c:\boost\boost-1_36_0, and%0a
host:1236818478=127.0.0.1
author:1236818451=
diff:1236818451:1236818398:=130,132c130,132%0a%3c * Download and intall intel C++ compiler.%0a%3c %0a%3c * Download python source. Run, for example (assume you are running csh),%0a---%0a> # Download and intall intel C++ compiler.%0a> %0a> # Download python source. Run, for example (assume you are running csh),%0a142,143c142%0a%3c %0a%3c * Build and install simuPOP%0a---%0a> # Build and install simuPOP%0a151,152c150,151%0a%3c '''Can I compile simuPOP using mingw under windows?'''%0a%3c %0a---%0a> ***Can I compile simuPOP using mingw under windows?***%0a> %0a
host:1236818451=127.0.0.1
author:1236818398=
diff:1236818398:1236818017:=116,117c116,117%0a%3c You may need to use some command like%0a%3c ->[@%0a---%0a> -> You may need to use some command like%0a> -->[@%0a120,121c120,121%0a%3c if zlib.h is not in standard directories.%0a%3c %0a---%0a> ->if zlib.h is not in standard directories.%0a> %0a141a142%0a> %0a
host:1236818398=127.0.0.1
author:1236818017=
diff:1236818017:1236815727:=122,140c122,140%0a%3c '''What compiler should I use on my mac?'''%0a%3c %0a%3c You can install Xcode from [[http://developer.apple.com/tools/download/ | here]]...%0a%3c %0a%3c '''How can I use Intel i++?'''%0a%3c %0a%3c Because Python has to be compiled with the same compiler as simuPOP, you will have to build python by yourself as well. I assume that you do not want to override system python, so here is what you need to do%0a%3c %0a%3c # Download and intall intel C++ compiler.%0a%3c %0a%3c # Download python source. Run, for example (assume you are running csh),%0a%3c ->[@%0a%3c > tar zxf Python-2.4.3.tgz%0a%3c > cd Python-2.4.3%0a%3c > setenv CC icc %0a%3c > setenv CXX icpc%0a%3c > ./configure --with-cxx=icpc --prefix=/home/username/Python24%0a%3c > make%0a%3c > make install%0a---%0a> * I cannot find gcc for my mac...%0a> %0a> -> Try to install xcode from [[http://developer.apple.com/tools/download/ | here]]...%0a> %0a> * How can I use Intel i++?%0a> %0a> -> Because Python has to be compiled with the same compiler as simuPOP, you will have to build python by yourself as well. I assume that you do not want to override system python, so here is what you need to do%0a> %0a> ->download intel C++ compiler (linux, non-commercial version) and install. icc can beinstalled locally. Note that for 64bit systems, the bin directory is intel/cce/xxx/bin, not intel/cc/xxx/bin. Make sure you source file intel/cce/xxx/bin/ccvars.xxx for the shell you use.%0a> %0a> ->download python source. Run, for example,%0a> -->[@%0a>      > tar zxf Python-2.4.3.tgz%0a>      > cd Python-2.4.3%0a>      > setenv CC icc (for csh)%0a>      > setenv CXX icpc (for csh)%0a>      > ./configure --with-cxx=icpc --prefix=/home/username/Python24%0a>      > make%0a>      > make install%0a142,146c142,145%0a%3c %0a%3c # Build and install simuPOP%0a%3c ->[@%0a%3c > cd simuPOP%0a%3c > /home/username/Python24/bin/python setup.py install%0a---%0a> ->build and install simuPOP%0a> -->[@%0a>      > cd simuPOP%0a>      > /home/username/Python24/bin/python setup.py install%0a148,192c147,194%0a%3c %0a%3c simuPOP modules will be put under /home/username/Python24/lib(or lib64)/site-packages.%0a%3c %0a%3c ***Can I compile simuPOP using mingw under windows?***%0a%3c %0a%3c The problem with cygwin is that it has its own gcc, zlib and boost and it is tricky to not use them. Using a system without cygwin, you can%0a%3c %0a%3c # download mingw.exe, choose g++ and install, add c:/mingw/bin to $PATH%0a%3c # download zlib, unpack to c:\zlib%0a%3c # (Optional) download and install boost, using commands like:%0a%3c ->[@%0a%3c > cd \boost\boost-1_36_0\tools\build\jam_src%0a%3c > build.bat%0a%3c @]%0a%3c Copy bjam.exe to c:\boost\boost-1_36_0, and%0a%3c ->[@%0a%3c > cd \boost\boost-1_36_0%0a%3c > bjam.exe -j4 "-sBUILD=debug release %3ccxxflags>-fPIC" "-sTOOLS=mingw" \%0a%3c     -sNO_COMPRESSION=0 -sNO_BZIP2=1 -sNO_ZLIB=0 -sZLIB_INCLUDE=c:/zlib/include \%0a%3c     -sZLIB_LIBRARY=c:/zlib/lib -sZLIB_BINARY=zdll --prefix=c:/boost \%0a%3c     --with-iostreams --with-serialization --with=regex install%0a%3c @]%0a%3c # download python, install to c:\python24, add c:\python24 to $PATH%0a%3c # download and unpack simuPOP source to c:\simuPOP%0a%3c # if needed, download swig, unpack to c:\swigwin and add c:\swigwin to $PATH%0a%3c # from the simuPOP directory, do%0a%3c ->[@%0a%3c > python setup.py bdist_wininst%0a%3c @]%0a%3c setup.py looks in the win32 directory for boost and zlib libraries. If you would like to link to your versions of them, remove this directory and add @@--library-dirs@@ option to point to your libraries.%0a%3c %0a%3c %25red%25NOTE%25%25: for python2.4, you can get error saying %0a%3c ->[@%0a%3c import error: DSLL load failed: The specified procedure could not be found%0a%3c @]%0a%3c This is because of a compatibility problem of mingw32/msvcrt and msv/msvcrt71. Please see http://jove.prohosting.com/iwave/ipython/issues.html for details. My fix is go to python24/Lib/distutils/cygwinccompiler.py, at line 139, change    %0a%3c %0a%3c ->@@self.dll_libraries = []@@%0a%3c %0a%3c to%0a%3c %0a%3c ->@@self.dll_libraries = ['msvcrt', 'python' + ''.join(sys.winver.split('.'))]@@%0a%3c %0a%3c and comment out the following if/else block. This will force simuPOP to use msvcrt, not msvcrt70 or msvcrt71 with msvc.%0a%3c %0a---%0a> ->simuPOP modules will be put under /home/username/Python24/lib(or lib64)/site-packages,%0a> %0a> * I would like to use mingw under windows%0a> %0a> -> The problem with cygwin is that it has its own gcc, zlib and boost and it is tricky%0a> to not use them. Using a system without cygwin, you can%0a> %0a>   1. download mingw.exe, choose g++ and install, add c:/mingw/bin to $PATH%0a>   %0a>   2. download zlib, unpack to c:\zlib%0a>   %0a>   3. (Optional) download and install boost, using commands like:%0a>     > cd \boost\boost-1_36_0\tools\build\jam_src%0a> 	> build.bat%0a> 	copy bjam.exe to c:\boost\boost-1_36_0,%0a> 	> cd \boost\boost-1_36_0%0a> 	> bjam.exe -j4 "-sBUILD=debug release %3ccxxflags>-fPIC" "-sTOOLS=mingw" \%0a>      -sNO_COMPRESSION=0 -sNO_BZIP2=1 -sNO_ZLIB=0 -sZLIB_INCLUDE=c:/zlib/include \%0a> 	 -sZLIB_LIBRARY=c:/zlib/lib -sZLIB_BINARY=zdll --prefix=c:/boost \%0a> 	 --with-iostreams --with-serialization install%0a> %0a>   4. download python, install to c:\python24, add c:\python24 to $PATH%0a>   %0a>   5. download and unpack simuPOP source to c:\simuPOP%0a> %0a>   6. if needed, download swig, unpack to c:\swigwin and add c:\swigwin to $PATH%0a> %0a>   7. from the simuPOP directory, do%0a>      > python setup.py bdist_wininst%0a> 	setup.py looks in the win32 directory for boost and zlib libraries. If you %0a> 	would like to link to your versions of them, remove this directory and add%0a> 	  --library-dirs%0a> 	option to point to your libraries.%0a> %0a> %0a> -> NOTE: for python2.4, you can get error saying %0a>     import error: DSLL load failed: The specified procedure could not be found%0a>   This is because of a compatibility problem of mingw32/msvcrt and msv/msvcrt71. %0a>   please see http://jove.prohosting.com/iwave/ipython/issues.html for details. %0a>   My fix is go to python24/Lib/distutils/cygwinccompiler.py, at line 139, change%0a>     self.dll_libraries = [] %0a>   to%0a>     self.dll_libraries = ['msvcrt', 'python' + ''.join(sys.winver.split('.'))]%0a>   and comment out the following if/else block. This will force simuPOP to use %0a>   msvcrt, not msvcrt70 or msvcrt71 with msvc.%0a> %0a> %0a> %0a
host:1236818017=127.0.0.1
author:1236815727=
diff:1236815727:1236815594:=109,116c109%0a%3c '''I installed simuPOP successfully under a windows system, but got an error message @@ImportError: DLL Load failed@@ when I import simuPOP.'''%0a%3c %0a%3c Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]]. A similar problem exists for previous versions of simuPOP and windows, please refer to a [[http://mail.python.org/pipermail/python-list/2005-February/305172.html | list message]] for details.%0a%3c %0a%3c %0a%3c '''I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@'''.%0a%3c %0a%3c -> You may need to use some command like%0a---%0a> '''I installed simuPOP successfully under a windows system, but see the following error message when you import simuPOP''' %0a118c111,113%0a%3c > python setup.py config --include-dirs=/usr/include/linux install%0a---%0a> ImportError: DLL load failed: This application has failed to start%0a> because the application configuration is incorrect. Reinstalling the%0a> application may fix this problem.%0a119a115,124%0a> %0a> ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]]. A similar problem exists for previous versions of simuPOP and windows, please refer to a [[http://mail.python.org/pipermail/python-list/2005-February/305172.html | list message]] for details.%0a> %0a> %0a> '''I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@'''.%0a> %0a> -> You may need to use some command like%0a> -->[@%0a> > python setup.py config --include-dirs=/usr/include/linux install%0a> @]%0a
host:1236815727=127.0.0.1
author:1236815594=
diff:1236815594:1236810936:=109c109%0a%3c '''I installed simuPOP successfully under a windows system, but see the following error message when you import simuPOP''' %0a---%0a> * I installed simuPOP successfully under a windows system, but see the following error message when you import simuPOP%0a119,120c119,120%0a%3c '''I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@'''.%0a%3c %0a---%0a> * I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@.%0a> %0a
host:1236815594=127.0.0.1
author:1236810936=
diff:1236810936:1236810871:=
host:1236810936=127.0.0.1
author:1236810871=
diff:1236810871:1236810734:=154,199c154,155%0a%3c * I would like to use mingw under windows%0a%3c %0a%3c -> The problem with cygwin is that it has its own gcc, zlib and boost and it is tricky%0a%3c to not use them. Using a system without cygwin, you can%0a%3c %0a%3c   1. download mingw.exe, choose g++ and install, add c:/mingw/bin to $PATH%0a%3c   %0a%3c   2. download zlib, unpack to c:\zlib%0a%3c   %0a%3c   3. (Optional) download and install boost, using commands like:%0a%3c     > cd \boost\boost-1_36_0\tools\build\jam_src%0a%3c 	> build.bat%0a%3c 	copy bjam.exe to c:\boost\boost-1_36_0,%0a%3c 	> cd \boost\boost-1_36_0%0a%3c 	> bjam.exe -j4 "-sBUILD=debug release %3ccxxflags>-fPIC" "-sTOOLS=mingw" \%0a%3c      -sNO_COMPRESSION=0 -sNO_BZIP2=1 -sNO_ZLIB=0 -sZLIB_INCLUDE=c:/zlib/include \%0a%3c 	 -sZLIB_LIBRARY=c:/zlib/lib -sZLIB_BINARY=zdll --prefix=c:/boost \%0a%3c 	 --with-iostreams --with-serialization install%0a%3c %0a%3c   4. download python, install to c:\python24, add c:\python24 to $PATH%0a%3c   %0a%3c   5. download and unpack simuPOP source to c:\simuPOP%0a%3c %0a%3c   6. if needed, download swig, unpack to c:\swigwin and add c:\swigwin to $PATH%0a%3c %0a%3c   7. from the simuPOP directory, do%0a%3c      > python setup.py bdist_wininst%0a%3c 	setup.py looks in the win32 directory for boost and zlib libraries. If you %0a%3c 	would like to link to your versions of them, remove this directory and add%0a%3c 	  --library-dirs%0a%3c 	option to point to your libraries.%0a%3c %0a%3c %0a%3c -> NOTE: for python2.4, you can get error saying %0a%3c     import error: DSLL load failed: The specified procedure could not be found%0a%3c   This is because of a compatibility problem of mingw32/msvcrt and msv/msvcrt71. %0a%3c   please see http://jove.prohosting.com/iwave/ipython/issues.html for details. %0a%3c   My fix is go to python24/Lib/distutils/cygwinccompiler.py, at line 139, change%0a%3c     self.dll_libraries = [] %0a%3c   to%0a%3c     self.dll_libraries = ['msvcrt', 'python' + ''.join(sys.winver.split('.'))]%0a%3c   and comment out the following if/else block. This will force simuPOP to use %0a%3c   msvcrt, not msvcrt70 or msvcrt71 with msvc.%0a%3c %0a%3c %0a%3c %0a---%0a> %0a> %0a
host:1236810871=127.0.0.1
author:1236810734=
diff:1236810734:1236810595:=131,155d130%0a%3c * How can I use Intel i++?%0a%3c %0a%3c -> Because Python has to be compiled with the same compiler as simuPOP, you will have to build python by yourself as well. I assume that you do not want to override system python, so here is what you need to do%0a%3c %0a%3c ->download intel C++ compiler (linux, non-commercial version) and install. icc can beinstalled locally. Note that for 64bit systems, the bin directory is intel/cce/xxx/bin, not intel/cc/xxx/bin. Make sure you source file intel/cce/xxx/bin/ccvars.xxx for the shell you use.%0a%3c %0a%3c ->download python source. Run, for example,%0a%3c -->[@%0a%3c      > tar zxf Python-2.4.3.tgz%0a%3c      > cd Python-2.4.3%0a%3c      > setenv CC icc (for csh)%0a%3c      > setenv CXX icpc (for csh)%0a%3c      > ./configure --with-cxx=icpc --prefix=/home/username/Python24%0a%3c      > make%0a%3c      > make install%0a%3c @]%0a%3c ->build and install simuPOP%0a%3c -->[@%0a%3c      > cd simuPOP%0a%3c      > /home/username/Python24/bin/python setup.py install%0a%3c @]%0a%3c ->simuPOP modules will be put under /home/username/Python24/lib(or lib64)/site-packages,%0a%3c %0a%3c %0a%3c %0a
host:1236810734=127.0.0.1
author:1236810595=
diff:1236810595:1236810520:=127,130d126%0a%3c * I cannot find gcc for my mac...%0a%3c %0a%3c -> Try to install xcode from [[http://developer.apple.com/tools/download/ | here]]...%0a%3c %0a
host:1236810595=127.0.0.1
author:1236810520=
diff:1236810520:1236810480:=119,120c119,121%0a%3c * I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@.%0a%3c %0a---%0a> Q: I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@.%0a> %0a> A:%0a
host:1236810520=127.0.0.1
author:1236810480=
diff:1236810480:1236810462:=
host:1236810480=127.0.0.1
author:1236810462=
diff:1236810462:1236810268:=119,121c119,120%0a%3c Q: I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@.%0a%3c %0a%3c A:%0a---%0a> * I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@.%0a> %0a
host:1236810462=127.0.0.1
author:1236810268=
diff:1236810268:1236810246:=2d1%0a%3c (:toc:)%0a5c4,5%0a%3c %0a---%0a> (:toc:)%0a> %0a
host:1236810268=127.0.0.1
author:1236810246=
diff:1236810246:1236810196:=3,5d2%0a%3c %0a%3c (:toc:)%0a%3c %0a
host:1236810246=127.0.0.1
author:1236810196=
diff:1236810196:1236809579:=26a27,28%0a> -> %25red%25Note%25%25: Under a *nix* system, if you can not locate @@libR.so@@, your R installation cannot be linked to RPy. You will have to reinstall R with option @@--enable-R-shlib@@ at the @@./configure@@ step.%0a> %0a44a47,57%0a> ->%25red%25'''NOTE'''%25%25: If your see the following error message when you import simuPOP%0a> %0a> -->[@%0a> ImportError: DLL load failed: This application has failed to start%0a> because the application configuration is incorrect. Reinstalling the%0a> application may fix this problem.%0a> @]%0a> %0a> ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]]. A similar problem exists for previous versions of simuPOP and windows, please refer to a [[http://mail.python.org/pipermail/python-list/2005-February/305172.html | list message]] for details.%0a> %0a> %0a73,74c86,87%0a%3c !! Build simuPOP from source%0a%3c %0a---%0a> !!! Source code%0a> %0a83,84c96,100%0a%3c to build and install simuPOP.%0a%3c %0a---%0a> to build and install simuPOP. Please consult [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/INSTALL?revision=1726 | Installation]] for detailed information about supported compilers and operating systems.%0a> %0a> %0a> !! Install simuPOP locally%0a> %0a104,126d119%0a%3c !! Troubleshooting%0a%3c %0a%3c * I installed simuPOP successfully under a windows system, but see the following error message when you import simuPOP%0a%3c -->[@%0a%3c ImportError: DLL load failed: This application has failed to start%0a%3c because the application configuration is incorrect. Reinstalling the%0a%3c application may fix this problem.%0a%3c @]%0a%3c %0a%3c ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]]. A similar problem exists for previous versions of simuPOP and windows, please refer to a [[http://mail.python.org/pipermail/python-list/2005-February/305172.html | list message]] for details.%0a%3c %0a%3c %0a%3c * I can not compile simuPOP under a linux system because the build script can not find @@zlib.h@@.%0a%3c %0a%3c -> You may need to use some command like%0a%3c -->[@%0a%3c > python setup.py config --include-dirs=/usr/include/linux install%0a%3c @]%0a%3c ->if zlib.h is not in standard directories.%0a%3c %0a%3c * When I compile @@rpy@@ from source, I get some sort of link error indicating a missing @@libR.so@@, but I have R installed ...%0a%3c %0a%3c -> Try to locate @@libR.so@@ manually. If you cannot find it, you will need to reinstall R with option @@--enable-R-shlib@@ at the @@./configure@@ step.%0a
host:1236810196=127.0.0.1
author:1236809579=
diff:1236809579:1236809173:=9,10c9,10%0a%3c simuPOP is hosted on [[http://www.sourceforge.net]]. All download files are avaiable from the [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]] page of the simuPOP project. Please download the latest simuPOP binary that matches your python distribution. For example, if you have enthough Python 2.5 installed, you should download simupop-x.x.x-py25-win32.exe. The installation procedure is platform dependent and should be familiar to you. %0a%3c %0a---%0a> simuPOP is hosted on [[http://www.sourceforge.net]]. All download files are avaiable from the [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]] page of the simuPOP project.%0a> %0a27,30d26%0a%3c -> %25red%25Note%25%25: Under a *nix* system, if you can not locate @@libR.so@@, your R installation cannot be linked to RPy. You will have to reinstall R with option @@--enable-R-shlib@@ at the @@./configure@@ step.%0a%3c %0a%3c -> %25red%25Note%25%25: You may have to compile rpy from source or install a lower version of Python or R if you cannot find an binary version of rpy for a particular combination of Python and R.%0a%3c %0a
host:1236809579=127.0.0.1
author:1236809173=
diff:1236809173:1236809055:=51,53c51,53%0a%3c ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]]. A similar problem exists for previous versions of simuPOP and windows, please refer to a [[http://mail.python.org/pipermail/python-list/2005-February/305172.html | list message]] for details.%0a%3c %0a%3c %0a---%0a> ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]].%0a> %0a> %0a
host:1236809173=127.0.0.1
author:1236809055=
diff:1236809055:1236809012:=68,71c68,76%0a%3c -> Copy python modules under site-packages to an appropriate directory, which is usually the python library directory. On a *nix system, it is something similar to @@/usr/lib/python/lib64/site-packages@@. You can copy the 'share' directory to any directory you like.%0a%3c %0a%3c -> If you do not have write permission to system python library directory, you can unpack simuPOP to a local directory and set environment variable @@PYTHONPATH@@ to the local site-packages directory.%0a%3c %0a---%0a> -> Copy python modules under site-packages to an appropriate directory, which is%0a> usually the python library directory. On a *nix system, it is something similar%0a> to /usr/lib/python/lib64/site-packages. You can copy the 'share' directory%0a> to any directory you like.%0a> %0a> -> If you do not have write permission to system python library directory,%0a> you can unpack simuPOP to a local directory and set environment variable%0a> @@PYTHONPATH@@ to the local site-packages directory.%0a> %0a
host:1236809055=127.0.0.1
author:1236809012=
diff:1236809012:1236808696:=13,14c13,14%0a%3c Python (required)%0a%3c %0a---%0a> Python%0a> %0a53c53,57%0a%3c %0a---%0a> %25lfloat height=30%25 http://simupop.sourceforge.net/images/osmac.gif%0a> Mac OS X binaries%0a> %0a> -> A compiled ''.tar.gz'' file is provided so that you can uncompress to the Python site package directory or your user's directory. This binary is in Mac Universal format and supports both the PPC/x86 version of mac.%0a> %0a57,81c61,62%0a%3c -> Because there are so many different Linux flavors, it is generally recommended that you compile simuPOP from source. A compiled ''.tar.gz'' file for the RHEL5 (x86_64) operating systems is provided, more or less for testing purposes. To install this file, you will need to%0a%3c %0a%3c -->@@> tar -zxf simuPOP-XXX.tar.gz@@%0a%3c %0a%3c ->and you can see directories like%0a%3c %0a%3c 	usr/lib64/python2.4/site-packages%0a%3c 	usr/share/simuPOP%0a%3c 	usr/share/simuPOP/doc%0a%3c 	usr/share/simuPOP/test%0a%3c %0a%3c -> Copy python modules under site-packages to an appropriate directory, which is%0a%3c usually the python library directory. On a *nix system, it is something similar%0a%3c to /usr/lib/python/lib64/site-packages. You can copy the 'share' directory%0a%3c to any directory you like.%0a%3c %0a%3c -> If you do not have write permission to system python library directory,%0a%3c you can unpack simuPOP to a local directory and set environment variable%0a%3c @@PYTHONPATH@@ to the local site-packages directory.%0a%3c %0a%3c %25lfloat height=30%25 http://simupop.sourceforge.net/images/osmac.gif%0a%3c Mac OS X binaries%0a%3c %0a%3c -> A compiled ''.tar.gz'' file is provided so that you can uncompress to the Python site package directory or your user's directory. This binary is in Mac Universal format and supports both the PPC/x86 version of mac.%0a%3c %0a---%0a> -> Because there are so many different Linux flavors, it is generally recommended that you compile simuPOP from source. A compiled ''.tar.gz'' file for the RHEL5 (x86_64) operating systems is provided, just for testing purposes. Fortunately, because ''gcc'' is pre-installed for all linux systems, it should be quite straightforward to compile and install simuPOP from source.%0a> %0a
host:1236809012=127.0.0.1
author:1236808696=
diff:1236808696:1236808668:=14d13%0a%3c %0a24d22%0a%3c %0a28d25%0a%3c %0a
host:1236808696=127.0.0.1
author:1236808668=
diff:1236808668:1236808396:=20,28c20,23%0a%3c ->You may need to type full path name (e.f. @@c:\python24\python@@) or add path to your @@$PATH@@, which is platform specific.%0a%3c %0a%3c R and RPy (optional)%0a%3c -> Owing to the ''glue language'’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using [[http://www.r-project.org/ | R]] and a Python module [[http://rpy.sourceforge.net/ | RPy]]. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy if your are familiar with R.%0a%3c %0a%3c wxPython (optional)%0a%3c -> Although simuPOP uses the standard tkInter GUI toolkit when a graphical user interface is needed, it can make use of a [[http://www.wxpython.org/ | wxPython]] toolkit if it is available. wxPython is recommended because it generally produces nicer and more user-friendly dialogs and some functions can only use wxPython.%0a%3c %0a%3c %0a---%0a> ->You may need to type full path name (e.f. c:\python24\python) or add python path to your @@$PATH@@, which is platform specific.%0a> %0a> %0a> %0a98a94,105%0a> !! Additional tools%0a> %0a> The following tools are recommended, but not required for simuPOP applications.%0a> %0a> !!! R and RPy%0a> %0a> Owing to the ''glue language'’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using [[http://www.r-project.org/ | R]] and a Python module [[http://rpy.sourceforge.net/ | RPy]]. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy if your are familiar with R.%0a> %0a> !!! wxPython%0a> %0a> Although simuPOP uses the standard tkInter GUI toolkit when a graphical user interface is needed, it can make use of a [[http://www.wxpython.org/ | wxPython]] toolkit if it is available. %0a> %0a
host:1236808668=127.0.0.1
author:1236808396=
diff:1236808396:1236808308:=14,23c14,18%0a%3c -> simuPOP works as a python library so a working version of python is required. Python is widely available on Linux/Mac systems but not for windows. For windows systems, you can use an [[http://www.python.org | official Python distribution]], or [[http://www.activestate.com/Products/ActivePython/ | ActiveState python]].%0a%3c %0a%3c ->To test if you have python installed, open a terminal (or command window) and type in the command%0a%3c %0a%3c -->@@> python@@%0a%3c %0a%3c ->You may need to type full path name (e.f. c:\python24\python) or add python path to your @@$PATH@@, which is platform specific.%0a%3c %0a%3c %0a%3c %0a---%0a> %0a> -> simuPOP works as a python library so a working version of python is required. Python is widely available on Linux/Mac systems but not for windows. For windows system, you can use an [[http://www.python.org | official Python distribution]], or [[http://www.activestate.com/Products/ActivePython/ | ActiveState python]].%0a> %0a> %0a> %0a
host:1236808396=127.0.0.1
author:1236808308=
diff:1236808308:1236808281:=15,18c15,20%0a%3c -> simuPOP works as a python library so a working version of python is required. Python is widely available on Linux/Mac systems but not for windows. For windows system, you can use an [[http://www.python.org | official Python distribution]], or [[http://www.activestate.com/Products/ActivePython/ | ActiveState python]].%0a%3c %0a%3c %0a%3c %0a---%0a> -> simuPOP works as a python library so a working version of python is %0a> required. Python is widely available on Linux/Mac systems but not for%0a> windows. For windows system, you can use an [[http://www.python.org | official Python distribution]], or [[http://www.activestate.com/Products/ActivePython/ | ActiveState python]].%0a> %0a> %0a> %0a
host:1236808308=127.0.0.1
author:1236808281=
diff:1236808281:1236807994:=7,8c7,8%0a%3c !! Download%0a%3c %0a---%0a> !!Download%0a> %0a11,22c11,13%0a%3c !! Prerequisite and recommended tools%0a%3c %0a%3c Python%0a%3c %0a%3c -> simuPOP works as a python library so a working version of python is %0a%3c required. Python is widely available on Linux/Mac systems but not for%0a%3c windows. For windows system, you can use an [[http://www.python.org | official Python distribution]], or [[http://www.activestate.com/Products/ActivePython/ | ActiveState python]].%0a%3c %0a%3c %0a%3c %0a%3c !! simuPOP installers (binary versions)%0a%3c %0a---%0a> %0a> !!! simuPOP installers (binary versions)%0a> %0a
host:1236808281=127.0.0.1
author:1236807994=
diff:1236807994:1236807704:=14,15c14,15%0a%3c Installers for some specific combination of architecture (32 or 64 bit), operating systems (windows, Linux, Solaris or MacOS) and Python (2.4, 2.5, etc) are provided. If there is a binary package for your system, installation should be pretty straightforward.%0a%3c %0a---%0a> Binary versions of simuPOP for installing in popular operating systems are provided. If you can not find a version for your operating system, you will have to build your own binary version from the source package.%0a> %0a
host:1236807994=127.0.0.1
author:1236807704=
diff:1236807704:1236779571:=11c11,22%0a%3c %0a---%0a> !!! Source code%0a> %0a> The source code of each simuPOP release is available in ''.zip'' and ''.tgz'' formats. It is usually as easy as running%0a> %0a> ->[@%0a> > tar zxf simuPOP-x.x.x.tar.gz%0a> > cd simuPOP-x.x.x%0a> > python setup.py install%0a> @]%0a> %0a> to build and install simuPOP. Please consult [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/INSTALL?revision=1726 | Installation]] for detailed information about supported compilers and operating systems.%0a> %0a48,60d58%0a%3c !!! Source code%0a%3c %0a%3c The source code of each simuPOP release is available in ''.zip'' and ''.tgz'' formats. It is usually as easy as running%0a%3c %0a%3c ->[@%0a%3c > tar zxf simuPOP-x.x.x.tar.gz%0a%3c > cd simuPOP-x.x.x%0a%3c > python setup.py install%0a%3c @]%0a%3c %0a%3c to build and install simuPOP. Please consult [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/INSTALL?revision=1726 | Installation]] for detailed information about supported compilers and operating systems.%0a%3c %0a%3c %0a
host:1236807704=127.0.0.1
author:1236779571=
diff:1236779571:1236779515:=32,33d31%0a%3c ->Due to the lack of testing environment, simuPOP is not tested under the 64bit version of the Windows Vista system. Please make sure that you test simuPOP before you use simuPOP under this system. Please report any problem (or success story) to the simuPOP [[Main/mailing list]].%0a%3c %0a42,43c40,43%0a%3c ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | the Microsoft Visual C++ 2008 Redistributable Package]].%0a%3c %0a---%0a> ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]].%0a> %0a> ->Due to the lack of testing environment, simuPOP is not tested under the 64bit version of the Windows Vista system. Please make sure that you test simuPOP before you use simuPOP under this system. Please report any problem (or success story) to the simuPOP [[Main/mailing list]].%0a> %0a
host:1236779571=127.0.0.1
author:1236779515=
diff:1236779515:1236779421:=32,34c32,33%0a%3c ->%25red%25'''NOTE'''%25%25: If your see the following error message when you import simuPOP%0a%3c %0a%3c -->[@%0a---%0a> ->%25red%25'''NOTE'''%25%25: If your see the following error when you import simuPOP%0a> ->[@%0a39,41c38,39%0a%3c %0a%3c ->Please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]].%0a%3c %0a---%0a> ->please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]].%0a> %0a
host:1236779515=127.0.0.1
author:1236779421=
diff:1236779421:1236779205:=32,39c32,33%0a%3c ->%25red%25'''NOTE'''%25%25: If your see the following error when you import simuPOP%0a%3c ->[@%0a%3c ImportError: DLL load failed: This application has failed to start%0a%3c because the application configuration is incorrect. Reinstalling the%0a%3c application may fix this problem.%0a%3c @]%0a%3c ->please download and install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]].%0a%3c %0a---%0a> ->'''NOTE''': If your windows machine is not up to date, you may need to install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]]  to avoid a simuPOP import error.%0a> %0a
host:1236779421=127.0.0.1
author:1236779205=
diff:1236779205:1236779178:=32,33c32,33%0a%3c ->'''NOTE''': If your windows machine is not up to date, you may need to install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]]  to avoid a simuPOP import error.%0a%3c %0a---%0a> ->**NOTE**: If your windows machine is not up to date, you may need to install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]]  to avoid a simuPOP import error.%0a> %0a
host:1236779205=127.0.0.1
author:1236779178=
diff:1236779178:1235771146:=32,33d31%0a%3c ->**NOTE**: If your windows machine is not up to date, you may need to install [[http://www.microsoft.com/downloads/details.aspx?familyid=9B2DA534-3E03-4391-8A4D-074B9F2BC1BF&displaylang=en | Microsoft Visual C++ 2008 Redistributable Package]]  to avoid a simuPOP import error.%0a%3c %0a
host:1236779178=127.0.0.1
author:1235771146=
diff:1235771146:1235770633:=51,52c51,52%0a%3c It is not uncommon that you do not have write permission to the Python site library directory. In this case, you can install simuPOP to some local directory where you have write permission. If you are building simuPOP from source, you can use the @@prefix@@ option of the @@setup.py@@ script. For example,%0a%3c %0a---%0a> It is not uncommon that you do not have write permission to the Python site library directory. In this case, you can install simuPOP to some local directory where you have write permission. If you are building simuPOP from source, you can use the @@--prefix@@ option of the @@setup.py@@ script. For example,%0a> %0a
host:1235771146=127.0.0.1
author:1235770633=
diff:1235770633:1235770570:=5,6c5,6%0a%3c simuPOP is distributed under [[http://www.gnu.org/licenses/gpl.html | '''a GPL license''']]. simuPOP is available on any platform where Python is available, and is currently tested under Windows (Windows 2000 and later), both 32 and 64 bit versions of Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a%3c %0a---%0a> simuPOP is distributed under [[http://www.gpl.org | '''a GPL license''']]. simuPOP is available on any platform where Python is available, and is currently tested under Windows (Windows 2000 and later), both 32 and 64 bit versions of Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a> %0a
host:1235770633=127.0.0.1
author:1235770570=
diff:1235770570:1235768158:=5,6c5,6%0a%3c simuPOP is distributed under [[http://www.gpl.org | '''a GPL license''']]. simuPOP is available on any platform where Python is available, and is currently tested under Windows (Windows 2000 and later), both 32 and 64 bit versions of Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a%3c %0a---%0a> simuPOP is distributed under '''a GPL license'''. simuPOP is available on any platform where Python is available, and is currently tested under Windows (Windows 2000 and later), both 32 and 64 bit versions of Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a> %0a
host:1235770570=127.0.0.1
author:1235768158=
diff:1235768158:1235701692:=55,60d54%0a%3c or%0a%3c %0a%3c ->@@> scons install prefix=/home/me/PythonModules@@%0a%3c %0a%3c if you use scons to build simuPOP.%0a%3c %0a
host:1235768158=127.0.0.1
author:1235701692=
diff:1235701692:1235573936:=58c58%0a%3c > PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages%0a---%0a> > set PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages%0a
host:1235701692=127.0.0.1
author:1235573936=
diff:1235573936:1235573840:=66,67d65%0a%3c The following tools are recommended, but not required for simuPOP applications.%0a%3c %0a
host:1235573936=127.0.0.1
author:1235573840=
diff:1235573840:1235514346:=16c16%0a%3c > tar zxf simuPOP-x.x.x.tar.gz%0a---%0a> > tar zxf simuPOP-x.x.x-tar.gz%0a
host:1235573840=127.0.0.1
author:1235514346=
diff:1235514346:1235514287:=53,54c53,54%0a%3c ->@@> python setup.py install --prefix=/home/me/PythonModules@@%0a%3c %0a---%0a> ->@@python setup.py install --prefix=/home/me/PythonModules@@%0a> %0a57,61c57,59%0a%3c ->[@%0a%3c > set PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages%0a%3c > export PYTHONPATH%0a%3c @]%0a%3c %0a---%0a> ->@@set PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages@@%0a> ->@@export PYTHONPATH@@%0a> %0a
host:1235514346=127.0.0.1
author:1235514287=
diff:1235514287:1235491015:=15,22c15,18%0a%3c ->[@%0a%3c > tar zxf simuPOP-x.x.x-tar.gz%0a%3c > cd simuPOP-x.x.x%0a%3c > python setup.py install%0a%3c @]%0a%3c %0a%3c to build and install simuPOP. Please consult [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/INSTALL?revision=1726 | Installation]] for detailed information about supported compilers and operating systems.%0a%3c %0a---%0a> ->@@> python setup.py install@@%0a> %0a> to build and install simuPOP. Please consult [[Main/Installation]] for detailed information about supported compilers and operating systems.%0a> %0a
host:1235514287=127.0.0.1
author:1235491015=
diff:1235491015:1232486810:=62,63c62,63%0a%3c Owing to the ''glue language'’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using [[http://www.r-project.org/ | R]] and a Python module [[http://rpy.sourceforge.net/ | RPy]]. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy if your are familiar with R.%0a%3c %0a---%0a> Owing to the ''glue language'’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using [[http://www.r-project.org/ | R]] and a Python module [[http://rpy.sourceforge.net/ | RPy]]. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy is your are familiar with R.%0a> %0a
host:1235491015=127.0.0.1
author:1232486810=
diff:1232486810:1232486349:=2c2%0a%3c %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | http://simupop.sourceforge.net/images/download_now.jpg]]%0a---%0a> %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | http://simupop.sourceforge.net/images/download_large.jpg]]%0a
host:1232486810=127.0.0.1
author:1232486349=
diff:1232486349:1232310159:=2c2%0a%3c %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | http://simupop.sourceforge.net/images/download_large.jpg]]%0a---%0a> %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | http://simupop.sourceforge.net/images/download.jpg]]%0a
host:1232486349=127.0.0.1
author:1232310159=
diff:1232310159:1232310007:=26,29c26,29%0a%3c ->Standard windows installers (32bit) are provided for Python 2.4, 2.5 and 2.6 versions. Windows 2000, XP and Vista systems are supported. If you have a version of Python installed on your system, you should be able to simply [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]], double click and install.%0a%3c %0a%3c ->Due to the lack of testing environment, simuPOP is not tested under the 64bit version of the Windows Vista system. Please make sure that you test simuPOP before you use simuPOP under this system. Please report any problem (or success story) to the simuPOP [[Main/mailing list]].%0a%3c %0a---%0a> Standard windows installers (32bit) are provided for Python 2.4, 2.5 and 2.6 versions. Windows 2000, XP and Vista systems are supported. If you have a version of Python installed on your system, you should be able to simply [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]], double click and install.%0a> %0a> Due to the lack of testing environment, simuPOP is not tested under the 64bit version of the Windows Vista system. Please make sure that you test simuPOP before you use simuPOP under this system. Please report any problem (or success story) to the simuPOP [[Main/mailing list]].%0a> %0a33,34c33,34%0a%3c -> A compiled ''.tar.gz'' file is provided so that you can uncompress to the Python site package directory or your user's directory. This binary is in Mac Universal format and supports both the PPC/x86 version of mac.%0a%3c %0a---%0a> A compiled ''.tar.gz'' file is provided so that you can uncompress to the Python site package directory or your user's directory. This binary is in Mac Universal format and supports both the PPC/x86 version of mac.%0a> %0a38,39c38,39%0a%3c -> Because there are so many different Linux flavors, it is generally recommended that you compile simuPOP from source. A compiled ''.tar.gz'' file for the RHEL5 (x86_64) operating systems is provided, just for testing purposes. Fortunately, because ''gcc'' is pre-installed for all linux systems, it should be quite straightforward to compile and install simuPOP from source.%0a%3c %0a---%0a> Because there are so many different Linux flavors, it is generally recommended that you compile simuPOP from source. A compiled ''.tar.gz'' file for the RHEL5 (x86_64) operating systems is provided, just for testing purposes. Fortunately, because ''gcc'' is pre-installed for all linux systems, it should be quite straightforward to compile and install simuPOP from source.%0a> %0a43,44c43,44%0a%3c -> A compiled ''.tar.gz'' file is provided for the Solaris 10 (SPARC) operating system. You can uncompress it to the Python site package directory or your user's directory. It should be straightforward to compile simuPOP from source on this system.%0a%3c %0a---%0a> A compiled ''.tar.gz'' file is provided for the Solaris 10 (SPARC) operating system. You can uncompress it to the Python site package directory or your user's directory. It should be straightforward to compile simuPOP from source on this system.%0a> %0a
host:1232310159=127.0.0.1
author:1232310007=
diff:1232310007:1232309936:=24,25c24,25%0a%3c Windows binaries%0a%3c %0a---%0a> !!!! Windows binaries%0a> %0a31,32c31,32%0a%3c Mac OS X binaries%0a%3c %0a---%0a> !!!! Mac OS X binaries%0a> %0a36,37c36,37%0a%3c Linux binaries%0a%3c %0a---%0a> !!!! Linux binaries%0a> %0a41,42c41,42%0a%3c Solaris binaries%0a%3c %0a---%0a> !!!! Solaris binaries%0a> %0a
host:1232310007=127.0.0.1
author:1232309936=
diff:1232309936:1232308963:=5,6c5,6%0a%3c simuPOP is distributed under '''a GPL license'''. simuPOP is available on any platform where Python is available, and is currently tested under Windows (Windows 2000 and later), both 32 and 64 bit versions of Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a%3c %0a---%0a> simuPOP is distributed under '''a GPL license'''. simuPOP is available on any platform where Python is available, and is currently tested under both 32 and 64 bit versions of Windows (Windows 2000 and later), Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a> %0a60,67c60,61%0a%3c !!! R and RPy%0a%3c %0a%3c Owing to the ''glue language'’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using [[http://www.r-project.org/ | R]] and a Python module [[http://rpy.sourceforge.net/ | RPy]]. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy is your are familiar with R.%0a%3c %0a%3c !!! wxPython%0a%3c %0a%3c Although simuPOP uses the standard tkInter GUI toolkit when a graphical user interface is needed, it can make use of a [[http://www.wxpython.org/ | wxPython]] toolkit if it is available. %0a%3c %0a---%0a> Thanks to the ‘glue language’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using R and a Python module RPy. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy is your are familiar with R. In addition, although simuPOP uses the standard tkInter GUI toolkit when a graphical user interface is needed, it can make use of a wxPython toolkit if it is available. %0a> %0a
host:1232309936=127.0.0.1
author:1232308963=
diff:1232308963:1232308911:=1d0%0a%3c (:title Download and installation:)%0a
host:1232308963=127.0.0.1
author:1232308911=
diff:1232308911:1232307698:=2,7d1%0a%3c !! Availability%0a%3c %0a%3c simuPOP is distributed under '''a GPL license'''. simuPOP is available on any platform where Python is available, and is currently tested under both 32 and 64 bit versions of Windows (Windows 2000 and later), Linux (Redhat), MacOS X and Sun Solaris systems. Different C++ compilers such as Microsoft Visual C++, gcc and Intel icc are supported under different operating systems. %0a%3c %0a%3c !!Download%0a%3c %0a55,60c49%0a%3c You may want to put these lines to your shell configuration file such as @@$HOME/.bashrc@@.%0a%3c %0a%3c !! Additional tools%0a%3c %0a%3c Thanks to the ‘glue language’ nature of Python, it is easy to inter-operate Python with other applications within a simuPOP script. For example, users can call any R function from Python/simuPOP for the purposes of visualization and statistical analysis, using R and a Python module RPy. This technique is widely used in simuPOP so it is highly recommended that you install R and rpy is your are familiar with R. In addition, although simuPOP uses the standard tkInter GUI toolkit when a graphical user interface is needed, it can make use of a wxPython toolkit if it is available. %0a%3c %0a---%0a> You may want to put these lines to your shell configuration file such as @@$HOME/.bashrc@@.%0a\ No newline at end of file%0a
host:1232308911=127.0.0.1
author:1232307698=
diff:1232307698:1232307486:=44,45c44,45%0a%3c Python will build and install simuPOP to a local directory such as @@/home/me/PythonModules/python2.x/lib/site-packages@@. You then need to tell Python where to look for simuPOP modules, using environment variable @@PYTHONPATH@@. For linux bash, the syntax is%0a%3c %0a---%0a> Python will build and install simuPOP to a local directory such as @@/home/me/PythonModules/python2.x/lib/site-packages@@. You then need to tell Python where to look for simuPOP modules, using environment variable @@PYTHONPATH@@. Under linux bash, the syntax is%0a> %0a48a49,52%0a> Under csh/tcsh, the syntax is%0a> %0a> ->@@setenv PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages@@%0a> %0a
host:1232307698=127.0.0.1
author:1232307486=
diff:1232307486:1232305152:=36,53c36,37%0a%3c A compiled ''.tar.gz'' file is provided for the Solaris 10 (SPARC) operating system. You can uncompress it to the Python site package directory or your user's directory. It should be straightforward to compile simuPOP from source on this system.%0a%3c %0a%3c !! Install simuPOP locally%0a%3c %0a%3c It is not uncommon that you do not have write permission to the Python site library directory. In this case, you can install simuPOP to some local directory where you have write permission. If you are building simuPOP from source, you can use the @@--prefix@@ option of the @@setup.py@@ script. For example,%0a%3c %0a%3c ->@@python setup.py install --prefix=/home/me/PythonModules@@%0a%3c %0a%3c Python will build and install simuPOP to a local directory such as @@/home/me/PythonModules/python2.x/lib/site-packages@@. You then need to tell Python where to look for simuPOP modules, using environment variable @@PYTHONPATH@@. Under linux bash, the syntax is%0a%3c %0a%3c ->@@set PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages@@%0a%3c ->@@export PYTHONPATH@@%0a%3c %0a%3c Under csh/tcsh, the syntax is%0a%3c %0a%3c ->@@setenv PYTHONPATH=/home/me/PythonModules/python2.x/lib/site-packages@@%0a%3c %0a%3c You may want to put these lines to your shell configuration file such as @@$HOME/.bashrc@@.%0a\ No newline at end of file%0a---%0a> A compiled ''.tar.gz'' file is provided for the Solaris 10 (SPARC) operating system. You can uncompress it to the Python site package directory or your user's directory.%0a> %0a
host:1232307486=127.0.0.1
author:1232305152=
diff:1232305152:1232301461:=26,27c26,27%0a%3c A compiled ''.tar.gz'' file is provided so that you can uncompress to the Python site package directory or your user's directory. This binary is in Mac Universal format and supports both the PPC/x86 version of mac.%0a%3c %0a---%0a> A compiled ''.tar.gz'' file is provided [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]] so that you can uncompress to the Python site package directory or your user's directory.%0a> %0a31,32c31,32%0a%3c Because there are so many different Linux flavors, it is generally recommended that you compile simuPOP from source. A compiled ''.tar.gz'' file for the RHEL5 (x86_64) operating systems is provided, just for testing purposes. Fortunately, because ''gcc'' is pre-installed for all linux systems, it should be quite straightforward to compile and install simuPOP from source.%0a%3c %0a---%0a> A compiled ''.tar.gz'' file is provided [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]] so that you can uncompress to the Python site package directory or your user's directory.%0a> %0a36,37c36,39%0a%3c A compiled ''.tar.gz'' file is provided for the Solaris 10 (SPARC) operating system. You can uncompress it to the Python site package directory or your user's directory.%0a%3c %0a---%0a> A compiled ''.tar.gz'' file is provided [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]] so that you can uncompress to the Python site package directory or your user's directory.%0a> %0a> %0a> %0a
host:1232305152=127.0.0.1
author:1232301461=
diff:1232301461:1232262724:=6,11c6,8%0a%3c The source code of each simuPOP release is available in ''.zip'' and ''.tgz'' formats. It is usually as easy as running%0a%3c %0a%3c ->@@> python setup.py install@@%0a%3c %0a%3c to build and install simuPOP. Please consult [[Main/Installation]] for detailed information about supported compilers and operating systems.%0a%3c %0a---%0a> The source code of each simuPOP release is available in ''.zip'' and ''.tgz'' formats. Please consult [[Main/Installation]] for details about how to compile simuPOP under different operating systems.%0a>  %0a> %0a14,15c11,12%0a%3c Binary versions of simuPOP for installing in popular operating systems are provided. If you can not find a version for your operating system, you will have to build your own binary version from the source package.%0a%3c %0a---%0a> Binary versions of simuPOP for installing in different operating systems can be found below. %0a> %0a19,22c16,17%0a%3c Standard windows installers (32bit) are provided for Python 2.4, 2.5 and 2.6 versions. Windows 2000, XP and Vista systems are supported. If you have a version of Python installed on your system, you should be able to simply [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]], double click and install.%0a%3c %0a%3c Due to the lack of testing environment, simuPOP is not tested under the 64bit version of the Windows Vista system. Please make sure that you test simuPOP before you use simuPOP under this system. Please report any problem (or success story) to the simuPOP [[Main/mailing list]].%0a%3c %0a---%0a> Standard windows installers are provided for Python 2.4, 2.5 and 2.6 versions. If you have a version of Python installed on your system, you should be able to simply [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]], double click and install.%0a> %0a
host:1232301461=127.0.0.1
author:1232262724=
diff:1232262724:1232262010:=1c1%0a%3c %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | http://simupop.sourceforge.net/images/download.jpg]]%0a---%0a> %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | Attach:download.jpg]]%0a13c13%0a%3c %25lfloat height=30%25 http://simupop.sourceforge.net/images/oswindows.gif%0a---%0a> %25lfloat height=30%25 Attach:oswindows.gif%0a18c18%0a%3c %25lfloat height=30%25 http://simupop.sourceforge.net/images/osmac.gif%0a---%0a> %25lfloat height=30%25 Attach:osmac.gif%0a23c23%0a%3c %25lfloat height=30%25 http://simupop.sourceforge.net/images/oslinux.png%0a---%0a> %25lfloat height=30%25 Attach:oslinux.png%0a28c28%0a%3c %25lfloat height=30%25 http://simupop.sourceforge.net/images/ossolaris.gif%0a---%0a> %25lfloat height=30%25 Attach:ossolaris.gif%0a
host:1232262724=127.0.0.1
author:1232262010=
diff:1232262010:1232261882:=26,27c26%0a%3c A compiled ''.tar.gz'' file is provided [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]] so that you can uncompress to the Python site package directory or your user's directory.%0a%3c %0a---%0a> %0a31,34c30,34%0a%3c A compiled ''.tar.gz'' file is provided [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]] so that you can uncompress to the Python site package directory or your user's directory.%0a%3c %0a%3c %0a%3c %0a---%0a> !!! Additional Software%0a> %0a> %0a> %0a> %0a
host:1232262010=127.0.0.1
author:1232261882=
diff:1232261882:1232261549:=6,8c6,7%0a%3c The source code of each simuPOP release is available in ''.zip'' and ''.tgz'' formats. Please consult [[Main/Installation]] for details about how to compile simuPOP under different operating systems.%0a%3c  %0a%3c %0a---%0a> The source code of each simuPOP release is available [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]]. Both ''.zip'' and ''.tgz'' files are provided.%0a> %0a33,34c32,35%0a%3c %0a%3c %0a---%0a> !!! Version numbers%0a> %0a> %0a> %0a
host:1232261882=127.0.0.1
author:1232261549=
diff:1232261549:1232261527:=2,3c2,3%0a%3c simuPOP is hosted on [[http://www.sourceforge.net]]. All download files are avaiable from the [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]] page of the simuPOP project.%0a%3c %0a---%0a> simuPOP is hosted on [[http://www.sourceforge.net]]. All download files are avaiable from the [[download | http://sourceforge.net/project/showfiles.php?group_id=143850]] page of the simuPOP project.%0a> %0a
host:1232261549=127.0.0.1
author:1232261527=
diff:1232261527:1232260887:=2,3c2%0a%3c simuPOP is hosted on [[http://www.sourceforge.net]]. All download files are avaiable from the [[download | http://sourceforge.net/project/showfiles.php?group_id=143850]] page of the simuPOP project.%0a%3c %0a---%0a> %0a
host:1232261527=127.0.0.1
author:1232260887=
diff:1232260887:1232260874:=1,2c1,2%0a%3c %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | Attach:download.jpg]]%0a%3c %0a---%0a> %25rframe newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | Attach:download.jpg]]%0a> %0a
host:1232260887=127.0.0.1
author:1232260874=
diff:1232260874:1232260232:=1,2d0%0a%3c %25rframe newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 [[http://sourceforge.net/project/showfiles.php?group_id=143850 | Attach:download.jpg]]%0a%3c %0a
host:1232260874=127.0.0.1
author:1232260232=
diff:1232260232:1232260167:=23c23%0a%3c %25lfloat height=30%25 Attach:ossolaris.gif%0a---%0a> %25lfloat height=30%25 Attach:ossolaris.png%0a
host:1232260232=127.0.0.1
author:1232260167=
diff:1232260167:1232254482:=23,25c23%0a%3c %25lfloat height=30%25 Attach:ossolaris.png%0a%3c !!!! Solaris binaries%0a%3c %0a---%0a> %0a32c30,31%0a%3c %0a---%0a> !!! Previous versions%0a> %0a
host:1232260167=127.0.0.1
author:1232254482=
diff:1232254482:1232228034:=3,4c3,4%0a%3c The source code of each simuPOP release is available [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]]. Both ''.zip'' and ''.tgz'' files are provided.%0a%3c %0a---%0a> %0a> %0a7,8d6%0a%3c Binary versions of simuPOP for installing in different operating systems can be found below. %0a%3c %0a12,13d9%0a%3c Standard windows installers are provided for Python 2.4, 2.5 and 2.6 versions. If you have a version of Python installed on your system, you should be able to simply [[http://sourceforge.net/project/showfiles.php?group_id=143850 | download]], double click and install.%0a%3c %0a17,18d12%0a%3c A compiled ''.tar.gz'' file is provided [[http://sourceforge.net/project/showfiles.php?group_id=143850 | here]] so that you can uncompress to the Python site package directory or your user's directory.%0a%3c %0a23d16%0a%3c %0a
host:1232254482=127.0.0.1
author:1232228034=
diff:1232228034:1232227984:=0a1,4%0a> (:page_type:web:)(:description: Download page for the LyX application, both soure code and binaries. :)%0a> %0a> (:toc:)%0a> %0a
host:1232228034=127.0.0.1
author:1232227984=
diff:1232227984:1232227965:=11c11%0a%3c %25lfloat height=30%25 Attach:oswindows.gif%0a---%0a> %25lfloat height=10%25 Attach:oswindows.gif%0a14c14%0a%3c %25lfloat height=30%25 Attach:osmac.gif%0a---%0a> %25lfloat%25 Attach:osmac.gif%0a17c17%0a%3c %25lfloat height=30%25 Attach:oslinux.png%0a---%0a> %25lfloat height=10%25 Attach:oslinux.png%0a
host:1232227984=127.0.0.1
author:1232227965=
diff:1232227965:1232227916:=11c11%0a%3c %25lfloat height=10%25 Attach:oswindows.gif%0a---%0a> %25lfloat%25 Attach:oswindows.gif%0a17c17%0a%3c %25lfloat height=10%25 Attach:oslinux.png%0a---%0a> %25lfloat%25 Attach:oslinux.png%0a
host:1232227965=127.0.0.1
author:1232227916=
diff:1232227916:1232227871:=9,13c9,13%0a%3c !!! simuPOP installers (binary versions)%0a%3c %0a%3c %25lfloat%25 Attach:oswindows.gif%0a%3c !!!! Windows binaries%0a%3c %0a---%0a> !!! LyX installers (binary versions)%0a> %0a> %0a> %25lfloat%25 Attach:oswin.gif%0a> %0a17c17%0a%3c %25lfloat%25 Attach:oslinux.png%0a---%0a> %25lfloat%25 attach:oslinux.png%0a
host:1232227916=127.0.0.1
author:1232227871=
diff:1232227871:1232227824:=13,14c13,20%0a%3c %0a%3c %25lfloat%25 Attach:osmac.gif%0a---%0a> !!!! Windows binaries (2000/XP/Vista)%0a> The standard installer can be downloaded here: [[ftp://ftp.lyx.org/pub/lyx/bin/1.6.1/LyX-1.6.1-1-Installer.exe | LyX-1.6.1-1-Installer.exe]][[%3c%3c]]%0a> Some alternative installers and a Cygwin binary can be found here:\\%0a> [[ftp://ftp.lyx.org/pub/lyx/bin/1.6.1]]%0a> %0a> These installers will setup a complete LyX environment. For more information about Windows downloads, see our [[http://wiki.lyx.org/Windows/Windows | wiki page]].%0a> %0a> %25lfloat%25 images:osmac.gif%0a16,17c22,26%0a%3c %0a%3c %25lfloat%25 attach:oslinux.png%0a---%0a> LyX for Mac OS X is available here: [[ftp://ftp.lyx.org/pub/lyx/bin/1.6.1/LyX-1.6.1-Mac-Universal.dmg |  1.6.1-Universal]]. Before you install LyX you need to install a TeX system such as [[http://www.tug.org/mactex/ | MacTeX]].%0a> %0a> Make sure that you run the LyX-installer provided in the disk image, and see the [[http://wiki.lyx.org/Mac/Mac |  LyX/Mac wiki page]] for further installation tips.%0a> %0a> %25lfloat%25 images:oslinux.gif%0a19,20c28,29%0a%3c %0a%3c %0a---%0a> Major Linux distributions take care of LyX binaries themselves and you will find LyX in their repositories. Some people are kind enough to prepare deb/rpm [[ftp://ftp.lyx.org/pub/lyx/bin/ | packages]] for latest versions. These packages are not officially supported by the LyX Team though, and if you experience problems, please try the official source distribution. For more details look in our [[http://wiki.lyx.org/LyX/LyXOnLinux|wiki]].%0a> %0a23c32,33%0a%3c %0a---%0a> If you're not using one of the installers or packages, you may need to install some [[AdditionalSoftware | additional software]].%0a> %0a26c36,37%0a%3c %0a---%0a> There are certain rules how the LyX version numbers are assigned. Read the following [[VersioningSystem|page]] for detailed information.%0a> %0a28a40,51%0a> * [[ftp://ftp.lyx.org/pub/lyx/stable/ | Source code]]%0a> * [[ftp://ftp.lyx.org/pub/lyx/bin/ | Binaries]]%0a> %0a> !!! Mirrors%0a> %0a> Please use ftp mirrors below in case ftp.lyx.org is down.%0a> %0a> * [[ftp://ftp.lip6.fr/pub/lyx/ | Laboratoire d'Informatique de Paris 6]] (France)%0a> * [[ftp://gd.tuwien.ac.at/publishing/tex/lyx/ | Vienna University of Technology]] (Austria), updated daily. ([[http://gd.tuwien.ac.at/publishing/tex/lyx/ | http mirror]])%0a> * [[ftp://ftp.ntua.gr/pub/X11/LyX/ | National Technical University of Athens]] (Greece)%0a> * [[http://sunsite.icm.edu.pl/pub/unix/editors/lyx/ |  Interdisciplinary Center for Mathematical and Computational Modelling, Warsaw University ]] (Poland)%0a> * [[http://lyx.cybermirror.org |  Cybermirror.org ]] (Karlsruhe, Germany)%0a\ No newline at end of file%0a
host:1232227871=127.0.0.1
author:1232227824=
diff:1232227824:1232170187:=6,8c6,10%0a%3c %0a%3c %0a%3c %0a---%0a> The sources of the current LyX release (version 1.6.1) can be found [[ftp://ftp.lyx.org/pub/lyx/stable/1.6.x/lyx-1.6.1.tar.gz | here]] (also in [[ftp://ftp.lyx.org/pub/lyx/stable/1.6.x/lyx-1.6.1.tar.bz2 | tar.bz2 format]]).%0a> If you don't know what ''source code'' is, see the%0a> [[article in Wikipedia->Wikipedia:Source_code]].%0a> %0a> %0a11,12c13,15%0a%3c %0a%3c %25lfloat%25 Attach:oswin.gif%0a---%0a> Binary versions of LyX for installing in different operating systems can be found below.%0a> %0a> %25lfloat%25 images:oswin.gif%0a
host:1232227824=127.0.0.1
author:1232170187=
diff:1232170187:1232170187:=1,54d0%0a%3c (:page_type:web:)(:description: Download page for the LyX application, both soure code and binaries. :)%0a%3c %0a%3c (:toc:)%0a%3c %0a%3c !!! Source code%0a%3c The sources of the current LyX release (version 1.6.1) can be found [[ftp://ftp.lyx.org/pub/lyx/stable/1.6.x/lyx-1.6.1.tar.gz | here]] (also in [[ftp://ftp.lyx.org/pub/lyx/stable/1.6.x/lyx-1.6.1.tar.bz2 | tar.bz2 format]]).%0a%3c If you don't know what ''source code'' is, see the%0a%3c [[article in Wikipedia->Wikipedia:Source_code]].%0a%3c %0a%3c %0a%3c !!! LyX installers (binary versions)%0a%3c %0a%3c Binary versions of LyX for installing in different operating systems can be found below.%0a%3c %0a%3c %25lfloat%25 images:oswin.gif%0a%3c !!!! Windows binaries (2000/XP/Vista)%0a%3c The standard installer can be downloaded here: [[ftp://ftp.lyx.org/pub/lyx/bin/1.6.1/LyX-1.6.1-1-Installer.exe | LyX-1.6.1-1-Installer.exe]][[%3c%3c]]%0a%3c Some alternative installers and a Cygwin binary can be found here:\\%0a%3c [[ftp://ftp.lyx.org/pub/lyx/bin/1.6.1]]%0a%3c %0a%3c These installers will setup a complete LyX environment. For more information about Windows downloads, see our [[http://wiki.lyx.org/Windows/Windows | wiki page]].%0a%3c %0a%3c %25lfloat%25 images:osmac.gif%0a%3c !!!! Mac OS X binaries%0a%3c LyX for Mac OS X is available here: [[ftp://ftp.lyx.org/pub/lyx/bin/1.6.1/LyX-1.6.1-Mac-Universal.dmg |  1.6.1-Universal]]. Before you install LyX you need to install a TeX system such as [[http://www.tug.org/mactex/ | MacTeX]].%0a%3c %0a%3c Make sure that you run the LyX-installer provided in the disk image, and see the [[http://wiki.lyx.org/Mac/Mac |  LyX/Mac wiki page]] for further installation tips.%0a%3c %0a%3c %25lfloat%25 images:oslinux.gif%0a%3c !!!! Linux binaries%0a%3c Major Linux distributions take care of LyX binaries themselves and you will find LyX in their repositories. Some people are kind enough to prepare deb/rpm [[ftp://ftp.lyx.org/pub/lyx/bin/ | packages]] for latest versions. These packages are not officially supported by the LyX Team though, and if you experience problems, please try the official source distribution. For more details look in our [[http://wiki.lyx.org/LyX/LyXOnLinux|wiki]].%0a%3c %0a%3c !!! Additional Software%0a%3c %0a%3c If you're not using one of the installers or packages, you may need to install some [[AdditionalSoftware | additional software]].%0a%3c %0a%3c !!! Version numbers%0a%3c %0a%3c There are certain rules how the LyX version numbers are assigned. Read the following [[VersioningSystem|page]] for detailed information.%0a%3c %0a%3c !!! Previous versions%0a%3c %0a%3c * [[ftp://ftp.lyx.org/pub/lyx/stable/ | Source code]]%0a%3c * [[ftp://ftp.lyx.org/pub/lyx/bin/ | Binaries]]%0a%3c %0a%3c !!! Mirrors%0a%3c %0a%3c Please use ftp mirrors below in case ftp.lyx.org is down.%0a%3c %0a%3c * [[ftp://ftp.lip6.fr/pub/lyx/ | Laboratoire d'Informatique de Paris 6]] (France)%0a%3c * [[ftp://gd.tuwien.ac.at/publishing/tex/lyx/ | Vienna University of Technology]] (Austria), updated daily. ([[http://gd.tuwien.ac.at/publishing/tex/lyx/ | http mirror]])%0a%3c * [[ftp://ftp.ntua.gr/pub/X11/LyX/ | National Technical University of Athens]] (Greece)%0a%3c * [[http://sunsite.icm.edu.pl/pub/unix/editors/lyx/ |  Interdisciplinary Center for Mathematical and Computational Modelling, Warsaw University ]] (Poland)%0a%3c * [[http://lyx.cybermirror.org |  Cybermirror.org ]] (Karlsruhe, Germany)%0a\ No newline at end of file%0a
host:1232170187=127.0.0.1
