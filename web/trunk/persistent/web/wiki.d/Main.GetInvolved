version=pmwiki-2.1.27 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10 (.NET CLR 3.5.30729)
author=
csum=
ctime=1232321611
host=127.0.0.1
name=Main.GetInvolved
rev=20
targets=Main.MailingList
text=%25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 http://simupop.sourceforge.net/images/helpNeeded.gif%0a%0a!! Your help is needed!%0a%0asimuPOP is a large and evolving project and it needs your help in many ways. Even if you are not a C++ or Python expert, you can help simuPOP by %0a* '''sharing''' your experience with simuPOP,%0a* '''reporting''' bugs in simuPOP programs and documentations,%0a* '''requesting''' features for your specific application,%0a* '''contributing''' your script to the [[http://simupop.sourceforge.net/cookbook | simuPOP online cookbook]], and%0a* '''suggesting''' ways to improve simuPOP, e.g. better ways to store a large amount of genotypes.%0a%0aIf you know how to program in C++ and/or Python and cannot wait for a new feature to appear, or if you would like to experiment some new feature by yourself, you can check out the subversion version of simuPOP and compile.%0a%0a!! Prepare a development environment%0a%0aYou will first need a subversion client. A subversion client is mostly likely already available under *nix system. For windows, you may want to install [[http://tortoisesvn.tigris.org | tortoiseSVN]].%0a%0a* '''Souce code''': Check out simuPOP source using command,%0a%0a->@@> svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a%0a* '''Boost C++ library''': Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_37_0@@.%0a%0a* '''SWIG''': If not already installed, download and install [[http://www.swig.org | SWIG ]]. Swig version 1.3.36 and later is recommended.%0a%0a* '''Scons''': Although the standard @@Python setup.py@@ process can be used, it is recommended that you download and install [[http://www.scons.org/ | scons]] to build simuPOP. Unlike the Python @@distutil.py@@ module, scons is a real build system that can build several files at the same time, and ignore files that have already been built.%0a%0a* '''C++ Compiler''': Get a C++ compiler. This is usually not a problem for Linux/Solaris/MacOS systems because GNU gcc/c++ is widely available on these operating systems. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6 and you will have to purchase a copy of ''Visual Stuidio.NET 2003'' for previous versions of Python.%0a%0a!! Build the subversion version of simuPOP %0a%0aIf you do not have scons, you can simply run%0a%0a->@@> python setup.py install@@%0a%0aand Python will call @@swig@@ to generate Python wrappers and build simuPOP. Otherwise, run%0a%0a->@@> scons install@@%0a%0aSeveral command line options are available, they are%0a%0a** @@-j n@@: running @@n@@ concurrent processes.%0a%0a** @@prefix=/path/to/local/dir@@: install simuPOP to a local directory.%0a%0a** One or more of @@std@@, @@op@@, @@la@@, @@laop@@, @@ba@@ and @@baop@@: These correspond to the standard, long and short allele and their optimized versions. scons will only build specified modules if their names are provided in the command line. When you are testing a program, it is a good idea to build only the standard module to save building time.%0a%0a!! Send a patch to the mailing list%0a%0aAfter you have modified simuPOP source and added your own feature, it might be a good idea to merge your changes to the simuPOP trunk (main branch) so that it can become part of the official simuPOP release. In addition to the possibility of benefiting other users, the immediate benefit to you is that your code will be examined more carefully, and if it gets accepted, you do not have to patch future simuPOP versions when you upgrade simuPOP.%0a%0aThe process to generate a patch is as easy as%0a%0a->@@$ svn diff > patch.diff@@%0a%0aSimply email this patch to the simuPOP [[Main/mailing list]] with a detailed explanation.%0a
time=1243975834
author:1243975834=
diff:1243975834:1243975759:=12,13c12,13%0a%3c If you know how to program in C++ and/or Python and cannot wait for a new feature to appear, or if you would like to experiment some new feature by yourself, you can check out the subversion version of simuPOP and compile.%0a%3c %0a---%0a> If you cannot wait for a new feature to appear in the next release, or if you would like to experiment some new feature by yourself, you can check out the subversion version of simuPOP and compile.%0a> %0a
host:1243975834=127.0.0.1
author:1243975759=
diff:1243975759:1243974636:=1,2d0%0a%3c %25rfloat newwin right text-align=right margin-top=0px margin-right=25px margin-bottom=0px margin-left=25px%25 http://simupop.sourceforge.net/images/helpNeeded.gif%0a%3c %0a
host:1243975759=127.0.0.1
author:1243974636=
diff:1243974636:1243974596:=52,53c52,53%0a%3c ->@@$ svn diff > patch.diff@@%0a%3c %0a---%0a> ->@@> svn diff > patch.diff@@%0a> %0a
host:1243974636=127.0.0.1
author:1243974596=
diff:1243974596:1243974528:=2a3,4%0a> simuPOP is an open source project, which means that every aspect of the development process is open to public. From this website, you can find the source code of simuPOP, with detailed information on how to build and install it on different operating systems. From the [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/ |  subversion activities ]], you can even know what has been done to simuPOP, and when.%0a> %0a
host:1243974596=127.0.0.1
author:1243974528=
diff:1243974528:1242960537:=1,2d0%0a%3c !! Your help is needed!%0a%3c %0a5,11d2%0a%3c simuPOP is a large and evolving project and it needs your help in many ways. Even if you are not a C++ or Python expert, you can help simuPOP by %0a%3c * '''sharing''' your experience with simuPOP,%0a%3c * '''reporting''' bugs in simuPOP programs and documentations,%0a%3c * '''requesting''' features for your specific application,%0a%3c * '''contributing''' your script to the [[http://simupop.sourceforge.net/cookbook | simuPOP online cookbook]], and%0a%3c * '''suggesting''' ways to improve simuPOP, e.g. better ways to store a large amount of genotypes.%0a%3c %0a18,19c9,10%0a%3c * '''Souce code''': Check out simuPOP source using command,%0a%3c %0a---%0a> * Check out simuPOP source using command,%0a> %0a22,29c13,20%0a%3c * '''Boost C++ library''': Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_37_0@@.%0a%3c %0a%3c * '''SWIG''': If not already installed, download and install [[http://www.swig.org | SWIG ]]. Swig version 1.3.36 and later is recommended.%0a%3c %0a%3c * '''Scons''': Although the standard @@Python setup.py@@ process can be used, it is recommended that you download and install [[http://www.scons.org/ | scons]] to build simuPOP. Unlike the Python @@distutil.py@@ module, scons is a real build system that can build several files at the same time, and ignore files that have already been built.%0a%3c %0a%3c * '''C++ Compiler''': Get a C++ compiler. This is usually not a problem for Linux/Solaris/MacOS systems because GNU gcc/c++ is widely available on these operating systems. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6 and you will have to purchase a copy of ''Visual Stuidio.NET 2003'' for previous versions of Python.%0a%3c %0a---%0a> * Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_37_0@@.%0a> %0a> * If not already installed, download and install [[http://www.swig.org | SWIG ]]. Swig version 1.3.36 and later is recommended.%0a> %0a> * Although the standard @@Python setup.py@@ process can be used, it is recommended that you download and install [[http://www.scons.org/ | scons]] to build simuPOP. Unlike the Python @@distutil.py@@ module, scons is a real build system that can build several files at the same time, and ignore files that have already been built.%0a> %0a> * Get a C++ compiler. This is usually not a problem for Linux/Solaris/MacOS systems because GNU gcc/c++ is widely available on these operating systems. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6 and you will have to purchase a copy of ''Visual Stuidio.NET 2003'' for previous versions of Python.%0a> %0a
host:1243974528=127.0.0.1
author:1242960537=
diff:1242960537:1242412378:=15,16c15,16%0a%3c * If not already installed, download and install [[http://www.swig.org | SWIG ]]. Swig version 1.3.36 and later is recommended.%0a%3c %0a---%0a> * If not already installed, download and install [[http://www.swig.org | SWIG ]]. Swig version 1.3.36 is currently used for all platforms. Other versions of swig might or might not work (1.3.39 DOES NOT work because @@swigpyrun.h@@ generated by this version is incompatible with the one generated by 1.3.36).%0a> %0a
host:1242960537=127.0.0.1
author:1242412378=
diff:1242412378:1236865883:=15,16c15,16%0a%3c * If not already installed, download and install [[http://www.swig.org | SWIG ]]. Swig version 1.3.36 is currently used for all platforms. Other versions of swig might or might not work (1.3.39 DOES NOT work because @@swigpyrun.h@@ generated by this version is incompatible with the one generated by 1.3.36).%0a%3c %0a---%0a> * If not already installed, download and install [[http://www.swig.org | SWIG ]]. A version >= 1.3.36 is recommended, but an older version might also work.%0a> %0a
host:1242412378=127.0.0.1
author:1236865883=
diff:1236865883:1236789936:=13,16c13,16%0a%3c * Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_37_0@@.%0a%3c %0a%3c * If not already installed, download and install [[http://www.swig.org | SWIG ]]. A version >= 1.3.36 is recommended, but an older version might also work.%0a%3c %0a---%0a> * Read the front portion of @@setup.py@@ and see the supported boost version. Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_37_0@@.%0a> %0a> * Download and install [[http://www.swig.org | SWIG ]], a version >= 1.3.36 is recommended, but an older version might also work.%0a> %0a19,20c19,20%0a%3c * Get a C++ compiler. This is usually not a problem for Linux/Solaris/MacOS systems because GNU gcc/c++ is widely available on these operating systems. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6 and you will have to purchase a copy of ''Visual Stuidio.NET 2003'' for previous versions of Python.%0a%3c %0a---%0a> * Get a C++ compiler. This is usually not a problem for Linux/Solaris/MacOS systems because GNU gcc/c++ is widely available on these operating systems. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6.%0a> %0a37,38c37,38%0a%3c ** One or more of @@std@@, @@op@@, @@la@@, @@laop@@, @@ba@@ and @@baop@@: These correspond to the standard, long and short allele and their optimized versions. scons will only build specified modules if their names are provided in the command line. When you are testing a program, it is a good idea to build only the standard module to save building time.%0a%3c %0a---%0a> ** One or more of @@std@@, @@op@@, @@la@@, @@laop@@, @@ba@@ and @@baop@@: These correspond to the standard, long and short allele and their optimized versions. When you are testing a program, it is a good idea to build only the standard module to save building time.%0a> %0a41,44c41,44%0a%3c After you have modified simuPOP source and added your own feature, it might be a good idea to merge your changes to the simuPOP trunk (main branch) so that it can become part of the official simuPOP release. In addition to the possibility of benefiting other users, the immediate benefit to you is that your code will be examined more carefully, and if it gets accepted, you do not have to patch future simuPOP versions when you upgrade simuPOP.%0a%3c %0a%3c The process to generate a patch is as easy as%0a%3c %0a---%0a> After you have modified simuPOP source and added your own feature, it might be a good idea to merge your change to the simuPOP trunk (main branch). In addition to the possibility of benefiting other users, the immediate benefit to you is that your code will be examined more carefully, and if it gets accepted, you do not have to patch future simuPOP versions when you upgrade simuPOP.%0a> %0a> The process to send a patch is as easy as%0a> %0a
host:1236865883=127.0.0.1
author:1236789936=
diff:1236789936:1235937744:=19,20c19,20%0a%3c * Get a C++ compiler. This is usually not a problem for Linux/Solaris/MacOS systems because GNU gcc/c++ is widely available on these operating systems. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6.%0a%3c %0a---%0a> * Get a C++ compiler. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6.%0a> %0a
host:1236789936=127.0.0.1
author:1235937744=
diff:1235937744:1235687299:=13,14c13,14%0a%3c * Read the front portion of @@setup.py@@ and see the supported boost version. Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_37_0@@.%0a%3c %0a---%0a> * Read the front portion of @@setup.py@@ and see the supported boost version. Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_27_0@@.%0a> %0a
host:1235937744=127.0.0.1
author:1235687299=
diff:1235687299:1235338110:=11,12c11,12%0a%3c ->@@> svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a%3c %0a---%0a> ->@@$ svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a> %0a25,26c25,26%0a%3c ->@@> python setup.py install@@%0a%3c %0a---%0a> ->@@$ python setup.py install@@%0a> %0a29,30c29,30%0a%3c ->@@> scons install@@%0a%3c %0a---%0a> ->@@$ scons install@@%0a> %0a45,46c45,46%0a%3c ->@@> svn diff > patch.diff@@%0a%3c %0a---%0a> ->@@$ svn diff > patch.diff@@%0a> %0a
host:1235687299=127.0.0.1
author:1235338110=
diff:1235338110:1232467238:=7,8c7,8%0a%3c You will first need a subversion client. A subversion client is mostly likely already available under *nix system. For windows, you may want to install [[http://tortoisesvn.tigris.org | tortoiseSVN]].%0a%3c %0a---%0a> You will first need a subversion client. A subversion client is mostly likely already available under *nix system. For windows, you may want to install [[tortoisesvn.tigris.org | tortoiseSVN]].%0a> %0a
host:1235338110=127.0.0.1
author:1232467238=
diff:1232467238:1232467208:=34d33%0a%3c %0a36d34%0a%3c %0a
host:1232467238=127.0.0.1
author:1232467208=
diff:1232467208:1232324620:=19,20c19,20%0a%3c * Get a C++ compiler. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]]. Note that this version only works with Python 2.6.%0a%3c %0a---%0a> * Get a C++ compiler. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]].%0a> %0a
host:1232467208=127.0.0.1
author:1232324620=
diff:1232324620:1232324584:=11,12c11,12%0a%3c ->@@$ svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a%3c %0a---%0a> ->@@> svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a> %0a25,26c25,26%0a%3c ->@@$ python setup.py install@@%0a%3c %0a---%0a> ->@@> python setup.py install@@%0a> %0a29,30c29,30%0a%3c ->@@$ scons install@@%0a%3c %0a---%0a> ->@@> scons install@@%0a> %0a43,44c43,44%0a%3c ->@@$ svn diff > patch.diff@@%0a%3c %0a---%0a> ->@@> svn diff > patch.diff@@%0a> %0a
host:1232324620=127.0.0.1
author:1232324584=
diff:1232324584:1232322523:=25,26c25,26%0a%3c ->@@> python setup.py install@@%0a%3c %0a---%0a> ->@@> python setup.py install%0a> %0a
host:1232324584=127.0.0.1
author:1232322523=
diff:1232322523:1232322504:=43,44c43,44%0a%3c ->@@> svn diff > patch.diff@@%0a%3c %0a---%0a> =>@@> svn diff > patch.diff@@%0a> %0a
host:1232322523=127.0.0.1
author:1232322504=
diff:1232322504:1232322038:=33,36c33,36%0a%3c ** @@-j n@@: running @@n@@ concurrent processes.%0a%3c ** @@prefix=/path/to/local/dir@@: install simuPOP to a local directory.%0a%3c ** One or more of @@std@@, @@op@@, @@la@@, @@laop@@, @@ba@@ and @@baop@@: These correspond to the standard, long and short allele and their optimized versions. When you are testing a program, it is a good idea to build only the standard module to save building time.%0a%3c %0a---%0a> ** @@-j n@@ running @@n@@ concurrent processes.%0a> ** @@prefix=/path/to/local/dir@@ install simuPOP to a local directory.%0a> ** One or more of @@std@@, @@op@@, @@la@@, @@laop@@, @@ba@@ and @@baop@@. These correspond to the standard, long and short allele and their optimized versions. When you are testing a program, it is a good idea to build only the standard module to save building time.%0a> %0a38,45d37%0a%3c %0a%3c After you have modified simuPOP source and added your own feature, it might be a good idea to merge your change to the simuPOP trunk (main branch). In addition to the possibility of benefiting other users, the immediate benefit to you is that your code will be examined more carefully, and if it gets accepted, you do not have to patch future simuPOP versions when you upgrade simuPOP.%0a%3c %0a%3c The process to send a patch is as easy as%0a%3c %0a%3c =>@@> svn diff > patch.diff@@%0a%3c %0a%3c Simply email this patch to the simuPOP [[Main/mailing list]] with a detailed explanation.%0a
host:1232322504=127.0.0.1
author:1232322038=
diff:1232322038:1232321611:=5,6c5,6%0a%3c !! Prepare a development environment%0a%3c %0a---%0a> !! Build the subversion version of simuPOP %0a> %0a11,12c11,12%0a%3c ->@@> svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a%3c %0a---%0a> ->@@svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a> %0a19,37c19,20%0a%3c * Get a C++ compiler. Under windows, you can get a copy of the free Visual C++ Express edition from [[http://www.microsoft.com/express/vc/ | here]].%0a%3c %0a%3c !! Build the subversion version of simuPOP %0a%3c %0a%3c If you do not have scons, you can simply run%0a%3c %0a%3c ->@@> python setup.py install%0a%3c %0a%3c and Python will call @@swig@@ to generate Python wrappers and build simuPOP. Otherwise, run%0a%3c %0a%3c ->@@> scons install@@%0a%3c %0a%3c Several command line options are available, they are%0a%3c %0a%3c ** @@-j n@@ running @@n@@ concurrent processes.%0a%3c ** @@prefix=/path/to/local/dir@@ install simuPOP to a local directory.%0a%3c ** One or more of @@std@@, @@op@@, @@la@@, @@laop@@, @@ba@@ and @@baop@@. These correspond to the standard, long and short allele and their optimized versions. When you are testing a program, it is a good idea to build only the standard module to save building time.%0a%3c %0a%3c !! Send a patch to the mailing list%0a---%0a> %0a> %0a
host:1232322038=127.0.0.1
author:1232321611=
diff:1232321611:1232321611:=1,20d0%0a%3c simuPOP is an open source project, which means that every aspect of the development process is open to public. From this website, you can find the source code of simuPOP, with detailed information on how to build and install it on different operating systems. From the [[http://simupop.svn.sourceforge.net/viewvc/simupop/trunk/ |  subversion activities ]], you can even know what has been done to simuPOP, and when.%0a%3c %0a%3c If you cannot wait for a new feature to appear in the next release, or if you would like to experiment some new feature by yourself, you can check out the subversion version of simuPOP and compile.%0a%3c %0a%3c !! Build the subversion version of simuPOP %0a%3c %0a%3c You will first need a subversion client. A subversion client is mostly likely already available under *nix system. For windows, you may want to install [[tortoisesvn.tigris.org | tortoiseSVN]].%0a%3c %0a%3c * Check out simuPOP source using command,%0a%3c %0a%3c ->@@svn co https://simupop.svn.sourceforge.net/svnroot/simupop/trunk simuPOP@@%0a%3c %0a%3c * Read the front portion of @@setup.py@@ and see the supported boost version. Download the boost C++ library from [[http://www.boost.org/ | the boost website]], decompress it to simuPOP's source directory. It should appear as a directory such as @@boost_1_27_0@@.%0a%3c %0a%3c * Download and install [[http://www.swig.org | SWIG ]], a version >= 1.3.36 is recommended, but an older version might also work.%0a%3c %0a%3c * Although the standard @@Python setup.py@@ process can be used, it is recommended that you download and install [[http://www.scons.org/ | scons]] to build simuPOP. Unlike the Python @@distutil.py@@ module, scons is a real build system that can build several files at the same time, and ignore files that have already been built.%0a%3c %0a%3c %0a%3c %0a
host:1232321611=127.0.0.1
