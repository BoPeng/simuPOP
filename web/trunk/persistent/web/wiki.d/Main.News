version=pmwiki-2.1.27 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10 (.NET CLR 3.5.30729)
author=
csum=
ctime=1232170321
host=127.0.0.1
name=Main.News
rev=41
targets=
text=(:toc:)%0a!!! Release of simuPOP 0.9.4. (May, 20, 2009)%0a%0avarPlotter in simuRPy.py has always been the most complex Python operator in simuPOP. It has a class hierarchy of five classes that handle different types of figures. A large number of parameters are provided to customize many features of your figures. As a result, this operator has been a nightmare to test and maintain. I could not even document it properly because I was not sure which combination of parameters were supposed to work.%0a%0aI am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing a giant class that provides many features, the new simuRPy module provides four operators: '''varPlotter''', '''scatterPlotter''', '''infoPlotter''' (with '''histPlotter''' and '''qqPlotter''' as two special cases) and '''boxPlotter'''. These operators are small in size but are very powerful in the sense that you can customize every aspect of your figures using derived keyword parameters.%0a%0aA derived keyword parameter is a parameter that%0a# Can be prefixed with a R function name to be passed to a specific R function. For example, @@par_mar=[1,2,2,2]@@ will pass @@mar=[1,2,2,2]@@ to R function @@par@@.%0a# Can be suffixed with an iterator name to pass different values to different replicate, subpopulation, etc. For example, @@lty_rep=[1, 2, 3]@@ will pass @@lty=1@@, @@lty=2@@, @@lty=3@@ to replicate 1, 2, and 3.%0a# Can accept an expression as its value. For example, @@plot_main='!"Freq at gen %25d"@@ @@%25 gen'@@ will pass @@main="Freq at gen 10"@@ at generation 10.%0a%0aUtilization of such a mechanism greatly simplifies the implementation of these operators, and on the other hand allows arbitrary parameters to be passed to the underlying R functions. Please visit http://simupop.sourceforge.net/manual/build/5_userGuide.html#simurpy for detailed explanations and a few examples.%0a%0aEnjoy!%0a%0a%0a!!! Release of simuPOP 0.9.3. (Apr. 3, 2009)%0a%0aI have just released the 0.9.3 version of simuPOP. This version fixes a number of bugs, including the memory leak problem with operator infoExec and infoEval. A few minor features are added to this version, most notably the ability to direct your operator output to any Python function. An example has been given in the updated user's guide. %0a%0aProgress has also been made to the simuPOP documentation. All genotype transmitters are now properly documented. A few more examples are added to the online cookbook, including a function to save simuPOP population in popGene format. This makes Yaji Xu, author of this function, the first simuPOP user who contributes to the online cookbook. Thanks!%0a%0a!!! Release of simuPOP 0.9.2. (Feb 20, 2009)%0a%0aAs I have announced before, the development of the 0.9.x series will not consider backward compatibility. This is again the case for today's 0.9.2 release. Briefly speaking, the following areas have been revisited, revised, and documented:%0a%0aOperators:%0a%0a* Initializers: @@initSex@@, @@initByFreq@@, and @@initByValue@@. No significant change.%0a* Expression and statements: @@pyOutput@@, @@pyEval@@, @@pyExec@@, @@infoEval@@, @@infoExec@@. Minor interface changes. @@infoEval@@ can no longer change individual information field.%0a* Demographic models:%0a** @@migrator@@: Change interface, add support for virtual subpopulation, add @@mode=ByIndInfo@@%0a** @@pyMigrator@@: Removed because its functionality can now be achieved by the @@ByIndInfo@@ mode of a migrator.%0a** @@splitSubPops@@: Renamed from @@splitSubPop@@. Add support for multiple subpopulations and the ability to split by information field.%0a** @@resizeSubPops@@: Add support for resize by proportions.%0a* Miscellaneous operators: Polish and add examples for @@dumper@@, @@savePopulation@@, @@setAncestralDepth@@, @@ifElse@@, @@pause@@, @@turnOnDebug@@, @@turnOffDebug@@ and @@ticToc@@.%0a%0aUtility module:%0a%0a* revise how module @@simuOpt@@ handles environmental variables and commandline options. The biggest change is the replacement of @@--noDialig@@ by @@--gui=False@@ where @@-gui@@ can take other values. This option also affects other functions that use a GUI.%0a* revise @@simuOpt.setOptions@@ which takes parameters @@gui@@ and @@revision@@. Function @@requiredRev@@ is removed.%0a* rewrite function @@simuOpt.getParam@@ and make it a class @@simuOpt.simuOpt@@. More specifically, if you have%0a%0a%0a--> [@%0apar = simuOpt.getParam(options)%0aif len(par) == 0:%0a   sys.exit(0)%0a%0a# unpack parameters%0a(help, v1, v2, v3) = par%0a%0aif help:%0a    print simuOpt.usage(par, options)%0a%0a# run simulation%0asimulate(v1, v2, v3)%0a@]%0a%0a->You should remove @@--help@@ from @@options@@ (@@-h@@ and @@--help@@ are now handled automatically) and use%0a%0a--> [@%0apar = simuOpt.simuOpt(options)%0a%0aif not par.getParam():%0a   sys.exit(0)%0a%0a# unpack parameters%0av1, v2, v3 = par.asList()%0asimulate(v1, v2, v3)%0a# or simply use parameters as attributes of the simuOpt object.%0asimulate(par.v1, par.v2, par.v3)%0a# or change your interface to pass the simuOpt object directly, which%0a# is easier to use if there are a large number of parameters.%0asimulate(par)%0a@]%0a%0aWebsite:%0a%0a* All documentations are available online at [[http://simupop.sourceforge.net/manual]].%0a* A wiki-based simuPOP online cookbook is available now at [[http://simupop.sourceforge.net/cookbook]]. All recipes that were distributed with simuPOP are moved to this website.%0a%0aThere are many more small changes. Please refer to [[http://simupop.sourceforge.net/manual/build/userGuide.html | user's guide]] and [[http://simupop.sourceforge.net/manual/build/refManual.html | reference manual]] for details.%0a%0a%0a!!!simuPOP 0.9.1 has been released today. (Jan 13, 2009)%0a%0a%0aThe first thing you need to know: this version is incompatible with previous simuPOP versions! Although the overall structure and most features are unchanged, your existing script will most likely not work without modification.%0a%0aThe second thing you need to know: although most dramatic changes have already been made, the following simuPOP versions may not be compatible with this version. Although population, simulator and mating schemes can be considered stable, operators and utility modules will be under revision. The situation will continue until simuPOP 1.0 is released. Backward compatibility will be kept again from that version. Despite of the inconveniences, you may want to take the opportunity to express your concern about simuPOP during this time because changes will be much more difficult to incorporate after simuPOP 1.0 is released.%0a%0aThe conclusion: If you are happy with simuPOP 0.8.8, keep using it. If you are learning simuPOP, or if you are starting a new project, it might be a good idea to jump in this version.%0a%0aThere has been major interface changes and some core changes during the past few months. Many functions and parameters have been renamed, combined, or removed. During this process, I have rewritten the simuPOP reference manual and user's guide. If you are not sure what have been changed, the simuPOP user's guide is now your best source of information. The operator part of this document is not finished yet, but it already has 70+ examples that demonstrate all the features of simuPOP. In addition, the simuPOP reference manual now has accurate information about every functions for population, virtual subpopulations, simulator and mating schemes.%0a%0aVersion 0.9.1 introduces two new features: support for customized chromosome types such as human mitochondrial chromosomes and support for customized genotype transmitters for mating schemes. These are quite advanced features so I will not describe them here. Please refer to relevant sections in the simuPOP user's guide if you are interested.%0a%0a%0aThere are numerous interface changes. Most important ones include:%0a%0aPopulation:%0a%0a* Rename population::savePopulation to save. Remove parameters compress and format.%0a* Support customized chromosome types.%0a* Rename arrGenotype to genotype, add setGenotype.%0a* setIndInfo and indInfo now support virtual subpopulations.%0a* Many other member functions have been adjusted.%0a%0aOperator:%0a%0a* Combine parameter output and outputExpr in operators, the latter is now specified as output='!expr'.%0a* Remove parameter grp.%0a* Allow parameter rep to accept a list of replicates.%0a* Add parameter subPops so that (some) operators can be applied to a list of (virtual) subpopulations.%0a* Add initSex() operator, remove pyInit(). Add parameter initSex to operators initByFreq and initByValue.%0a* Remove all locus=blah shortcut for loci=[blah], allow parameter loci to take both forms of input.%0a* Remove operator pyIndOperator() and some taggers.%0a* Move case control sampler and affected sibpair sampler to the Python level. largePedigreeSample and nuclearFamilySample are temporarily unavailable.%0a* Remove indRange parameter in initializer and dumper, add subPops as a list of (virtual) subpopulations.%0a%0aMating schemes:%0a%0a* Combine parameters newSubPopSize, newSubPopFunc to subPopSize, which can accept both types of parameters.%0a* Combine numOffspring, mode and numOffspringParam to numOffspring, which now accept a tuple-like input.%0a* Combine sexMode and sexParam to sexMode, which now accepts a tuple-like input.%0a* Rename pyMating to homoMating.%0a* Separate during-mating operators used in mating schemes as genotype transmitters.%0a* Allow specification of per-mating scheme during mating operators.%0a* Move all pre-defined homogeneous mating schemes to the Python level.%0a%0aSimulator:%0a%0a* Replace parameter 'end' to 'gen' in simulator::evolve.%0a* Remove the group feature and the step function.%0a* Add simulator::populations().%0a%0aExternal modules:%0a* Many functions in simuUtil are removed. They will be added later, perhaps in different form.%0a* simuOpt is unchanged.%0a* new features in simuRPy.%0a* hapMapUtil will be removed later.%0a%0aBundled scripts:%0a* They are not working yet. They will be adapted to the new interface later.%0a%0aI sincerely apologize for any inconvenience these changes may cause. I will do my best to help you modify your existing scripts if you send your questions to this list.%0a%0a%0a!!! Release of version 0.8.8 (Oct 25, 2008)%0a%0aI am pleased to announce the release of simuPOP 0.8.8.%0aThis is a maintenance release without the introduction%0aof any new feature. On the contrary, it removes several %0ararely used features and adjusts the interface of several %0afunctions. For example, all arrBlah() functions are now %0amarked obsolete. These functions can be used now, but will be %0aremoved when simuPOP 1.0 is released.%0a%0aDue to the change of interface, current simuPOP users are%0anot encouraged to upgrade.%0a%0a!!! Release of version 0.8.7 (Aug, 29, 2008)%0a%0aDear simuPOP users,%0a%0aI am glad to announce the release of simuPOP 0.8.7. This %0arelease fixes a few bugs found by a simuPOP user, and a %0along-lasting bug that prevents windows users from saving%0asimuPOP files in gzip compressed format.%0a%0aThe biggest change of this release is the drop of support%0afor binary and XML formats. They were provided for historic%0areasons but do not stand a place in simuPOP after the %0awindows/gzip bug is fixed. simuPOP files saved in these%0aobsolete formats can still be loaded. Because simuPOP now%0asupport only one file format, file extension is no longer%0aimportant. The recommended extensions are now .pop for%0apopulations and .sim for simulators.%0a%0aDue to the seriousness of a migration related bug, all %0asimuPOP users are recommended to upgrade.%0a%0a!!! Release of simuPOP 0.8.6 (Jun 20, 2008)%0a%0aDear simuPOP users,%0a%0aAfter more than two months' intensive work, simuPOP 0.8.6 %0ais finally released today. This release fixes a number of %0abugs and introduces a few important features so I strongly %0asuggest that all simuPOP users to upgrade.%0a%0aSix bugs are fixed in this release. They range from minor %0amemory management problems to incorrect interplay between %0aancestral generation, information fields and migration. An %0aupgrade is recommended because these bugs may lead to %0aincorrect output for complicated simulation scenarios that %0ainvolve migration and information fields.%0a%0aA number of new features are added to simuPOP. For example, %0amigrator now supports migration out of virtual %0asubpopulations. An obvious application of this feature is %0ato migrate mostly or only males from a population. Two new %0aoperators resizeSubPop amd initSex are introduced. The %0alatter was separated from other initializers such as %0ainitFreq and is used when you only need to initialize sex.%0a%0aThe virtual subpopulation interface has been changed a %0alittle bit. More specifically, there is now no %0asubpopulation-specific virtual subpopulations. If different %0avirtual subpopulations are desired for different %0asubpopulations, a combined virtual splitter should be used. %0aThis change is likely to break your current scripts that %0ause virtual subpopulation but changes to your scripts %0ashould be straightforward.%0a%0aCurrent development of simuPOP has been focusing on easy %0ahandling of pedigrees. Although simuPOP allows the %0aevolution of multi-generation population and provides %0amethods to record and access pedigree information, locating %0arelatives other than direct parents have been difficult. In %0athis release, two functions are provided to locate and %0atrace arbitrary relative information from a multi-%0ageneration population. An infoParentsChooser is provided to %0amate between individuals and individuals whose indexes are %0aspecified in some information fields. A new consanguineousMating %0amating scheme is provided as a shortcut for %0ainfoParentsChooser and mendelianOffspringGenerator. %0aInterested users should have a look at a new example %0adoc/cookbook/Mating_consanguineous.py. Note that these %0afeatures should be considered experimental. The whole %0ainterface may change when it stabilizes in the 0.8.7 %0arelease cycle.%0a%0aThere are many other small improvements such as the %0aaddition of individual::intInfo(), population::ancestor(), %0aand the polish of tk parameter input dialog. Please refer %0ato  ChangeLog for details.%0a%0aEnjoy!%0a%0a!!! Version 0.8.5 is released (Apr. 3, 2008)%0a%0asimuPOP 0.8.5 is released today. The previous versions of %0asimuPOP has provided a flexible framework to define %0aarbitrary nonrandom mating schemes. Despite the power of %0athis framework, users have found it unconvenient to %0aconstruct commonly used nonrandom mating schemes each time %0afrom scratch. Therefore, I have added a bunch of nonrandom %0amating schemes such as homogamy (using homogamousMating), %0apolygyny and polyandry (using polygamousMating), random %0amating with alpha individuals (using alphaMating), and %0ahaplodiploid mating.%0a%0a%0aThe last mating scheme requires native support of %0ahaplodiploid populations in the simuPOP core. Starting from %0athis version, you can specify ploidy=Haplodiploid when you %0acreate a population. Recombinator acts differently in such a%0a population by copying the first copy of paternal %0achromosomes directly to an offspring.%0a%0a%0aThis version also addresses an concern of why %0asimulator::evolve() has to specify ending generation, %0ainstead of how many generations to evolve. A new parameter%0a gen is introduced, and the use of the old parameter end is %0adepreciated (working but with a warning message).%0a%0a%0a!!! Release of simuPOP 0.8.4 (Mar, 8, 2008)%0a%0aI am glad to announce the release of simuPOP 0.8.4. This %0arelease fixes a few bugs in the new mating schemes introduced%0ain 0.8.2 and 0.8.3, and adds a few new features such as%0aa combined splitter, operators infoEval and infoExec.%0aA few examples of nonrandom mating schemes are added%0ato the doc/cookbook directory. They will be explained%0ain detail in an upcoming simuPOP cookbook.%0a%0aUsers of advanced mating schemes are highly recommended %0ato upgrade.%0a%0a!!! Release of simuPOP 0.8.3 (Jan 17, 2008)%0a%0aI am glad to announce the release of simuPOP 0.8.3. This%0aversion continues to improve non-random mating by adding %0apedigree tracing and handling capacities. For example, using %0aparentTagger, one can now save the pedigree of the whole %0aevolution, and replay the pedigree using a new pedigreeMating %0amating scheme. By creating a pedigree manually, it is easy to %0aimplement a gene-dropping algorithm using simuPOP.%0a%0aFunctions in hapMapUtil.py are also updated when I use them for more hapMap-related simulations.%0a%0a!!! Release of simuPOP 0.8.2 (Nov, 19, 2007)%0a%0aEvery major release of simuPOP introduces a major feature to%0asimuPOP. For the 0.8.x series, simuPOP is making great %0aprogresses in the simulation of heterogeneous populations.%0aThis is achieved by the introduction of virtual %0asubpopulations, and more flexible mating schemes. Operators%0aare expected to work with virtual subpopulations soon.%0a%0aA 'virtual subpopulation' refers to any groups of individuals,%0adefined by a 'virtual splitter'. For example, all males,%0aall affected individuals, or all individuals having an %0ainformation field age with value 5 can form a virtual%0asubpopulation. In contrast to subpopulations, virtual%0asubpopulations are dynamic because individual properties%0aare variable.%0a%0aBy setting virtual splitters to subpopulations, various%0aoperations can now be performed on specific virtual%0asubpopulations. For example, it is now easy to calculate LD%0abetween affected individuals, or individuals with any %0aother specific property. Future versions of simuPOP would %0aallow heterogeneous mutation, recombination etc on different%0avirtual subpopulations.%0a%0aIn this release, the mating schemes are reorganized%0ato allow heterogeneous mating schemes. Two important%0aconcepts: parents chooser and offspring generator%0aare introduced. Different parent choosers and offspring%0agenerators can be combined freely to form arbitrary%0amating schemes. Moreover, different mating schemes%0acan be applied to different subpopulation, even virtual%0asubpopulations. For example, it is now possible to %0aapply selfing to, e.g. 20%25 of the parents, and random mating%0ato the rest of the parents. Using hybrid parents%0achoosers, it is possible to implement aged population and%0anon-random mating schemes that consider, for example,%0ageographic information.%0a%0aHybrid mating schemes tend to be slow because a parents%0achooser will be called repeatedly. If the algorithm of%0apicking parents is complicated, it is recommended to%0aimplement this algorithm in C++. I have included a sample %0ascript scripts/demoNonRandomMating.py to demonstrate%0ahow to do this.%0a%0aPlease refer to the relevant section of the user's%0aguide and reference manual for details about virtual%0asubpopulations, various virtual splitters, new mating %0aschemes like selfMating, pyMating and heteroMating, and %0avarous parents choosers and offspring generators.%0aAlthough a lot of testing has been done, and the performance%0apenalty of the new features has been kept minimal, normal%0ausers are not recommended to upgrade. I expect the new%0afeatures to become mature in the 0.8.x release cycle.%0a%0a%0a!!! Release of simuPOP 0.8.1 (Oct 05, 2007)%0a%0aI am glad to announce the release of simuPOP 0.8.1. This is%0aa regular maintenance release with a few bug fixes and%0aimprovements. The first major new feature is that %0ainformation fields can now be passed to pyPenetrance %0aand pySelector operators, which allows easy simulations%0aof environmental factors. In addiiton, chromNames parameter%0ais added to the constructoe of population so that chromosome%0anames can be tracked with function chromNames(), chromName()%0aand chromByName() functions.%0a%0a!!! Release of simuPOP 0.8.0 (Aug 4, 2007)%0a%0aI am glad to announce the release of simuPOP 0.8.0, the %0aresult of more than one year's hard work since the release %0aof simuPOP 0.7.0.%0a%0aThis release contains numerous new features, optimization %0aand bug fixes that greatly improve the use of information %0afields, binary modules, and the usability of simuPOP. Most %0aimportantly, with the help from a graduate research %0aassistant, the online help system and simuPOP reference %0amanual have been overhauled. I strongly encourage all%0asimuPOP users to upgrade.%0a%0a
time=1243081564
author:1243081564=
diff:1243081564:1243081377:=11,12c11,12%0a%3c # Can accept an expression as its value. For example, @@plot_main='!"Freq at gen %25d"@@ @@%25 gen'@@ will pass @@main="Freq at gen 10"@@ at generation 10.%0a%3c %0a---%0a> # Can accept an expression as its value. For example, @@plot_main='!"Freq at gen %25d" %25 gen'@@ will pass @@main="Freq at gen 10"@@ at generation 10.%0a> %0a
host:1243081564=127.0.0.1
author:1243081377=
diff:1243081377:1242878998:=9,12c9,12%0a%3c # Can be prefixed with a R function name to be passed to a specific R function. For example, @@par_mar=[1,2,2,2]@@ will pass @@mar=[1,2,2,2]@@ to R function @@par@@.%0a%3c # Can be suffixed with an iterator name to pass different values to different replicate, subpopulation, etc. For example, @@lty_rep=[1, 2, 3]@@ will pass @@lty=1@@, @@lty=2@@, @@lty=3@@ to replicate 1, 2, and 3.%0a%3c # Can accept an expression as its value. For example, @@plot_main='!"Freq at gen %25d" %25 gen'@@ will pass @@main="Freq at gen 10"@@ at generation 10.%0a%3c %0a---%0a> 1. Can be prefixed with a R function name to be passed to a specific R function. For example, @@par_mar=[1,2,2,2]@@ will pass @@mar=[1,2,2,2]@@ to R function @@par@@.%0a> 2. Can be suffixed with an iterator name to pass different values to different replicate, subpopulation, etc. For example, @@lty_rep=[1, 2, 3]@@ will pass @@lty=1@@, @@lty=2@@, @@lty=3@@ to replicate 1, 2, and 3.%0a> 3. Can accept an expression as its value. For example, @@plot_main='!"Freq at gen %25d" %25 gen'@@ will pass @@main="Freq at gen 10"@@ at generation 10.%0a> %0a
host:1243081377=127.0.0.1
author:1242878998=
diff:1242878998:1242877359:=6,7c6,7%0a%3c I am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing a giant class that provides many features, the new simuRPy module provides four operators: '''varPlotter''', '''scatterPlotter''', '''infoPlotter''' (with '''histPlotter''' and '''qqPlotter''' as two special cases) and '''boxPlotter'''. These operators are small in size but are very powerful in the sense that you can customize every aspect of your figures using derived keyword parameters.%0a%3c %0a---%0a> I am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing an giant class that provides many features, the new simuRPy module provides four operators: '''varPlotter''', '''scatterPlotter''', '''infoPlotter''' (with '''histPlotter''' and '''qqPlotter''' as two special cases) and '''boxPlotter'''. These operators are small in size but are very powerful in the sense that you can customize every aspect of your figures using derived keyword parameters.%0a> %0a
host:1242878998=127.0.0.1
author:1242877359=
diff:1242877359:1242877036:=6,7c6,7%0a%3c I am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing an giant class that provides many features, the new simuRPy module provides four operators: '''varPlotter''', '''scatterPlotter''', '''infoPlotter''' (with '''histPlotter''' and '''qqPlotter''' as two special cases) and '''boxPlotter'''. These operators are small in size but are very powerful in the sense that you can customize every aspect of your figures using derived keyword parameters.%0a%3c %0a---%0a> I am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing on giant class that provides many features, the new simuRPy module provides four operators: varPlotter, scatterPlotter, infoPlotter (with histPlotter and qqPlotter as two special cases) and boxPlotter. These operators are small in size but are very powerful in the sense that you can customize every aspect of your figures using derived keyword parameters.%0a> %0a13,14c13,14%0a%3c Utilization of such a mechanism greatly simplifies the implementation of these operators, and on the other hand allows arbitrary parameters to be passed to the underlying R functions. Please visit http://simupop.sourceforge.net/manual/build/5_userGuide.html#simurpy for detailed explanations and a few examples.%0a%3c %0a---%0a> Utilization of such a mechanism greatly simplifies the implementation of these operators, and on the other hand allows arbitrary parameters to be passed to underlying R functions. Please visit http://simupop.sourceforge.net/manual/build/5_userGuide.html#simurpy for detailed explanation and a few examples.%0a> %0a
host:1242877359=127.0.0.1
author:1242877036=
diff:1242877036:1242876923:=13,17c13,17%0a%3c Utilization of such a mechanism greatly simplifies the implementation of these operators, and on the other hand allows arbitrary parameters to be passed to underlying R functions. Please visit http://simupop.sourceforge.net/manual/build/5_userGuide.html#simurpy for detailed explanation and a few examples.%0a%3c %0a%3c Enjoy!%0a%3c %0a%3c %0a---%0a> Using such a mechanism, the new operators can focus on the logics %0a> %0a> %0a> %0a> %0a
host:1242877036=127.0.0.1
author:1242876923=
diff:1242876923:1242876101:=6,17c6,7%0a%3c I am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing on giant class that provides many features, the new simuRPy module provides four operators: varPlotter, scatterPlotter, infoPlotter (with histPlotter and qqPlotter as two special cases) and boxPlotter. These operators are small in size but are very powerful in the sense that you can customize every aspect of your figures using derived keyword parameters.%0a%3c %0a%3c A derived keyword parameter is a parameter that%0a%3c 1. Can be prefixed with a R function name to be passed to a specific R function. For example, @@par_mar=[1,2,2,2]@@ will pass @@mar=[1,2,2,2]@@ to R function @@par@@.%0a%3c 2. Can be suffixed with an iterator name to pass different values to different replicate, subpopulation, etc. For example, @@lty_rep=[1, 2, 3]@@ will pass @@lty=1@@, @@lty=2@@, @@lty=3@@ to replicate 1, 2, and 3.%0a%3c 3. Can accept an expression as its value. For example, @@plot_main='!"Freq at gen %25d" %25 gen'@@ will pass @@main="Freq at gen 10"@@ at generation 10.%0a%3c %0a%3c Using such a mechanism, the new operators can focus on the logics %0a%3c %0a%3c %0a%3c %0a%3c %0a---%0a> I am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing on giant class that provides many features, the new simuRPy module provides four operators: varPlotter, scatterPlotter, infoPlotter (with histPlotter and qqPlotter as two special cases) and boxPlotter. These operators are small but much smaller than the old varPlotter, plot only one type of figure%0a> %0a
host:1242876923=127.0.0.1
author:1242876101=
diff:1242876101:1239829114:=2,7d1%0a%3c !!! Release of simuPOP 0.9.4. (May, 20, 2009)%0a%3c %0a%3c varPlotter in simuRPy.py has always been the most complex Python operator in simuPOP. It has a class hierarchy of five classes that handle different types of figures. A large number of parameters are provided to customize many features of your figures. As a result, this operator has been a nightmare to test and maintain. I could not even document it properly because I was not sure which combination of parameters were supposed to work.%0a%3c %0a%3c I am glad to report that varPlotter and the whole simuRPy module have been rewritten. Instead of providing on giant class that provides many features, the new simuRPy module provides four operators: varPlotter, scatterPlotter, infoPlotter (with histPlotter and qqPlotter as two special cases) and boxPlotter. These operators are small but much smaller than the old varPlotter, plot only one type of figure%0a%3c %0a
host:1242876101=127.0.0.1
author:1239829114=
diff:1239829114:1239825966:=1a2,10%0a> %0a> !!! User support is needed for the continued development of simuPOP. (April 14, 2009)%0a> %0a> The funding that has supported the development of simuPOP will soon deplete so I have applied for external support from the National Institutes of Health, USA. The reviewers recognized the significance of this program and the strength and flexibility of the existing software but they rejected the application because of 'no evidence of the current level of use of simuPOP in the community', and 'apparent lack of connect with the end users of the software'. It is advised that I submit letters of support from current simuPOP users in my revised application.%0a> %0a> If you have used simuPOP and found it useful, please consider sending me a letter of support so that I can continue the development of simuPOP. There is no fixed format in such a letter, but I guess you can write topics such as why you have used simuPOP (and not other competing software), how simuPOP has helped your research, your experience if you have contacted me for questions, value of simuPOP to your area of research, and the importance of the continued development of simuPOP. If a senior member of your team also knows simuPOP, please ask him or her to write or sign the letter as well. It would be best if you could send me the letter in PDF format in the next few days (or let me know if you plan to write such a letter later). If you are busy or uncomfortable of writing a formal letter, please consider writing a few words of support in the new [[http://simupop.sourceforge.net/Main/GuestBook) | guestbook]] page of the simuPOP website, although a letter will definitely be more helpful.%0a> %0a> Please feel free to contact me if you have any further question, and remember, the future of simuPOP is in your hand.%0a> %0a
host:1239829114=127.0.0.1
author:1239825966=
diff:1239825966:1239825952:=1,2c1,2%0a%3c (:toc:)%0a%3c %0a---%0a> (:toc all news:)%0a> %0a
host:1239825966=127.0.0.1
author:1239825952=
diff:1239825952:1239825790:=
host:1239825952=127.0.0.1
author:1239825790=
diff:1239825790:1239825739:=1,2c1,2%0a%3c (:toc all news:)%0a%3c %0a---%0a> (:toc-float all news:)%0a> %0a
host:1239825790=127.0.0.1
author:1239825739=
diff:1239825739:1239825660:=1,2c1,2%0a%3c (:toc-float all news:)%0a%3c %0a---%0a> (:toc-float:)%0a> %0a
host:1239825739=127.0.0.1
author:1239825660=
diff:1239825660:1239825636:=1,2c1,2%0a%3c (:toc-float:)%0a%3c %0a---%0a> (:*toc-float:)%0a> %0a
host:1239825660=127.0.0.1
author:1239825636=
diff:1239825636:1239825595:=1,2c1,2%0a%3c (:*toc-float:)%0a%3c %0a---%0a> (:toc-hide:)%0a> %0a
host:1239825636=127.0.0.1
author:1239825595=
diff:1239825595:1239825587:=1,2c1,2%0a%3c (:toc-hide:)%0a%3c %0a---%0a> (:toc-float-hide:)%0a> %0a
host:1239825595=127.0.0.1
author:1239825587=
diff:1239825587:1239825409:=1,2c1,2%0a%3c (:toc-float-hide:)%0a%3c %0a---%0a> (:toc-float:)%0a> %0a
host:1239825587=127.0.0.1
author:1239825409=
diff:1239825409:1239823930:=1,2c1,2%0a%3c (:toc-float:)%0a%3c %0a---%0a> (:toc:)%0a> %0a
host:1239825409=127.0.0.1
author:1239823930=
diff:1239823930:1239823907:=3,4c3,4%0a%3c !!! User support is needed for the continued development of simuPOP. (April 14, 2009)%0a%3c %0a---%0a> !!! User support is needed for the continued development of simuPOP.%0a> %0a
host:1239823930=127.0.0.1
author:1239823907=
diff:1239823907:1239823780:=2,10d1%0a%3c %0a%3c !!! User support is needed for the continued development of simuPOP.%0a%3c %0a%3c The funding that has supported the development of simuPOP will soon deplete so I have applied for external support from the National Institutes of Health, USA. The reviewers recognized the significance of this program and the strength and flexibility of the existing software but they rejected the application because of 'no evidence of the current level of use of simuPOP in the community', and 'apparent lack of connect with the end users of the software'. It is advised that I submit letters of support from current simuPOP users in my revised application.%0a%3c %0a%3c If you have used simuPOP and found it useful, please consider sending me a letter of support so that I can continue the development of simuPOP. There is no fixed format in such a letter, but I guess you can write topics such as why you have used simuPOP (and not other competing software), how simuPOP has helped your research, your experience if you have contacted me for questions, value of simuPOP to your area of research, and the importance of the continued development of simuPOP. If a senior member of your team also knows simuPOP, please ask him or her to write or sign the letter as well. It would be best if you could send me the letter in PDF format in the next few days (or let me know if you plan to write such a letter later). If you are busy or uncomfortable of writing a formal letter, please consider writing a few words of support in the new [[http://simupop.sourceforge.net/Main/GuestBook) | guestbook]] page of the simuPOP website, although a letter will definitely be more helpful.%0a%3c %0a%3c Please feel free to contact me if you have any further question, and remember, the future of simuPOP is in your hand.%0a%3c %0a
host:1239823907=127.0.0.1
author:1239823780=
diff:1239823780:1238820684:=
host:1239823780=127.0.0.1
author:1238820684=
diff:1238820684:1238819126:=4,7c4,7%0a%3c I have just released the 0.9.3 version of simuPOP. This version fixes a number of bugs, including the memory leak problem with operator infoExec and infoEval. A few minor features are added to this version, most notably the ability to direct your operator output to any Python function. An example has been given in the updated user's guide. %0a%3c %0a%3c Progress has also been made to the simuPOP documentation. All genotype transmitters are now properly documented. A few more examples are added to the online cookbook, including a function to save simuPOP population in popGene format. This makes Yaji Xu, author of this function, the first simuPOP user who contributes to the online cookbook. Thanks!%0a%3c %0a---%0a> Development of simuPOP has been stalled due to my other duties. A few minor features are added to simuPOP but they should be considered as experimental due to the lack of testing. However, a number of bugs have been fixed. The severity of the infoExec memory leak bug alone justifies this release.%0a> %0a> Progress has also been made to the simuPOP documentation. All genotype transmitters are properly documented including recombination and gene conversion. A few more examples are added to the online cookbook, including a function to export simuPOP population in popGene format.%0a> %0a
host:1238820684=127.0.0.1
author:1238819126=
diff:1238819126:1235322799:=2,7d1%0a%3c !!! Release of simuPOP 0.9.3. (Apr. 3, 2009)%0a%3c %0a%3c Development of simuPOP has been stalled due to my other duties. A few minor features are added to simuPOP but they should be considered as experimental due to the lack of testing. However, a number of bugs have been fixed. The severity of the infoExec memory leak bug alone justifies this release.%0a%3c %0a%3c Progress has also been made to the simuPOP documentation. All genotype transmitters are properly documented including recombination and gene conversion. A few more examples are added to the online cookbook, including a function to export simuPOP population in popGene format.%0a%3c %0a
host:1238819126=127.0.0.1
author:1235322799=
diff:1235322799:1235322777:=39,40c39,40%0a%3c ->You should remove @@--help@@ from @@options@@ (@@-h@@ and @@--help@@ are now handled automatically) and use%0a%3c %0a---%0a> You should remove @@--help@@ from @@options@@ (@@-h@@ and @@--help@@ are now handled automatically) and use%0a> %0a
host:1235322799=127.0.0.1
author:1235322777=
diff:1235322777:1235319004:=12c12%0a%3c ** @@pyMigrator@@: Removed because its functionality can now be achieved by the @@ByIndInfo@@ mode of a migrator.%0a---%0a> ** @@pyMigrator@@: Removed%0a13a14%0a> ** @@mergeSubPops@@: Unchanged%0a19,20c20,21%0a%3c * revise how module @@simuOpt@@ handles environmental variables and commandline options. The biggest change is the replacement of @@--noDialig@@ by @@--gui=False@@ where @@-gui@@ can take other values. This option also affects other functions that use a GUI.%0a%3c * revise @@simuOpt.setOptions@@ which takes parameters @@gui@@ and @@revision@@. Function @@requiredRev@@ is removed.%0a---%0a> * revise how module @@simuOpt@@ handles environmental variables and commandline options.%0a> * revise @@simuOpt.setOptions@@.%0a
host:1235322777=127.0.0.1
author:1235319004=
diff:1235319004:1235146657:=25c25%0a%3c --> [@%0a---%0a> =python [=%0a38,39c38,39%0a%3c @]%0a%3c %0a---%0a> =]%0a> %0a42c42%0a%3c --> [@%0a---%0a> =python [=%0a56,57c56,57%0a%3c @]%0a%3c %0a---%0a> =]%0a> %0a
host:1235319004=127.0.0.1
author:1235146657=
diff:1235146657:1235146583:=40,41c40,41%0a%3c You should remove @@--help@@ from @@options@@ (@@-h@@ and @@--help@@ are now handled automatically) and use%0a%3c %0a---%0a> You should remove @@--help@@ from @@options@@ (@@-h@@ and @@--help@@ are now handled automatically, and use%0a> %0a51c51%0a%3c # or simply use parameters as attributes of the simuOpt object.%0a---%0a> # or simply use parameters as attributes of the @@simuOpt@@ object.%0a53,54c53%0a%3c # or change your interface to pass the simuOpt object directly, which%0a%3c # is easier to use if there are a large number of parameters.%0a---%0a> # or change your interface to pass the simuOpt object directly%0a
host:1235146657=127.0.0.1
author:1235146583=
diff:1235146583:1235146550:=40,41c40,41%0a%3c You should remove @@--help@@ from @@options@@ (@@-h@@ and @@--help@@ are now handled automatically, and use%0a%3c %0a---%0a> You should remove @@--help@@ from @@options@@ and use%0a> %0a
host:1235146583=127.0.0.1
author:1235146550=
diff:1235146550:1235146489:=33c33%0a%3c if help:%0a---%0a> if help:  # help%0a40,41c40,42%0a%3c You should remove @@--help@@ from @@options@@ and use%0a%3c %0a---%0a> You should remvove options @@--help@@ from options and use%0a> %0a> %0a
host:1235146550=127.0.0.1
author:1235146489=
diff:1235146489:1235146431:=24,25c24%0a%3c %0a%3c =python [=%0a---%0a> =python \[%0a38,39c37,38%0a%3c =]%0a%3c %0a---%0a> \]%0a> %0a42,43c41%0a%3c %0a%3c =python [=%0a---%0a> =python [\%0a56,57c54,55%0a%3c =]%0a%3c %0a---%0a> \]%0a> %0a
host:1235146489=127.0.0.1
author:1235146431=
diff:1235146431:1235146408:=24c24%0a%3c =python \[%0a---%0a> =python [\%0a
host:1235146431=127.0.0.1
author:1235146408=
diff:1235146408:1235145623:=4,5c4,7%0a%3c As I have announced before, the development of the 0.9.x series will not consider backward compatibility. This is again the case for today's 0.9.2 release. Briefly speaking, the following areas have been revisited, revised, and documented:%0a%3c %0a---%0a> As I have announced before, the development of the 0.9.x series will not consider backward compatibility. This is again the case for today's 0.9.2 release.%0a> %0a> Briefly speaking, the following areas have been revisited, revised, and documented:%0a> %0a22,55c24,25%0a%3c * rewrite function @@simuOpt.getParam@@ and make it a class @@simuOpt.simuOpt@@. More specifically, if you have%0a%3c %0a%3c =python [\%0a%3c par = simuOpt.getParam(options)%0a%3c if len(par) == 0:%0a%3c    sys.exit(0)%0a%3c %0a%3c # unpack parameters%0a%3c (help, v1, v2, v3) = par%0a%3c %0a%3c if help:  # help%0a%3c     print simuOpt.usage(par, options)%0a%3c %0a%3c # run simulation%0a%3c simulate(v1, v2, v3)%0a%3c \]%0a%3c %0a%3c You should remvove options @@--help@@ from options and use%0a%3c %0a%3c =python [\%0a%3c par = simuOpt.simuOpt(options)%0a%3c %0a%3c if not par.getParam():%0a%3c    sys.exit(0)%0a%3c %0a%3c # unpack parameters%0a%3c v1, v2, v3 = par.asList()%0a%3c simulate(v1, v2, v3)%0a%3c # or simply use parameters as attributes of the @@simuOpt@@ object.%0a%3c simulate(par.v1, par.v2, par.v3)%0a%3c # or change your interface to pass the simuOpt object directly%0a%3c simulate(par)%0a%3c \]%0a%3c %0a---%0a> * rewrite function @@simuOpt.getParam@@ and make it a class @@simuOpt.simuOpt@@.%0a> %0a
host:1235146408=127.0.0.1
author:1235145623=
diff:1235145623:1235145270:=26,33c26%0a%3c Website:%0a%3c %0a%3c * All documentations are available online at [[http://simupop.sourceforge.net/manual]].%0a%3c * A wiki-based simuPOP online cookbook is available now at [[http://simupop.sourceforge.net/cookbook]]. All recipes that were distributed with simuPOP are moved to this website.%0a%3c %0a%3c There are many more small changes. Please refer to [[http://simupop.sourceforge.net/manual/build/userGuide.html | user's guide]] and [[http://simupop.sourceforge.net/manual/build/refManual.html | reference manual]] for details.%0a%3c %0a%3c %0a---%0a> %0a
host:1235145623=127.0.0.1
author:1235145270=
diff:1235145270:1232324391:=2,26c2%0a%3c !!! Release of simuPOP 0.9.2. (Feb 20, 2009)%0a%3c %0a%3c As I have announced before, the development of the 0.9.x series will not consider backward compatibility. This is again the case for today's 0.9.2 release.%0a%3c %0a%3c Briefly speaking, the following areas have been revisited, revised, and documented:%0a%3c %0a%3c Operators:%0a%3c %0a%3c * Initializers: @@initSex@@, @@initByFreq@@, and @@initByValue@@. No significant change.%0a%3c * Expression and statements: @@pyOutput@@, @@pyEval@@, @@pyExec@@, @@infoEval@@, @@infoExec@@. Minor interface changes. @@infoEval@@ can no longer change individual information field.%0a%3c * Demographic models:%0a%3c ** @@migrator@@: Change interface, add support for virtual subpopulation, add @@mode=ByIndInfo@@%0a%3c ** @@pyMigrator@@: Removed%0a%3c ** @@splitSubPops@@: Renamed from @@splitSubPop@@. Add support for multiple subpopulations and the ability to split by information field.%0a%3c ** @@mergeSubPops@@: Unchanged%0a%3c ** @@resizeSubPops@@: Add support for resize by proportions.%0a%3c * Miscellaneous operators: Polish and add examples for @@dumper@@, @@savePopulation@@, @@setAncestralDepth@@, @@ifElse@@, @@pause@@, @@turnOnDebug@@, @@turnOffDebug@@ and @@ticToc@@.%0a%3c %0a%3c Utility module:%0a%3c %0a%3c * revise how module @@simuOpt@@ handles environmental variables and commandline options.%0a%3c * revise @@simuOpt.setOptions@@.%0a%3c * rewrite function @@simuOpt.getParam@@ and make it a class @@simuOpt.simuOpt@@.%0a%3c %0a%3c %0a---%0a> %0a
host:1235145270=127.0.0.1
author:1232324391=
diff:1232324391:1232323459:=1,2c1,2%0a%3c (:toc:)%0a%3c %0a---%0a> (:toc anchors=visible:)%0a> %0a
host:1232324391=127.0.0.1
author:1232323459=
diff:1232323459:1232323293:=1,2d0%0a%3c (:toc anchors=visible:)%0a%3c %0a
host:1232323459=127.0.0.1
author:1232323293=
diff:1232323293:1232323017:=65,66c65,66%0a%3c !!! Release of version 0.8.8 (Oct 25, 2008)%0a%3c %0a---%0a> !!! Release of version 0.8.8%0a> %0a78,79c78,79%0a%3c !!! Release of version 0.8.7 (Aug, 29, 2008)%0a%3c %0a---%0a> !!! Release of version 0.8.7%0a> %0a99,293d98%0a%3c !!! Release of simuPOP 0.8.6 (Jun 20, 2008)%0a%3c %0a%3c Dear simuPOP users,%0a%3c %0a%3c After more than two months' intensive work, simuPOP 0.8.6 %0a%3c is finally released today. This release fixes a number of %0a%3c bugs and introduces a few important features so I strongly %0a%3c suggest that all simuPOP users to upgrade.%0a%3c %0a%3c Six bugs are fixed in this release. They range from minor %0a%3c memory management problems to incorrect interplay between %0a%3c ancestral generation, information fields and migration. An %0a%3c upgrade is recommended because these bugs may lead to %0a%3c incorrect output for complicated simulation scenarios that %0a%3c involve migration and information fields.%0a%3c %0a%3c A number of new features are added to simuPOP. For example, %0a%3c migrator now supports migration out of virtual %0a%3c subpopulations. An obvious application of this feature is %0a%3c to migrate mostly or only males from a population. Two new %0a%3c operators resizeSubPop amd initSex are introduced. The %0a%3c latter was separated from other initializers such as %0a%3c initFreq and is used when you only need to initialize sex.%0a%3c %0a%3c The virtual subpopulation interface has been changed a %0a%3c little bit. More specifically, there is now no %0a%3c subpopulation-specific virtual subpopulations. If different %0a%3c virtual subpopulations are desired for different %0a%3c subpopulations, a combined virtual splitter should be used. %0a%3c This change is likely to break your current scripts that %0a%3c use virtual subpopulation but changes to your scripts %0a%3c should be straightforward.%0a%3c %0a%3c Current development of simuPOP has been focusing on easy %0a%3c handling of pedigrees. Although simuPOP allows the %0a%3c evolution of multi-generation population and provides %0a%3c methods to record and access pedigree information, locating %0a%3c relatives other than direct parents have been difficult. In %0a%3c this release, two functions are provided to locate and %0a%3c trace arbitrary relative information from a multi-%0a%3c generation population. An infoParentsChooser is provided to %0a%3c mate between individuals and individuals whose indexes are %0a%3c specified in some information fields. A new consanguineousMating %0a%3c mating scheme is provided as a shortcut for %0a%3c infoParentsChooser and mendelianOffspringGenerator. %0a%3c Interested users should have a look at a new example %0a%3c doc/cookbook/Mating_consanguineous.py. Note that these %0a%3c features should be considered experimental. The whole %0a%3c interface may change when it stabilizes in the 0.8.7 %0a%3c release cycle.%0a%3c %0a%3c There are many other small improvements such as the %0a%3c addition of individual::intInfo(), population::ancestor(), %0a%3c and the polish of tk parameter input dialog. Please refer %0a%3c to  ChangeLog for details.%0a%3c %0a%3c Enjoy!%0a%3c %0a%3c !!! Version 0.8.5 is released (Apr. 3, 2008)%0a%3c %0a%3c simuPOP 0.8.5 is released today. The previous versions of %0a%3c simuPOP has provided a flexible framework to define %0a%3c arbitrary nonrandom mating schemes. Despite the power of %0a%3c this framework, users have found it unconvenient to %0a%3c construct commonly used nonrandom mating schemes each time %0a%3c from scratch. Therefore, I have added a bunch of nonrandom %0a%3c mating schemes such as homogamy (using homogamousMating), %0a%3c polygyny and polyandry (using polygamousMating), random %0a%3c mating with alpha individuals (using alphaMating), and %0a%3c haplodiploid mating.%0a%3c %0a%3c %0a%3c The last mating scheme requires native support of %0a%3c haplodiploid populations in the simuPOP core. Starting from %0a%3c this version, you can specify ploidy=Haplodiploid when you %0a%3c create a population. Recombinator acts differently in such a%0a%3c  population by copying the first copy of paternal %0a%3c chromosomes directly to an offspring.%0a%3c %0a%3c %0a%3c This version also addresses an concern of why %0a%3c simulator::evolve() has to specify ending generation, %0a%3c instead of how many generations to evolve. A new parameter%0a%3c  gen is introduced, and the use of the old parameter end is %0a%3c depreciated (working but with a warning message).%0a%3c %0a%3c %0a%3c !!! Release of simuPOP 0.8.4 (Mar, 8, 2008)%0a%3c %0a%3c I am glad to announce the release of simuPOP 0.8.4. This %0a%3c release fixes a few bugs in the new mating schemes introduced%0a%3c in 0.8.2 and 0.8.3, and adds a few new features such as%0a%3c a combined splitter, operators infoEval and infoExec.%0a%3c A few examples of nonrandom mating schemes are added%0a%3c to the doc/cookbook directory. They will be explained%0a%3c in detail in an upcoming simuPOP cookbook.%0a%3c %0a%3c Users of advanced mating schemes are highly recommended %0a%3c to upgrade.%0a%3c %0a%3c !!! Release of simuPOP 0.8.3 (Jan 17, 2008)%0a%3c %0a%3c I am glad to announce the release of simuPOP 0.8.3. This%0a%3c version continues to improve non-random mating by adding %0a%3c pedigree tracing and handling capacities. For example, using %0a%3c parentTagger, one can now save the pedigree of the whole %0a%3c evolution, and replay the pedigree using a new pedigreeMating %0a%3c mating scheme. By creating a pedigree manually, it is easy to %0a%3c implement a gene-dropping algorithm using simuPOP.%0a%3c %0a%3c Functions in hapMapUtil.py are also updated when I use them for more hapMap-related simulations.%0a%3c %0a%3c !!! Release of simuPOP 0.8.2 (Nov, 19, 2007)%0a%3c %0a%3c Every major release of simuPOP introduces a major feature to%0a%3c simuPOP. For the 0.8.x series, simuPOP is making great %0a%3c progresses in the simulation of heterogeneous populations.%0a%3c This is achieved by the introduction of virtual %0a%3c subpopulations, and more flexible mating schemes. Operators%0a%3c are expected to work with virtual subpopulations soon.%0a%3c %0a%3c A 'virtual subpopulation' refers to any groups of individuals,%0a%3c defined by a 'virtual splitter'. For example, all males,%0a%3c all affected individuals, or all individuals having an %0a%3c information field age with value 5 can form a virtual%0a%3c subpopulation. In contrast to subpopulations, virtual%0a%3c subpopulations are dynamic because individual properties%0a%3c are variable.%0a%3c %0a%3c By setting virtual splitters to subpopulations, various%0a%3c operations can now be performed on specific virtual%0a%3c subpopulations. For example, it is now easy to calculate LD%0a%3c between affected individuals, or individuals with any %0a%3c other specific property. Future versions of simuPOP would %0a%3c allow heterogeneous mutation, recombination etc on different%0a%3c virtual subpopulations.%0a%3c %0a%3c In this release, the mating schemes are reorganized%0a%3c to allow heterogeneous mating schemes. Two important%0a%3c concepts: parents chooser and offspring generator%0a%3c are introduced. Different parent choosers and offspring%0a%3c generators can be combined freely to form arbitrary%0a%3c mating schemes. Moreover, different mating schemes%0a%3c can be applied to different subpopulation, even virtual%0a%3c subpopulations. For example, it is now possible to %0a%3c apply selfing to, e.g. 20%25 of the parents, and random mating%0a%3c to the rest of the parents. Using hybrid parents%0a%3c choosers, it is possible to implement aged population and%0a%3c non-random mating schemes that consider, for example,%0a%3c geographic information.%0a%3c %0a%3c Hybrid mating schemes tend to be slow because a parents%0a%3c chooser will be called repeatedly. If the algorithm of%0a%3c picking parents is complicated, it is recommended to%0a%3c implement this algorithm in C++. I have included a sample %0a%3c script scripts/demoNonRandomMating.py to demonstrate%0a%3c how to do this.%0a%3c %0a%3c Please refer to the relevant section of the user's%0a%3c guide and reference manual for details about virtual%0a%3c subpopulations, various virtual splitters, new mating %0a%3c schemes like selfMating, pyMating and heteroMating, and %0a%3c varous parents choosers and offspring generators.%0a%3c Although a lot of testing has been done, and the performance%0a%3c penalty of the new features has been kept minimal, normal%0a%3c users are not recommended to upgrade. I expect the new%0a%3c features to become mature in the 0.8.x release cycle.%0a%3c %0a%3c %0a%3c !!! Release of simuPOP 0.8.1 (Oct 05, 2007)%0a%3c %0a%3c I am glad to announce the release of simuPOP 0.8.1. This is%0a%3c a regular maintenance release with a few bug fixes and%0a%3c improvements. The first major new feature is that %0a%3c information fields can now be passed to pyPenetrance %0a%3c and pySelector operators, which allows easy simulations%0a%3c of environmental factors. In addiiton, chromNames parameter%0a%3c is added to the constructoe of population so that chromosome%0a%3c names can be tracked with function chromNames(), chromName()%0a%3c and chromByName() functions.%0a%3c %0a%3c !!! Release of simuPOP 0.8.0 (Aug 4, 2007)%0a%3c %0a%3c I am glad to announce the release of simuPOP 0.8.0, the %0a%3c result of more than one year's hard work since the release %0a%3c of simuPOP 0.7.0.%0a%3c %0a%3c This release contains numerous new features, optimization %0a%3c and bug fixes that greatly improve the use of information %0a%3c fields, binary modules, and the usability of simuPOP. Most %0a%3c importantly, with the help from a graduate research %0a%3c assistant, the online help system and simuPOP reference %0a%3c manual have been overhauled. I strongly encourage all%0a%3c simuPOP users to upgrade.%0a%3c %0a
host:1232323293=127.0.0.1
author:1232323017=
diff:1232323017:1232322930:=1,3c1,3%0a%3c !!!simuPOP 0.9.1 has been released today. (Jan 13, 2009)%0a%3c %0a%3c %0a---%0a> !!simuPOP 0.9.1 has been released today. (Jan 13, 2009)%0a> %0a> %0a54c54,55%0a%3c * Many functions in simuUtil are removed. They will be added later, perhaps in different form.%0a---%0a> * Many functions in simuUtil are removed. They will be added later,%0a> perhaps in different form.%0a64,98c65,66%0a%3c %0a%3c !!! Release of version 0.8.8%0a%3c %0a%3c I am pleased to announce the release of simuPOP 0.8.8.%0a%3c This is a maintenance release without the introduction%0a%3c of any new feature. On the contrary, it removes several %0a%3c rarely used features and adjusts the interface of several %0a%3c functions. For example, all arrBlah() functions are now %0a%3c marked obsolete. These functions can be used now, but will be %0a%3c removed when simuPOP 1.0 is released.%0a%3c %0a%3c Due to the change of interface, current simuPOP users are%0a%3c not encouraged to upgrade.%0a%3c %0a%3c !!! Release of version 0.8.7%0a%3c %0a%3c Dear simuPOP users,%0a%3c %0a%3c I am glad to announce the release of simuPOP 0.8.7. This %0a%3c release fixes a few bugs found by a simuPOP user, and a %0a%3c long-lasting bug that prevents windows users from saving%0a%3c simuPOP files in gzip compressed format.%0a%3c %0a%3c The biggest change of this release is the drop of support%0a%3c for binary and XML formats. They were provided for historic%0a%3c reasons but do not stand a place in simuPOP after the %0a%3c windows/gzip bug is fixed. simuPOP files saved in these%0a%3c obsolete formats can still be loaded. Because simuPOP now%0a%3c support only one file format, file extension is no longer%0a%3c important. The recommended extensions are now .pop for%0a%3c populations and .sim for simulators.%0a%3c %0a%3c Due to the seriousness of a migration related bug, all %0a%3c simuPOP users are recommended to upgrade.%0a%3c %0a---%0a> Cheers,%0a> %0a
host:1232323017=127.0.0.1
author:1232322930=
diff:1232322930:1232322653:=3,14c3,40%0a%3c %0a%3c The first thing you need to know: this version is incompatible with previous simuPOP versions! Although the overall structure and most features are unchanged, your existing script will most likely not work without modification.%0a%3c %0a%3c The second thing you need to know: although most dramatic changes have already been made, the following simuPOP versions may not be compatible with this version. Although population, simulator and mating schemes can be considered stable, operators and utility modules will be under revision. The situation will continue until simuPOP 1.0 is released. Backward compatibility will be kept again from that version. Despite of the inconveniences, you may want to take the opportunity to express your concern about simuPOP during this time because changes will be much more difficult to incorporate after simuPOP 1.0 is released.%0a%3c %0a%3c The conclusion: If you are happy with simuPOP 0.8.8, keep using it. If you are learning simuPOP, or if you are starting a new project, it might be a good idea to jump in this version.%0a%3c %0a%3c There has been major interface changes and some core changes during the past few months. Many functions and parameters have been renamed, combined, or removed. During this process, I have rewritten the simuPOP reference manual and user's guide. If you are not sure what have been changed, the simuPOP user's guide is now your best source of information. The operator part of this document is not finished yet, but it already has 70+ examples that demonstrate all the features of simuPOP. In addition, the simuPOP reference manual now has accurate information about every functions for population, virtual subpopulations, simulator and mating schemes.%0a%3c %0a%3c Version 0.9.1 introduces two new features: support for customized chromosome types such as human mitochondrial chromosomes and support for customized genotype transmitters for mating schemes. These are quite advanced features so I will not describe them here. Please refer to relevant sections in the simuPOP user's guide if you are interested.%0a%3c %0a%3c %0a---%0a> The first thing you need to know: this version is incompatible with%0a> previous simuPOP versions! Although the overall structure and most%0a> features are unchanged, your existing script will most likely not work%0a> without modification.%0a> %0a> The second thing you need to know: although most dramatic changes have%0a> already been made, the following simuPOP versions may not be%0a> compatible with this version. Although population, simulator and%0a> mating schemes can be considered stable, operators and utility modules%0a> will be under revision. The situation will continue until simuPOP 1.0%0a> is released. Backward compatibility will be kept again from that%0a> version. Despite of the inconveniences, you may want to take the%0a> opportunity to express your concern about simuPOP during this time%0a> because changes will be much more difficult to incorporate after%0a> simuPOP 1.0 is released.%0a> %0a> The conclusion: If you are happy with simuPOP 0.8.8, keep using it. If%0a> you are learning simuPOP, or if you are starting a new project, it%0a> might be a good idea to jump in this version.%0a> %0a> There has been major interface changes and some core changes during%0a> the past few months. Many functions and parameters have been renamed,%0a> combined, or removed. During this process, I have rewritten the%0a> simuPOP reference manual and user's guide. If you are not sure what%0a> have been changed, the simuPOP user's guide is now your best source of%0a> information. The operator part of this document is not finished yet,%0a> but it already has 70+ examples that demonstrate all the features of%0a> simuPOP. In addition, the simuPOP reference manual now has accurate%0a> information about every functions for population, virtual%0a> subpopulations, simulator and mating schemes.%0a> %0a> Version 0.9.1 introduces two new features: support for customized%0a> chromosome types such as human mitochondrial chromosomes and support%0a> for customized genotype transmitters for mating schemes. These are%0a> quite advanced features so I will not describe them here. Please refer%0a> to relevant sections in the simuPOP user's guide if you are%0a> interested.%0a> %0a19c45,46%0a%3c * Rename population::savePopulation to save. Remove parameters compress and format.%0a---%0a> * Rename population::savePopulation to save. Remove parameters%0a> compress and format.%0a27c54,55%0a%3c * Combine parameter output and outputExpr in operators, the latter is now specified as output='!expr'.%0a---%0a> * Combine parameter output and outputExpr in operators, the latter is%0a> now specified as output='!expr'.%0a30,32c58,63%0a%3c * Add parameter subPops so that (some) operators can be applied to a list of (virtual) subpopulations.%0a%3c * Add initSex() operator, remove pyInit(). Add parameter initSex to operators initByFreq and initByValue.%0a%3c * Remove all locus=blah shortcut for loci=[blah], allow parameter loci to take both forms of input.%0a---%0a> * Add parameter subPops so that (some) operators can be applied to a%0a> list of (virtual) subpopulations.%0a> * Add initSex() operator, remove pyInit(). Add parameter initSex to%0a> operators initByFreq and initByValue.%0a> * Remove all locus=blah shortcut for loci=[blah], allow parameter loci%0a> to take both forms of input.%0a34,36c65,70%0a%3c * Move case control sampler and affected sibpair sampler to the Python level. largePedigreeSample and nuclearFamilySample are temporarily unavailable.%0a%3c * Remove indRange parameter in initializer and dumper, add subPops as a list of (virtual) subpopulations.%0a%3c %0a---%0a> * Move case control sampler and affected sibpair sampler to the Python%0a> level. largePedigreeSample and nuclearFamilySample are temporarily%0a> unavailable.%0a> * Remove indRange parameter in initializer and dumper, add subPops as%0a> a list of (virtual) subpopulations.%0a> %0a39,40c73,76%0a%3c * Combine parameters newSubPopSize, newSubPopFunc to subPopSize, which can accept both types of parameters.%0a%3c * Combine numOffspring, mode and numOffspringParam to numOffspring, which now accept a tuple-like input.%0a---%0a> * Combine parameters newSubPopSize, newSubPopFunc to subPopSize, which%0a> can accept both types of parameters.%0a> * Combine numOffspring, mode and numOffspringParam to numOffspring,%0a> which now accept a tuple-like input.%0a43c79,80%0a%3c * Separate during-mating operators used in mating schemes as genotype transmitters.%0a---%0a> * Separate during-mating operators used in mating schemes as genotype%0a> transmitters.%0a63,64c100,103%0a%3c I sincerely apologize for any inconvenience these changes may cause. I will do my best to help you modify your existing scripts if you send your questions to this list.%0a%3c %0a---%0a> I sincerely apologize for any inconvenience these changes may cause. I%0a> will do my best to help you modify your existing scripts if you send%0a> your questions to this list.%0a> %0a
host:1232322930=127.0.0.1
author:1232322653=
diff:1232322653:1232228118:=1,105d0%0a%3c !!simuPOP 0.9.1 has been released today. (Jan 13, 2009)%0a%3c %0a%3c The first thing you need to know: this version is incompatible with%0a%3c previous simuPOP versions! Although the overall structure and most%0a%3c features are unchanged, your existing script will most likely not work%0a%3c without modification.%0a%3c %0a%3c The second thing you need to know: although most dramatic changes have%0a%3c already been made, the following simuPOP versions may not be%0a%3c compatible with this version. Although population, simulator and%0a%3c mating schemes can be considered stable, operators and utility modules%0a%3c will be under revision. The situation will continue until simuPOP 1.0%0a%3c is released. Backward compatibility will be kept again from that%0a%3c version. Despite of the inconveniences, you may want to take the%0a%3c opportunity to express your concern about simuPOP during this time%0a%3c because changes will be much more difficult to incorporate after%0a%3c simuPOP 1.0 is released.%0a%3c %0a%3c The conclusion: If you are happy with simuPOP 0.8.8, keep using it. If%0a%3c you are learning simuPOP, or if you are starting a new project, it%0a%3c might be a good idea to jump in this version.%0a%3c %0a%3c There has been major interface changes and some core changes during%0a%3c the past few months. Many functions and parameters have been renamed,%0a%3c combined, or removed. During this process, I have rewritten the%0a%3c simuPOP reference manual and user's guide. If you are not sure what%0a%3c have been changed, the simuPOP user's guide is now your best source of%0a%3c information. The operator part of this document is not finished yet,%0a%3c but it already has 70+ examples that demonstrate all the features of%0a%3c simuPOP. In addition, the simuPOP reference manual now has accurate%0a%3c information about every functions for population, virtual%0a%3c subpopulations, simulator and mating schemes.%0a%3c %0a%3c Version 0.9.1 introduces two new features: support for customized%0a%3c chromosome types such as human mitochondrial chromosomes and support%0a%3c for customized genotype transmitters for mating schemes. These are%0a%3c quite advanced features so I will not describe them here. Please refer%0a%3c to relevant sections in the simuPOP user's guide if you are%0a%3c interested.%0a%3c %0a%3c There are numerous interface changes. Most important ones include:%0a%3c %0a%3c Population:%0a%3c %0a%3c * Rename population::savePopulation to save. Remove parameters%0a%3c compress and format.%0a%3c * Support customized chromosome types.%0a%3c * Rename arrGenotype to genotype, add setGenotype.%0a%3c * setIndInfo and indInfo now support virtual subpopulations.%0a%3c * Many other member functions have been adjusted.%0a%3c %0a%3c Operator:%0a%3c %0a%3c * Combine parameter output and outputExpr in operators, the latter is%0a%3c now specified as output='!expr'.%0a%3c * Remove parameter grp.%0a%3c * Allow parameter rep to accept a list of replicates.%0a%3c * Add parameter subPops so that (some) operators can be applied to a%0a%3c list of (virtual) subpopulations.%0a%3c * Add initSex() operator, remove pyInit(). Add parameter initSex to%0a%3c operators initByFreq and initByValue.%0a%3c * Remove all locus=blah shortcut for loci=[blah], allow parameter loci%0a%3c to take both forms of input.%0a%3c * Remove operator pyIndOperator() and some taggers.%0a%3c * Move case control sampler and affected sibpair sampler to the Python%0a%3c level. largePedigreeSample and nuclearFamilySample are temporarily%0a%3c unavailable.%0a%3c * Remove indRange parameter in initializer and dumper, add subPops as%0a%3c a list of (virtual) subpopulations.%0a%3c %0a%3c Mating schemes:%0a%3c %0a%3c * Combine parameters newSubPopSize, newSubPopFunc to subPopSize, which%0a%3c can accept both types of parameters.%0a%3c * Combine numOffspring, mode and numOffspringParam to numOffspring,%0a%3c which now accept a tuple-like input.%0a%3c * Combine sexMode and sexParam to sexMode, which now accepts a tuple-like input.%0a%3c * Rename pyMating to homoMating.%0a%3c * Separate during-mating operators used in mating schemes as genotype%0a%3c transmitters.%0a%3c * Allow specification of per-mating scheme during mating operators.%0a%3c * Move all pre-defined homogeneous mating schemes to the Python level.%0a%3c %0a%3c Simulator:%0a%3c %0a%3c * Replace parameter 'end' to 'gen' in simulator::evolve.%0a%3c * Remove the group feature and the step function.%0a%3c * Add simulator::populations().%0a%3c %0a%3c External modules:%0a%3c * Many functions in simuUtil are removed. They will be added later,%0a%3c perhaps in different form.%0a%3c * simuOpt is unchanged.%0a%3c * new features in simuRPy.%0a%3c * hapMapUtil will be removed later.%0a%3c %0a%3c Bundled scripts:%0a%3c * They are not working yet. They will be adapted to the new interface later.%0a%3c %0a%3c I sincerely apologize for any inconvenience these changes may cause. I%0a%3c will do my best to help you modify your existing scripts if you send%0a%3c your questions to this list.%0a%3c %0a%3c Cheers,%0a%3c %0a
host:1232322653=127.0.0.1
author:1232228118=
diff:1232228118:1232170321:=0a1,14%0a> (:page_type:web:)(:description: Page that displays the latest LyX news :)%0a> %0a> (:if auth edit:)%0a> >>rnote%3c%3c%0a> (:include SiteDocumentation#News#NewsEnd :)%0a> %0a> %25note%25This is only visible when logged in.%0a> >>%3c%3c%0a> [[%3c%3c]]%0a> (:ifend:)%0a> %0a> %0a> %0a> (:LyX_news:)%0a\ No newline at end of file%0a
host:1232228118=127.0.0.1
author:1232170321=
diff:1232170321:1232170321:=1,14d0%0a%3c (:page_type:web:)(:description: Page that displays the latest LyX news :)%0a%3c %0a%3c (:if auth edit:)%0a%3c >>rnote%3c%3c%0a%3c (:include SiteDocumentation#News#NewsEnd :)%0a%3c %0a%3c %25note%25This is only visible when logged in.%0a%3c >>%3c%3c%0a%3c [[%3c%3c]]%0a%3c (:ifend:)%0a%3c %0a%3c %0a%3c %0a%3c (:LyX_news:)%0a\ No newline at end of file%0a
host:1232170321=127.0.0.1
